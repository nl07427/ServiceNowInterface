<?xml version="1.0" encoding="utf-8" ?>
<PowershellConnectorDefinition Id="ServiceNow" Version="1.0" Description="Powershell connector for ServiceNow">
  <PluginAssemblies>
    <!--<Assembly Path=""/>-->
  </PluginAssemblies>

  <ConnectionParameters>
    <ConnectionParameter Name="Domain" Description="Domain name of the ServiceNow instance" />
    <ConnectionParameter Name="ClientId" Description="ClientId of the OAuth client." />
    <ConnectionParameter Name="ClientSecret" Description="Client secret of the OAuth client" IsSensibleData="true"/>
    <ConnectionParameter Name="UserName" Description="Snow integration username" />
    <ConnectionParameter Name="UserPassword" Description="Snow integration user password" IsSensibleData="true"/>	
    <ConnectionParameter Name="LibraryPath" Description="Absolute path to the ServiceNow.Graph.dll Windows library"/>
    <ConnectionParameter Name="PageSize" Description="The maximum number of results returned per page (default: 1000)"/>
    <ConnectionParameter Name="Task_Filter" Description="Query filter to use for filtering Task table" />
    <ConnectionParameter Name="SC_Task_Filter" Description="Query filter to use for filtering SC_Task table" />
    <ConnectionParameter Name="Sys_User_Filter" Description="Query filter to use for filtering Sys_User table" />
    <ConnectionParameter Name="Sys_User_Group_Filter" Description="Query filter to use for filtering Sys_User_Group table" />
    <ConnectionParameter Name="Sys_User_GRMember_Filter" Description="Query filter to use for filtering Sys_User_GRMember table" />
    <ConnectionParameter Name="CMN_Department_Filter" Description="Query filter to use for filtering CMN_Department table" />
    <ConnectionParameter Name="CMN_Location_Filter" Description="Query filter to use for filtering CMN_Location table" />
    <ConnectionParameter Name="CMN_Cost_Center_Filter" Description="Query filter to use for filtering CMN_Cost_Center table" />
    <ConnectionParameter Name="Core_Company_Filter" Description="Query filter to use for filtering Core_Company table" />
    <ConnectionParameter Name="SC_Request_Filter" Description="Query filter to use for filtering SC_Request table" />
    <ConnectionParameter Name="SC_Req_Item_Filter" Description="Query filter to use for filtering SC_Req_Item table" />
    <ConnectionParameter Name="SC_Catalog_Filter" Description="Query filter to use for filtering SC_Catalog table" />
    <ConnectionParameter Name="SC_Cat_Item_Filter" Description="Query filter to use for filtering SC_Cat_Item table" />
    <ConnectionParameter Name="SC_Cat_Item_Guide_Filter" Description="Query filter to use for filtering SC_Cat_Item_Guide table" />
    <ConnectionParameter Name="Item_Option_New_Filter" Description="Query filter to use for filtering Item_Option_New table" />
    <ConnectionParameter Name="SC_Item_Option_Filter" Description="Query filter to use for filtering SC_Item_Option table" />
    <ConnectionParameter Name="SC_Item_Option_MTOM_Filter" Description="Query filter to use for filtering SC_Item_Option_MTOM table" />
    <ConnectionParameter Name="Business_Unit_Filter" Description="Query filter to use for filtering the business_unit table" />
  </ConnectionParameters>

  <Initialization>
    <CustomCommands>
      <CustomCommand Name="Get-ServiceNowClient">
        <![CDATA[
    param (
        [parameter(Mandatory = $true, ValueFromPipelineByPropertyName = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$Domain,

        [parameter(Mandatory = $true, ValueFromPipelineByPropertyName = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$ClientId, 

        [parameter(Mandatory = $true, ValueFromPipelineByPropertyName = $false)]
        [ValidateNotNullOrEmpty()]
        [securestring]$ClientSecret,        

        [parameter(Mandatory = $true, ValueFromPipelineByPropertyName = $false)]
        [ValidateNotNullOrEmpty()]
        [ValidateScript( { if ( -Not (Test-Path -Path $_) ) {
                    throw "File $_  does not exist"
                }
                return $true })]
        [String]$LibraryPath, 

        [parameter(Mandatory = $true, ValueFromPipelineByPropertyName = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$UserName, 

        [parameter(Mandatory = $true, ValueFromPipelineByPropertyName = $false)]
        [ValidateNotNullOrEmpty()]
        [securestring]$UserPassword,		
		  
        [parameter(Mandatory = $false, ValueFromPipelineByPropertyName = $false)]
        [Int]$PageSize = 1000
    )

    if ($null -eq $Global:ServiceNowClient) {
        # Initialize the client
        $plainClientSecret = ""
        $ptr = [System.IntPtr]::Zero
        try {
            $ptr = [System.IntPtr]::Zero    
            $ptr = [System.Runtime.InteropServices.Marshal]::SecureStringToGlobalAllocUnicode($ClientSecret)
            $plainClientSecret = [System.Runtime.InteropServices.Marshal]::PtrToStringUni($ptr)
        }
        finally {
            [System.Runtime.InteropServices.Marshal]::ZeroFreeGlobalAllocUnicode($ptr)
        }
		  
        $plainUserPassword = ""
        $ptrUserPassword = [System.IntPtr]::Zero
        try {
            $ptrUserPassword = [System.IntPtr]::Zero    
            $ptrUserPassword = [System.Runtime.InteropServices.Marshal]::SecureStringToGlobalAllocUnicode($UserPassword)
            $plainUserPassword = [System.Runtime.InteropServices.Marshal]::PtrToStringUni($ptrUserPassword)
        }
        finally {
            [System.Runtime.InteropServices.Marshal]::ZeroFreeGlobalAllocUnicode($ptrUserPassword)
        }		  
        Add-Type -Path $LibraryPath
        $authenticationProvider = New-Object -TypeName ServiceNow.Graph.Authentication.ClientCredentialProvider -ArgumentList $Domain, $ClientId, $plainClientSecret, $UserName, $plainUserPassword
        # Last parameter is the version that is mangled in the API Gateway URL
        $Global:ServiceNowClient = New-Object -TypeName ServiceNow.Graph.Requests.ServiceNowClient -ArgumentList $Domain, $authenticationProvider, $null
        $Global:PageSize = $PageSize
    }
          ]]>
      </CustomCommand>
      <CustomCommand Name="Remove-ServiceNowClient">
        <![CDATA[
         # $Global:ServiceNowClient = $null
      ]]>
      </CustomCommand>

      <CustomCommand Name="Get-SnowUser">
        <![CDATA[
    param (
        [parameter(Mandatory = $false)]
        [String]$Id,

        [parameter(Mandatory = $false)]
        [String]$Filter,

        [parameter(Mandatory = $false)]
        [String]$Select,

        [parameter(Mandatory = $false)]
        [String]$OrderBy
    )
        
        Get-Entity -CollectionBuilder $ServiceNowClient.Users() -Id $Id -Filter $Filter -Select $Select -OrderBy $OrderBy
          ]]>
      </CustomCommand>

      <CustomCommand Name="Set-SnowUser">
        <![CDATA[
    param (
        [parameter(Mandatory = $true)]
        [string]$Id,

        [parameter(Mandatory = $false)]
        [bool]$Active,            

        [parameter(Mandatory = $false)]
        [string]$HomePhone,

        [parameter(Mandatory = $false)]
        [int]$CalendarIntegration,
            
        [parameter(Mandatory = $false)]
        [string]$Country,

        [parameter(Mandatory = $false)]
        [string]$UserSecret,

        [parameter(Mandatory = $false)]
        [string]$Source,

        [parameter(Mandatory = $false)]
        [string]$State,

        [parameter(Mandatory = $false)]
        [string]$FirstName,

        [parameter(Mandatory = $false)]
        [string]$MiddleName,

        [parameter(Mandatory = $false)]
        [string]$LastName,

        [parameter(Mandatory = $false)]
        [string]$EmployeeNumber,

        [parameter(Mandatory = $false)]
        [string]$Gender,
            
        [parameter(Mandatory = $false)]
        [string]$UserName,
            
        [parameter(Mandatory = $false)]
        [string]$DateFormat,
            
        [parameter(Mandatory = $false)]
        [string]$TimeZone,

        [parameter(Mandatory = $false)]
        [string]$City,

        [parameter(Mandatory = $false)]
        [string]$Title,

        [parameter(Mandatory = $false)]
        [bool]$InternalIntegrationUser,

        [parameter(Mandatory = $false)]
        [string]$Street,

        [parameter(Mandatory = $false)]
        [string]$Email,

        [parameter(Mandatory = $false)]
        [string]$Introduction,

        [parameter(Mandatory = $false)]
        [string]$PreferredLanguage,

        [parameter(Mandatory = $false)]
        [string]$Phone,

        [parameter(Mandatory = $false)]
        [string]$MobilePhone,

        [parameter(Mandatory = $false)]
        [string]$CostCenter,
            
        [parameter(Mandatory = $false)]
        [string]$Manager,

        [parameter(Mandatory = $false)]
        [string]$Notification,

        [parameter(Mandatory = $false)]
        [string]$Department,

        [parameter(Mandatory = $false)]
        [string]$Company,

        [parameter(Mandatory = $false)]
        [string]$Location,

        [parameter(Mandatory = $false)]
        [string]$TimeFormat,

        [parameter(Mandatory = $false)]
        [string]$Zip,

        [parameter(Mandatory = $false)]
        [string]$SsoSource,

        [parameter(Mandatory = $false)]
        [bool]$Vip,

        [parameter(Mandatory = $false)]
        [bool]$EnableMultifactorAuthentication,

        [parameter(Mandatory = $false)]
        [bool]$LockedOut

    )
        
    $userRequestBuilder = $ServiceNowClient.Users()[$Id] 
    $userUpdate = New-Object -TypeName ServiceNow.Graph.Models.User
    $parameters = $MyInvocation.BoundParameters  
    $userUpdate.Id = $Id
            
    if ($parameters.ContainsKey("Active")) {
        $userUpdate.Active = $Active
    }
    if ($parameters.ContainsKey("LockedOut")) {
        $userUpdate.LockedOut = $LockedOut
    }    
    if ($parameters.ContainsKey("HomePhone")) {
        $userUpdate.HomePhone = $HomePhone
    }
    if ($parameters.ContainsKey("CalendarIntegration")) {
        $userUpdate.CalendarIntegration = $CalendarIntegration
    }
    if ($parameters.ContainsKey("Country")) {
        $userUpdate.Country = $Country
    }
    if ($parameters.ContainsKey("UserSecret")) {
        $userUpdate.UserPassword = $UserSecret
    }
    if ($parameters.ContainsKey("Source")) {
        $userUpdate.Source = $Source
    }
    if ($parameters.ContainsKey("State")) {
        $userUpdate.State = $State
    }
    if ($parameters.ContainsKey("FirstName")) {
        $userUpdate.FirstName = $FirstName
    }
    if ($parameters.ContainsKey("MiddleName")) {
        $userUpdate.MiddleName = $MiddleName
    }
    if ($parameters.ContainsKey("LastName")) {
        $userUpdate.LastName = $LastName
    }       
    if ($parameters.ContainsKey("EmployeeNumber")) {
        $userUpdate.EmployeeNumber = $EmployeeNumber
    } 
    if ($parameters.ContainsKey("Gender")) {
        $userUpdate.Gender = $Gender
    } 
    if ($parameters.ContainsKey("UserName")) {
        $userUpdate.UserName = $UserName
    } 
    if ($parameters.ContainsKey("DateFormat")) {
        $userUpdate.DateFormat = $DateFormat
    } 
    if ($parameters.ContainsKey("TimeZone")) {
        $userUpdate.TimeZone = $TimeZone
    } 
    if ($parameters.ContainsKey("City")) {
        $userUpdate.City = $City
    } 
    if ($parameters.ContainsKey("Title")) {
        $userUpdate.Title = $Title
    } 
    if ($parameters.ContainsKey("InternalIntegrationUser")) {
        $userUpdate.InternalIntegrationUser = $InternalIntegrationUser
    } 
    if ($parameters.ContainsKey("Street")) {
        $userUpdate.Street = $Street
    } 
    if ($parameters.ContainsKey("Email")) {
        $userUpdate.Email = $Email
    } 
    if ($parameters.ContainsKey("Introduction")) {
        $userUpdate.Introduction = $Introduction
    } 
    if ($parameters.ContainsKey("PreferredLanguage")) {
        $userUpdate.PreferredLanguage = $PreferredLanguage
    } 
    if ($parameters.ContainsKey("Phone")) {
        $userUpdate.Phone = $Phone
    } 
    if ($parameters.ContainsKey("Division")) {
       $userUpdate.Division = $Division
    }    
    if ($parameters.ContainsKey("MobilePhone")) {
        $userUpdate.MobilePhone = $MobilePhone
    } 
    if ($parameters.ContainsKey("CostCenter")) {
        $userUpdate.CostCenter = Get-ReferenceLink $CostCenter
    } 
    if ($parameters.ContainsKey("Manager")) {
        $userUpdate.Manager = Get-ReferenceLink $Manager
    } 
    if ($parameters.ContainsKey("Notification")) {
        $userUpdate.Notification = $Notification
    } 
    if ($parameters.ContainsKey("Company")) {
        $userUpdate.Company = Get-ReferenceLink $Company
    } 
    if ($parameters.ContainsKey("Department")) {
        $userUpdate.Department = Get-ReferenceLink $Department
    } 
    if ($parameters.ContainsKey("Location")) {
        $userUpdate.Location = Get-ReferenceLink $Location
    } 
    if ($parameters.ContainsKey("TimeFormat")) {
        $userUpdate.TimeFormat = $TimeFormat
    } 
    if ($parameters.ContainsKey("Zip")) {
        $userUpdate.Zip = $Zip
    } 
    if ($parameters.ContainsKey("Vip")) {
        $userUpdate.Vip = $Vip
    } 
    if ($parameters.ContainsKey("EnableMultifactorAuthentication")) {
        $userUpdate.EnableMultifactorAuthentication = $EnableMultifactorAuthentication
    } 

   $userRequestBuilder.Request().UpdateAsync($userUpdate).GetAwaiter().GetResult()
          ]]>
      </CustomCommand>

      <CustomCommand Name="New-SnowUser">
        <![CDATA[
    param (
        [parameter(Mandatory = $false)]
        [bool]$Active,            

        [parameter(Mandatory = $false)]
        [string]$HomePhone,

        [parameter(Mandatory = $false)]
        [int]$CalendarIntegration,
            
        [parameter(Mandatory = $false)]
        [string]$Country,
            
        [parameter(Mandatory = $false)]
        [string]$Division,

        [parameter(Mandatory = $false)]
        [string]$UserSecret,

        [parameter(Mandatory = $false)]
        [string]$Source,

        [parameter(Mandatory = $false)]
        [string]$State,

        [parameter(Mandatory = $false)]
        [string]$FirstName,

        [parameter(Mandatory = $false)]
        [string]$MiddleName,

        [parameter(Mandatory = $false)]
        [string]$LastName,

        [parameter(Mandatory = $false)]
        [string]$EmployeeNumber,

        [parameter(Mandatory = $false)]
        [string]$Gender,
            
        [parameter(Mandatory = $false)]
        [string]$UserName,
            
        [parameter(Mandatory = $false)]
        [string]$DateFormat,
            
        [parameter(Mandatory = $false)]
        [string]$TimeZone,

        [parameter(Mandatory = $false)]
        [string]$City,

        [parameter(Mandatory = $false)]
        [string]$Title,

        [parameter(Mandatory = $false)]
        [bool]$InternalIntegrationUser,

        [parameter(Mandatory = $false)]
        [string]$Street,

        [parameter(Mandatory = $false)]
        [string]$Email,

        [parameter(Mandatory = $false)]
        [string]$Introduction,

        [parameter(Mandatory = $false)]
        [string]$PreferredLanguage,

        [parameter(Mandatory = $false)]
        [string]$Phone,

        [parameter(Mandatory = $false)]
        [string]$MobilePhone,

        [parameter(Mandatory = $false)]
        [string]$CostCenter,
            
        [parameter(Mandatory = $false)]
        [string]$Manager,

        [parameter(Mandatory = $false)]
        [string]$Notification,

        [parameter(Mandatory = $false)]
        [string]$Department,

        [parameter(Mandatory = $false)]
        [string]$Company,

        [parameter(Mandatory = $false)]
        [string]$Location,

        [parameter(Mandatory = $false)]
        [string]$TimeFormat,

        [parameter(Mandatory = $false)]
        [string]$Zip,

        [parameter(Mandatory = $false)]
        [string]$SsoSource,

        [parameter(Mandatory = $false)]
        [bool]$Vip,

        [parameter(Mandatory = $false)]
        [bool]$EnableMultifactorAuthentication
    )
        
    $userRequestBuilder = $ServiceNowClient.Users()
    $user = New-Object -TypeName ServiceNow.Graph.Models.User
    $parameters = $MyInvocation.BoundParameters  
            

    if ($parameters.ContainsKey("Active")) {
        $user.Active = $Active
    }
    if ($parameters.ContainsKey("HomePhone")) {
        $user.HomePhone = $HomePhone
    }
    if ($parameters.ContainsKey("CalendarIntegration")) {
        $user.CalendarIntegration = $CalendarIntegration
    }
    if ($parameters.ContainsKey("Division")) {
        $user.Division = $Division
    }
    if ($parameters.ContainsKey("Country")) {
        $user.Country = $Country
    }
    if ($parameters.ContainsKey("UserSecret")) {
        $user.UserPassword = $UserSecret
    }
    if ($parameters.ContainsKey("Source")) {
        $user.Source = $Source
    }
    if ($parameters.ContainsKey("State")) {
        $user.State = $State
    }
    if ($parameters.ContainsKey("FirstName")) {
        $user.FirstName = $FirstName
    }
    if ($parameters.ContainsKey("MiddleName")) {
        $user.MiddleName = $MiddleName
    }
    if ($parameters.ContainsKey("LastName")) {
        $user.LastName = $LastName
    }       
    if ($parameters.ContainsKey("EmployeeNumber")) {
        $user.EmployeeNumber = $EmployeeNumber
    } 
    if ($parameters.ContainsKey("Gender")) {
        $user.Gender = $Gender
    } 
    if ($parameters.ContainsKey("UserName")) {
        $user.UserName = $UserName
    } 
    if ($parameters.ContainsKey("DateFormat")) {
        $user.DateFormat = $DateFormat
    } 
    if ($parameters.ContainsKey("TimeZone")) {
        $user.TimeZone = $TimeZone
    } 
    if ($parameters.ContainsKey("City")) {
        $user.City = $City
    } 
    if ($parameters.ContainsKey("Title")) {
        $user.Title = $Title
    } 
    if ($parameters.ContainsKey("InternalIntegrationUser")) {
        $user.InternalIntegrationUser = $InternalIntegrationUser
    } 
    if ($parameters.ContainsKey("Street")) {
        $user.Street = $Street
    } 
    if ($parameters.ContainsKey("Email")) {
        $user.Email = $Email
    } 
    if ($parameters.ContainsKey("Introduction")) {
        $user.Introduction = $Introduction
    } 
    if ($parameters.ContainsKey("PreferredLanguage")) {
        $user.PreferredLanguage = $PreferredLanguage
    } 
    if ($parameters.ContainsKey("Phone")) {
        $user.Phone = $Phone
    } 
    if ($parameters.ContainsKey("MobilePhone")) {
        $user.MobilePhone = $MobilePhone
    } 
    if ($parameters.ContainsKey("CostCenter")) {
        $user.CostCenter = Get-ReferenceLink $CostCenter
    } 
    if ($parameters.ContainsKey("Manager")) {
        $user.Manager = Get-ReferenceLink $Manager
    } 
    if ($parameters.ContainsKey("Notification")) {
        $user.Notification = $Notification
    } 
    if ($parameters.ContainsKey("Company")) {
        $user.Company = Get-ReferenceLink $Company
    } 
    if ($parameters.ContainsKey("Department")) {
        $user.Department = Get-ReferenceLink $Department
    } 
    if ($parameters.ContainsKey("Location")) {
        $user.Location = Get-ReferenceLink $Location
    } 
    if ($parameters.ContainsKey("TimeFormat")) {
        $user.TimeFormat = $TimeFormat
    } 
    if ($parameters.ContainsKey("Zip")) {
        $user.Zip = $Zip
    } 
    if ($parameters.ContainsKey("Vip")) {
        $user.Vip = $Vip
    } 
    if ($parameters.ContainsKey("EnableMultifactorAuthentication")) {
        $user.EnableMultifactorAuthentication = $EnableMultifactorAuthentication
    } 

     $userRequestBuilder.Request().AddAsync($user).GetAwaiter().GetResult()
            ]]>
      </CustomCommand>

      <CustomCommand Name="Remove-SnowUser">
        <![CDATA[
    param (
        [parameter(Mandatory = $true)]
        [string]$Id
    )
        
    $ServiceNowClient.Users()[$id].DeleteAsync().GetAwaiter().GetResult() | Out-Null
            ]]>
      </CustomCommand>

      <CustomCommand Name="Get-SnowGroup">
        <![CDATA[
    param (
        [parameter(Mandatory = $false)]
        [String]$Id,

        [parameter(Mandatory = $false)]
        [String]$Filter,

        [parameter(Mandatory = $false)]
        [String]$Select,

        [parameter(Mandatory = $false)]
        [String]$OrderBy
    )
    
        Get-Entity -CollectionBuilder $ServiceNowClient.UserGroups() -Id $Id -Filter $Filter -Select $Select -OrderBy $OrderBy
          ]]>
      </CustomCommand>

      <CustomCommand Name="Remove-SnowGroup">
        <![CDATA[
    param (
        [parameter(Mandatory = $true)]
        [string]$Id
    )
    
    $ServiceNowClient.UserGroups()[$id].Request().DeleteAsync().GetAwaiter().GetResult() | Out-Null
            ]]>
      </CustomCommand>

      <CustomCommand Name="New-SnowGroup">
        <![CDATA[
    param (
        [parameter(Mandatory = $false)]
        [string]$DefaultAssignee,

        [parameter(Mandatory = $false)]
        [string]$Description,

        [parameter(Mandatory = $false)]
        [bool]$Active,            

        [parameter(Mandatory = $false)]
        [bool]$ExcludeManager,

        [parameter(Mandatory = $false)]
        [string]$HourlyRate,
        
        [parameter(Mandatory = $false)]
        [bool]$IncludeMembers,

        [parameter(Mandatory = $false)]
        [string]$Manager,

        [parameter(Mandatory = $false)]
        [string]$Name,

        [parameter(Mandatory = $false)]
        [string]$ParentGroup,

        [parameter(Mandatory = $false)]
        [string]$Roles,

        [parameter(Mandatory = $false)]
        [string]$Source,

        [parameter(Mandatory = $false)]
        [string]$Type,

        [parameter(Mandatory = $false)]
        [string]$Email,

        [parameter(Mandatory = $false)]
        [string]$CostCenter
    )
    
    $groupRequestBuilder = $ServiceNowClient.UserGroups()
    $group = New-Object -TypeName ServiceNow.Graph.Models.UserGroup
    $parameters = $MyInvocation.BoundParameters  

    if ($parameters.ContainsKey("Active")) {
        $group.Active = $Active
    }
    if ($parameters.ContainsKey("CostCenter")) {
        if (-not [string]::IsNullOrEmpty($CostCenter)) {
            $group.CostCenter = Get-ReferenceLink $CostCenter
        }
        else {
            $group.CostCenter = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    } 
    if ($parameters.ContainsKey("Description")) {
        $group.Description = $Description
    } 
    if ($parameters.ContainsKey("DefaultAssignee")) {
        if (-not [string]::IsNullOrEmpty($DefaultAssignee)) {
            $group.DefaultAssignee = Get-ReferenceLink $DefaultAssignee
        }
        else {
            $group.DefaultAssignee = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    } 
    if ($parameters.ContainsKey("Email")) {
        $group.Email = $Email
    } 
    if ($parameters.ContainsKey("ExcludeManager")) {
        $group.ExcludeManager = $ExcludeManager
    }
    if ($parameters.ContainsKey("HourlyRate")) {
        $group.HourlyRate = $HourlyRate
    }
    if ($parameters.ContainsKey("IncludeMembers")) {
        $group.IncludeMembers = $IncludeMembers
    }
    if ($parameters.ContainsKey("Name")) {
        $group.Name = $Name
    }
    if ($parameters.ContainsKey("Manager")) {
        if (-not [string]::IsNullOrEmpty($Manager)) {
            $group.Manager = Get-ReferenceLink $Manager
        }
        else {
            $group.Manager = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    } 
    if ($parameters.ContainsKey("Roles")) {
        $group.Roles = $Roles
    } 
    if ($parameters.ContainsKey("ParentGroup")) {
        if (-not [string]::IsNullOrEmpty($ParentGroup)) {
            $group.Parent = Get-ReferenceLink $ParentGroup
        }
        else {
            $group.Parent = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    } 
    if ($parameters.ContainsKey("Source")) {
        $group.Source = $Source
    }
    if ($parameters.ContainsKey("Type")) {
        $group.Type = $Type
    }

    $groupRequestBuilder.Request().AddAsync($group).GetAwaiter().GetResult()
            ]]>
      </CustomCommand>

      <CustomCommand Name="Set-SnowGroup">
        <![CDATA[
    param (
        [parameter(Mandatory = $true)]
        [string]$Id,

        [parameter(Mandatory = $false)]
        [string]$DefaultAssignee,

        [parameter(Mandatory = $false)]
        [string]$Description,

        [parameter(Mandatory = $false)]
        [bool]$Active,            

        [parameter(Mandatory = $false)]
        [bool]$ExcludeManager,

        [parameter(Mandatory = $false)]
        [string]$HourlyRate,
            
        [parameter(Mandatory = $false)]
        [bool]$IncludeMembers,

        [parameter(Mandatory = $false)]
        [string]$Manager,

        [parameter(Mandatory = $false)]
        [string]$Name,

        [parameter(Mandatory = $false)]
        [string]$ParentGroup,

        [parameter(Mandatory = $false)]
        [string]$Roles,

        [parameter(Mandatory = $false)]
        [string]$Source,

        [parameter(Mandatory = $false)]
        [string]$Type,

        [parameter(Mandatory = $false)]
        [string]$Email,

        [parameter(Mandatory = $false)]
        [string]$CostCenter
    )
        
    $groupRequestBuilder = $ServiceNowClient.UserGroups()[$Id] 
    $group = New-Object -TypeName ServiceNow.Graph.Models.UserGroup
    $parameters = $MyInvocation.BoundParameters  
    $group.Id = $Id


    if ($parameters.ContainsKey("Active")) {
        $group.Active = $Active
    }
    if ($parameters.ContainsKey("CostCenter")) {
        if (-not [string]::IsNullOrEmpty($CostCenter)) {
            $group.CostCenter = Get-ReferenceLink $CostCenter
        }
        else {
            $group.CostCenter = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    } 
    if ($parameters.ContainsKey("Description")) {
        $group.Description = $Description
    } 
    if ($parameters.ContainsKey("DefaultAssignee")) {
        if (-not [string]::IsNullOrEmpty($DefaultAssignee)) {
            $group.DefaultAssignee = Get-ReferenceLink $DefaultAssignee
        }
        else {
            $group.DefaultAssignee = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    } 
    if ($parameters.ContainsKey("Email")) {
        $group.Email = $Email
    } 
    if ($parameters.ContainsKey("ExcludeManager")) {
        $group.ExcludeManager = $ExcludeManager
    }
    if ($parameters.ContainsKey("HourlyRate")) {
        $group.HourlyRate = $HourlyRate
    }
    if ($parameters.ContainsKey("IncludeMembers")) {
        $group.IncludeMembers = $IncludeMembers
    }
    if ($parameters.ContainsKey("Name")) {
        $group.Name = $Name
    }
    if ($parameters.ContainsKey("Manager")) {
        if (-not [string]::IsNullOrEmpty($Manager)) {
            $group.Manager = Get-ReferenceLink $Manager
        }
        else {
            $group.Manager = Get-ReferenceLink ""
        }
    } 
    if ($parameters.ContainsKey("Roles")) {
        $group.Roles = $Roles
    } 
    if ($parameters.ContainsKey("ParentGroup")) {
        if (-not [string]::IsNullOrEmpty($ParentGroup)) {
            $group.Parent = Get-ReferenceLink $ParentGroup
        }
        else {
            $group.Parent = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    } 
    if ($parameters.ContainsKey("Source")) {
        $group.Source = $Source
    }
    if ($parameters.ContainsKey("Type")) {
        $group.Type = $Type
    }

    $groupRequestBuilder.Request().UpdateAsync($group).GetAwaiter().GetResult()
            ]]>
      </CustomCommand>


      <CustomCommand Name="Get-SnowServiceCatalog">
        <![CDATA[
    param (
        [parameter(Mandatory = $false)]
        [String]$Id,

        [parameter(Mandatory = $false)]
        [String]$Filter,

        [parameter(Mandatory = $false)]
        [String]$Select,

        [parameter(Mandatory = $false)]
        [String]$OrderBy
    )
      
        Get-Entity -CollectionBuilder $ServiceNowClient.ServiceCatalogs() -Id $Id -Filter $Filter -Select $Select -OrderBy $OrderBy    
          ]]>
      </CustomCommand>
      <CustomCommand Name="Get-SnowGroupMembership">
        <![CDATA[
    param (
        [parameter(Mandatory = $false)]
        [String]$Id,
        
        [parameter(Mandatory = $false)]
        [String]$Filter,

        [parameter(Mandatory = $false)]
        [String]$Select,

        [parameter(Mandatory = $false)]
        [String]$OrderBy
        
        
    )
        
   Get-Entity -CollectionBuilder $ServiceNowClient.Memberships() -Id $Id -Filter $Filter -Select $Select -OrderBy $OrderBy
          ]]>
      </CustomCommand>

      <CustomCommand Name="New-SnowGroupMembership">
        <![CDATA[
    param (
        [parameter(Mandatory = $true)]
        [string]$Group,

        [parameter(Mandatory = $true)]
        [string]$User
    )
    
    $membershipsRequestBuilder = $ServiceNowClient.Memberships()
    $membership = New-Object -TypeName ServiceNow.Graph.Models.UserGroupMembership


    $membership.User = Get-ReferenceLink $User
    $membership.Group = Get-ReferenceLink $Group

    $membershipsRequestBuilder.Request().AddAsync($membership).GetAwaiter().GetResult()
            ]]>
      </CustomCommand>

      <CustomCommand Name="Remove-SnowGroupMembership">
        <![CDATA[
    param (
        [parameter(Mandatory = $true)]
        [string]$Id
    )
    
    $ServiceNowClient.Memberships()[$id].Request().DeleteAsync().GetAwaiter().GetResult() | Out-Null
            ]]>
      </CustomCommand>

      <CustomCommand Name="Get-SnowTask">
        <![CDATA[
    param (
        [parameter(Mandatory = $false)]
        [String]$Id,

        [parameter(Mandatory = $false)]
        [String]$Filter,

        [parameter(Mandatory = $false)]
        [String]$Select,

        [parameter(Mandatory = $false)]
        [String]$OrderBy
    )
        
    Get-Entity -CollectionBuilder $ServiceNowClient.Tasks() -Id $Id -Filter $Filter -Select $Select -OrderBy $OrderBy    
          ]]>
      </CustomCommand>

      <CustomCommand Name="Get-SnowJournalFields">
        <![CDATA[
    param (
        [parameter(Mandatory = $true)]
        [String]$Id,

        [parameter(Mandatory = $true)]
        [String]$Select,

        [parameter(Mandatory = $true)]
        [String]$Table
    )
        $params = @{sysparm_display_value = 'true'}
        switch ($Table.ToLower()) {
            "sc_request" { $builder = $ServiceNowClient.CatalogRequests() }
            "sc_req_item" {$builder = $ServiceNowClient.RequestItems()}
            "sc_task" {$builder = $ServiceNowClient.CatalogTasks()}
        }
        Get-Entity -CollectionBuilder $builder -Id $Id  -Select $Select  -QueryParams $params
        ]]>
      </CustomCommand>

      <CustomCommand Name="Get-SnowCatalogRequest">
        <![CDATA[
    param (
        [parameter(Mandatory = $false)]
        [String]$Id,

        [parameter(Mandatory = $false)]
        [String]$Filter,

        [parameter(Mandatory = $false)]
        [String]$Select,

        [parameter(Mandatory = $false)]
        [String]$OrderBy
    )

        Get-Entity -CollectionBuilder $ServiceNowClient.CatalogRequests() -Id $Id -Filter $Filter -Select $Select -OrderBy $OrderBy
          ]]>
      </CustomCommand>

      <CustomCommand Name="Set-SnowCatalogRequest">
        <![CDATA[
    param (
        [parameter(Mandatory = $true)]
        [string]$Id,

        [parameter(Mandatory = $false)]
        [bool]$Active,

        [parameter(Mandatory = $false)]
        [string]$AssignedTo,

        [parameter(Mandatory = $false)]
        [string]$AssignmentGroup,

        [parameter(Mandatory = $false)]
        [string]$CloseNotes,

        [parameter(Mandatory = $false)]
        [string]$Comments,

        [parameter(Mandatory = $false)]
        [string]$WorkNotes,

        [parameter(Mandatory = $false)]
        [string]$ContactType,

        [parameter(Mandatory = $false)]
        [string]$Location,

        [parameter(Mandatory = $false)]
        [string]$ClosedBy,

        [parameter(Mandatory = $false)]
        [string]$Company,

        [parameter(Mandatory = $false)]
        [int]$State,

        [parameter(Mandatory = $false)]
        [int]$Priority,

        [parameter(Mandatory = $false)]
        [int]$Impact,

        [parameter(Mandatory = $false)]
        [int]$Urgency,

        [parameter(Mandatory = $false)]
        [string]$ShortDescription,

        [parameter(Mandatory = $false)]
        [string]$BusinessService,

        [parameter(Mandatory = $false)]
        [string]$AdditionalAssigneeList,

        [parameter(Mandatory = $false)]
        [string]$ServiceOffering,

        [parameter(Mandatory = $false)]
        [string]$Price,

        [parameter(Mandatory = $false)]
        [string]$RequestedFor,

        [parameter(Mandatory = $false)]
        [string]$Description,        

        [parameter(Mandatory = $false)]
        [string]$DeliveryAddress,        
        
        [parameter(Mandatory = $false)]
        [string]$SpecialInstructions,

        [parameter(Mandatory = $false)]
        [datetime]$RequestedForDate
        
    )
    
    $requestBuilder = $ServiceNowClient.CatalogRequests()[$Id] 
    $request = New-Object -TypeName ServiceNow.Graph.Models.CatalogRequest
    $parameters = $MyInvocation.BoundParameters  
    $request.Id = $Id

    if ($parameters.ContainsKey("Active")) {
        $request.Active = $Active
    }
    
    if ($parameters.ContainsKey("DeliveryAddress")) {
        $request.DeliveryAddress = $DeliveryAddress
    }
    
    if ($parameters.ContainsKey("WorkNotes")) {
        $request.WorkNotes = $WorkNotes
    }

    if ($parameters.ContainsKey("Price")) {
        $request.Price = $Price
    }

    if ($parameters.ContainsKey("Urgency")) {
        $request.Urgency = $Urgency
    }

    if ($parameters.ContainsKey("Impact")) {
        $request.Impact = $Impact
    }

    if ($parameters.ContainsKey("Priority")) {
        $request.Priority = $Priority
    }
    if ($parameters.ContainsKey("CloseNotes")) {
        $request.CloseNotes = $CloseNotes
    } 

    if ($parameters.ContainsKey("AdditionalAssigneeList")) {
        $request.AdditionalAssigneeList = $AdditionalAssigneeList
    } 
    if ($parameters.ContainsKey("Description")) {
        $request.Description = $Description
    }         
    if ($parameters.ContainsKey("SpecialInstructions")) {
        $request.SpecialInstructions = $SpecialInstructions
    }             
    
    if ($parameters.ContainsKey("AssignedTo")) {
        if (-not [string]::IsNullOrEmpty($AssignedTo)) {
            $request.AssignedTo = Get-ReferenceLink $AssignedTo
        }
        else {
            $request.AssignedTo = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }          

    if ($parameters.ContainsKey("ClosedBy")) {
        if (-not [string]::IsNullOrEmpty($ClosedBy)) {
            $request.ClosedBy = Get-ReferenceLink $ClosedBy
        }
        else {
            $request.ClosedBy = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }          

    if ($parameters.ContainsKey("Company")) {
        if (-not [string]::IsNullOrEmpty($Company)) {
            $request.Company = Get-ReferenceLink $Company
        }
        else {
            $request.Company = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }          
    if ($parameters.ContainsKey("ServiceOffering")) {
        if (-not [string]::IsNullOrEmpty($ServiceOffering)) {
            $request.ServiceOffering = Get-ReferenceLink $ServiceOffering
        }
        else {
            $request.ServiceOffering = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }          
    if ($parameters.ContainsKey("SpecialInstructions")) {
        $request.SpecialInstructions = $SpecialInstructions
    }             
    if ($parameters.ContainsKey("BusinessService")) {
        if (-not [string]::IsNullOrEmpty($BusinessService)) {
            $request.BusinessService = Get-ReferenceLink $BusinessService
        }
        else {
            $request.BusinessService = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }          
            
    if ($parameters.ContainsKey("AssignmentGroup")) {
        if (-not [string]::IsNullOrEmpty($AssignmentGroup)) {
            $request.AssignmentGroup = Get-ReferenceLink $AssignmentGroup
        }
        else {
            $request.AssignmentGroup = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }     
          
    if ($parameters.ContainsKey("Comments")) {
        $request.Comments = $Comments
    }
    if ($parameters.ContainsKey("ContactType")) {
        $request.ContactType = $ContactType
    }    
              
    if ($parameters.ContainsKey("Location")) {
        if (-not [string]::IsNullOrEmpty($Location)) {
            $request.Location = Get-ReferenceLink $Location
        }
        else {
            $request.Location = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }

                                  
    if ($parameters.ContainsKey("State")) {
        $request.State = $State
    }   
               
    if ($parameters.ContainsKey("ShortDescription")) {
        $request.ShortDescription = $ShortDescription
    }

    if ($parameters.ContainsKey("RequestedFor")) {
        if (-not [string]::IsNullOrEmpty($RequestedFor)) {
            $request.RequestedFor = Get-ReferenceLink $RequestedFor
        }
        else {
            $request.RequestedFor = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }     

    $requestBuilder.Request().UpdateAsync($request).GetAwaiter().GetResult()
            ]]>
      </CustomCommand>

      <CustomCommand Name="New-SnowCatalogRequest">
        <![CDATA[
    param (
        [parameter(Mandatory = $false)]
        [bool]$Active,

        [parameter(Mandatory = $false)]
        [string]$AssignedTo,

        [parameter(Mandatory = $false)]
        [string]$AssignmentGroup,

        [parameter(Mandatory = $false)]
        [string]$CloseNotes,

        [parameter(Mandatory = $false)]
        [string]$Comments,

        [parameter(Mandatory = $false)]
        [string]$WorkNotes,

        [parameter(Mandatory = $false)]
        [string]$ContactType,

        [parameter(Mandatory = $false)]
        [string]$Location,

        [parameter(Mandatory = $false)]
        [string]$ClosedBy,

        [parameter(Mandatory = $false)]
        [string]$Company,

        [parameter(Mandatory = $false)]
        [int]$State,

        [parameter(Mandatory = $false)]
        [int]$Priority,

        [parameter(Mandatory = $false)]
        [int]$Impact,

        [parameter(Mandatory = $false)]
        [int]$Urgency,

        [parameter(Mandatory = $false)]
        [string]$ShortDescription,

        [parameter(Mandatory = $false)]
        [string]$BusinessService,

        [parameter(Mandatory = $false)]
        [string]$AdditionalAssigneeList,

        [parameter(Mandatory = $false)]
        [string]$ServiceOffering,

        [parameter(Mandatory = $false)]
        [string]$Price,

        [parameter(Mandatory = $false)]
        [string]$RequestedFor,

        [parameter(Mandatory = $false)]
        [string]$Description,        

        [parameter(Mandatory = $false)]
        [string]$DeliveryAddress,        

        [parameter(Mandatory = $false)]
        [string]$SpecialInstructions,

        [parameter(Mandatory = $false)]
        [datetime]$RequestedForDate
    )
    
    $requestBuilder = $ServiceNowClient.CatalogRequests()
    $request = New-Object -TypeName ServiceNow.Graph.Models.CatalogRequest
    $parameters = $MyInvocation.BoundParameters  

    if ($parameters.ContainsKey("Active")) {
        $request.Active = $Active
    }

    if ($parameters.ContainsKey("DeliveryAddress")) {
        $request.DeliveryAddress = $DeliveryAddress
    }
    
    if ($parameters.ContainsKey("WorkNotes")) {
        $request.WorkNotes = $WorkNotes
    }

    if ($parameters.ContainsKey("Price")) {
        $request.Price = $Price
    }

    if ($parameters.ContainsKey("Urgency")) {
        $request.Urgency = $Urgency
    }

    if ($parameters.ContainsKey("Impact")) {
        $request.Impact = $Impact
    }

    if ($parameters.ContainsKey("Priority")) {
        $request.Priority = $Priority
    }
    if ($parameters.ContainsKey("CloseNotes")) {
        $request.CloseNotes = $CloseNotes
    } 

    if ($parameters.ContainsKey("AdditionalAssigneeList")) {
        $request.AdditionalAssigneeList = $AdditionalAssigneeList
    } 
    if ($parameters.ContainsKey("Description")) {
        $request.Description = $Description
    }         
    if ($parameters.ContainsKey("SpecialInstructions")) {
        $request.SpecialInstructions = $SpecialInstructions
    }             
    
    if ($parameters.ContainsKey("AssignedTo")) {
        if (-not [string]::IsNullOrEmpty($AssignedTo)) {
            $request.AssignedTo = Get-ReferenceLink $AssignedTo
        }
        else {
            $request.AssignedTo = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }          

    if ($parameters.ContainsKey("ClosedBy")) {
        if (-not [string]::IsNullOrEmpty($ClosedBy)) {
            $request.ClosedBy = Get-ReferenceLink $ClosedBy
        }
        else {
            $request.ClosedBy = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }          

    if ($parameters.ContainsKey("Company")) {
        if (-not [string]::IsNullOrEmpty($Company)) {
            $request.Company = Get-ReferenceLink $Company
        }
        else {
            $request.Company = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }          
    if ($parameters.ContainsKey("ServiceOffering")) {
        if (-not [string]::IsNullOrEmpty($ServiceOffering)) {
            $request.ServiceOffering = Get-ReferenceLink $ServiceOffering
        }
        else {
            $request.ServiceOffering = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }          
    if ($parameters.ContainsKey("SpecialInstructions")) {
        $request.SpecialInstructions = $SpecialInstructions
    }             
    if ($parameters.ContainsKey("BusinessService")) {
        if (-not [string]::IsNullOrEmpty($BusinessService)) {
            $request.BusinessService = Get-ReferenceLink $BusinessService
        }
        else {
            $request.BusinessService = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }          
            
    if ($parameters.ContainsKey("AssignmentGroup")) {
        if (-not [string]::IsNullOrEmpty($AssignmentGroup)) {
            $request.AssignmentGroup = Get-ReferenceLink $AssignmentGroup
        }
        else {
            $request.AssignmentGroup = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }     
          
    if ($parameters.ContainsKey("Comments")) {
        $request.Comments = $Comments
    }
    if ($parameters.ContainsKey("ContactType")) {
        $request.ContactType = $ContactType
    }    
              
    if ($parameters.ContainsKey("Location")) {
        if (-not [string]::IsNullOrEmpty($Location)) {
            $request.Location = Get-ReferenceLink $Location
        }
        else {
            $request.Location = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }

    if ($parameters.ContainsKey("State")) {
        $request.State = $State
    }   
               
    if ($parameters.ContainsKey("ShortDescription")) {
        $request.ShortDescription = $ShortDescription
    }

    if ($parameters.ContainsKey("RequestedFor")) {
        if (-not [string]::IsNullOrEmpty($RequestedFor)) {
            $request.RequestedFor = Get-ReferenceLink $RequestedFor
        }
        else {
            $request.RequestedFor = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }     

    $requestBuilder.Request().AddAsync($request).GetAwaiter().GetResult()
            ]]>
      </CustomCommand>

      <CustomCommand Name="Get-SnowLocation">
        <![CDATA[
    param (
        [parameter(Mandatory = $false)]
        [String]$Id,

        [parameter(Mandatory = $false)]
        [String]$Filter,

        [parameter(Mandatory = $false)]
        [String]$Select,

        [parameter(Mandatory = $false)]
        [String]$OrderBy
    )
        
        Get-Entity -CollectionBuilder $ServiceNowClient.Locations() -Id $Id -Filter $Filter -Select $Select -OrderBy $OrderBy    
          ]]>
      </CustomCommand>

      <CustomCommand Name="Get-SnowVariable">
        <![CDATA[
        param (
         [parameter(Mandatory = $false)]
          [String]$Id,
  
          [parameter(Mandatory = $false)]
          [String]$Filter,
  
          [parameter(Mandatory = $false)]
          [String]$Select,
  
          [parameter(Mandatory = $false)]
          [String]$OrderBy
      )
      Get-Entity -CollectionBuilder $ServiceNowClient.Variables() -Id $Id -Filter $Filter -Select $Select -OrderBy $OrderBy    
          ]]>
      </CustomCommand>

      <CustomCommand Name="Get-SnowCatalogItem">
        <![CDATA[
    param (
        [parameter(Mandatory = $false)]
        [String]$Id,

        [parameter(Mandatory = $false)]
        [String]$Filter,

        [parameter(Mandatory = $false)]
        [String]$Select,

        [parameter(Mandatory = $false)]
        [String]$OrderBy
    )
        
    Get-Entity -CollectionBuilder $ServiceNowClient.CatalogItems() -Id $Id -Filter $Filter -Select $Select -OrderBy $OrderBy
          ]]>
      </CustomCommand>

      <CustomCommand Name="Get-ReferenceLink">
        <![CDATA[
        param (
            [Parameter(Position=0)]
            [string]$Value,

            [parameter(Mandatory=$false, Position=1)]
            [string]$Link
        )
        $refLink = New-Object -TypeName ServiceNow.Graph.Models.ReferenceLink
        $refLink.Value = $Value
        
        if(-not [string]::IsNullOrEmpty($Link)) {
            $refLink.Link = $Link
        }
        $refLink
            ]]>
      </CustomCommand>

      <CustomCommand Name="Get-Entity">
        <![CDATA[
    param (
        [parameter(Mandatory = $true)]
        $CollectionBuilder,

        [parameter(Mandatory = $false)]
        [String]$Id,

        [parameter(Mandatory = $false)]
        [String]$Filter,

        [parameter(Mandatory = $false)]
        [String]$Select,

        [parameter(Mandatory = $false)]
        [String]$OrderBy,

        [parameter(Mandatory = $false)]
        [hashtable]$QueryParams=@{}                
    )
    $params = New-Object -TypeName System.Collections.Generic.List[ServiceNow.Graph.Requests.Options.QueryOption]
    foreach ($queryParam in $QueryParams.GetEnumerator()) {
        $queryOption = New-Object -TypeName ServiceNow.Graph.Requests.Options.QueryOption -ArgumentList $queryParam.Key, $queryParam.Value
        $params.Add($queryOption) | Out-Null
    }


    $outcome = $null
    if ($Id) {
        $outcome = $CollectionBuilder[$Id].Request($params).Select($Select).GetAsync().GetAwaiter().GetResult()   
    }
    else {
        $request = $CollectionBuilder.Request()
        if ($filter) {
            $request = $request.Filter($Filter)
        }
        if ($Select) {
            $request = $request.Select($Select)                
        }
        if ($OrderBy) {
            $request = $request.OrderBy($OrderBy)
        }
        $page = $request.Top($Global:PageSize).GetAsync().GetAwaiter().GetResult()
        if ($page -and $page.CurrentPage) {
            $outcome = $page.CurrentPage
            $nextPageRequest = $page.NextPageRequest
            while ($null -ne $nextPageRequest) {
                $nextPage = $nextPageRequest.GetAsync().GetAwaiter().GetResult()
                if ($null -ne $nextPage -and $nextPage.CurrentPage.Count -ne 0) {
                    $outcome.AddRange($nextPage.CurrentPage)
                }
                $nextPageRequest = $nextPage.NextPageRequest
            }
        }
    }

    $outcome    
            ]]>
      </CustomCommand>

      <CustomCommand Name="Get-SnowCatalogTask">
        <![CDATA[
    param (
        [parameter(Mandatory = $false)]
        [String]$Id,

        [parameter(Mandatory = $false)]
        [String]$Filter,

        [parameter(Mandatory = $false)]
        [String]$Select,

        [parameter(Mandatory = $false)]
        [String]$OrderBy
    )
        
        Get-Entity -CollectionBuilder $ServiceNowClient.CatalogTasks() -Id $Id -Filter $Filter -Select $Select -OrderBy $OrderBy     
          ]]>
      </CustomCommand>

      <CustomCommand Name="Set-SnowCatalogTask">
        <![CDATA[
    param (
        [parameter(Mandatory = $true)]
        [string]$Id,

        [parameter(Mandatory = $false)]
        [string]$AssignedTo,

        [parameter(Mandatory = $false)]
        [string]$AssignmentGroup,

        [parameter(Mandatory = $false)]
        [string]$Company,

        [parameter(Mandatory = $false)]
        [string]$CloseNotes,

        [parameter(Mandatory = $false)]
        [string]$Comments,

        [parameter(Mandatory = $false)]
        [string]$WorkNotes,

        [parameter(Mandatory = $false)]
        [int]$State,

        [parameter(Mandatory = $false)]
        [string]$ShortDescription,

        [parameter(Mandatory = $false)]
        [string]$Description ,

        [parameter(Mandatory = $false)]
        [string]$CmdbCi,

        [parameter(Mandatory = $false)]
        [string]$BusinessService,

        [parameter(Mandatory = $false)]
        [string]$ContactType,

        [parameter(Mandatory = $false)]
        [string]$ClosedBy,

        [parameter(Mandatory = $false)]
        [string]$ServiceOffering,

        [parameter(Mandatory = $false)]
        [int]$Impact ,

        [parameter(Mandatory = $false)]
        [int]$Urgency,
        
        [parameter(Mandatory = $false)]
        [bool]$Active,

        [parameter(Mandatory = $false)]
        [int]$Priority,

        [parameter(Mandatory = $false)]
        [string]$AdditionalAssigneeList,

        [parameter(Mandatory = $false)]
        [string]$Location

)
    
    $requestBuilder = $ServiceNowClient.CatalogTasks()[$Id] 
    $task = New-Object -TypeName ServiceNow.Graph.Models.CatalogTask
    $parameters = $MyInvocation.BoundParameters  
    $task.Id = $Id


    if ($parameters.ContainsKey("CloseNotes")) {
        $task.CloseNotes = $CloseNotes
    } 

    if ($parameters.ContainsKey("ContactType")) {
        $task.ContactType = $ContactType
    } 

    if ($parameters.ContainsKey("Active")) {
        $task.Active = $Active
    } 

    if ($parameters.ContainsKey("Description")) {
        $task.Description = $Description
    }                 
    
    if ($parameters.ContainsKey("CmdbCi")) {
        if (-not [string]::IsNullOrEmpty($CmdbCi)) {
            $task.CmdbCi = Get-ReferenceLink $CmdbCi
        }
        else {
            $task.CmdbCi = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    } 
    
    if ($parameters.ContainsKey("ServiceOffering")) {
        if (-not [string]::IsNullOrEmpty($ServiceOffering)) {
            $task.ServiceOffering = Get-ReferenceLink $ServiceOffering
        }
        else {
            $task.ServiceOffering = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    } 
    
    if ($parameters.ContainsKey("ClosedBy")) {
        if (-not [string]::IsNullOrEmpty($ClosedBy)) {
            $task.ClosedBy = Get-ReferenceLink $ClosedBy
        }
        else {
            $task.ClosedBy = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    } 
    
    if ($parameters.ContainsKey("Location")) {
        if (-not [string]::IsNullOrEmpty($Location)) {
            $task.Location = Get-ReferenceLink $Location
        }
        else {
            $task.Location = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    } 

    if ($parameters.ContainsKey("BusinessService")) {
        if (-not [string]::IsNullOrEmpty($BusinessService)) {
            $task.BusinessService = Get-ReferenceLink $BusinessService
        }
        else {
            $task.BusinessService = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    } 
    if ($parameters.ContainsKey("AssignedTo")) {
        if (-not [string]::IsNullOrEmpty($AssignedTo)) {
            $task.AssignedTo = Get-ReferenceLink $AssignedTo
        }
        else {
            $task.AssignedTo = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }          
            
    if ($parameters.ContainsKey("AssignmentGroup")) {
        if (-not [string]::IsNullOrEmpty($AssignmentGroup)) {
            $task.AssignmentGroup = Get-ReferenceLink $AssignmentGroup
        }
        else {
            $task.AssignmentGroup = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }     
          
    if ($parameters.ContainsKey("Comments")) {
        $task.Comments = $Comments
    }

    if ($parameters.ContainsKey("WorkNotes")) {
        $task.WorkNotes = $WorkNotes
    }

    if ($parameters.ContainsKey("Urgency")) {
        $task.Urgency = $Urgency
    }   
 
    if ($parameters.ContainsKey("Impact")) {
        $task.Impact = $Impact
    }   
 
    if ($parameters.ContainsKey("State")) {
        $task.State = $State
    }   
     
    if ($parameters.ContainsKey("ShortDescription")) {
        $task.ShortDescription = $ShortDescription
    }

    if ($parameters.ContainsKey("Priority")) {
        $task.Priority = $Priority
    } 

    if ($parameters.ContainsKey("AdditionalAssigneeList")) {
        $task.AdditionalAssigneeList = $AdditionalAssigneeList
    } 
    
    if ($parameters.ContainsKey("Company")) {
        if (-not [string]::IsNullOrEmpty($Company)) {
            $task.Company = Get-ReferenceLink $Company
        }
        else {
            $task.Company = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    } 

                
    $requestBuilder.Request().UpdateAsync($task).GetAwaiter().GetResult()
          ]]>
      </CustomCommand>

      <CustomCommand Name="New-SnowCatalogTask">
        <![CDATA[
    param (
        [parameter(Mandatory = $true)]
        [string]$RequestItem,

        [parameter(Mandatory = $true)]
        [string]$Request,

        [parameter(Mandatory = $false)]
        [string]$AssignedTo,

        [parameter(Mandatory = $false)]
        [string]$AssignmentGroup,

        [parameter(Mandatory = $false)]
        [string]$AdditionalAssigneeList,

        [parameter(Mandatory = $false)]
        [string]$CloseNotes,

        [parameter(Mandatory = $false)]
        [string]$Comments,

        [parameter(Mandatory = $false)]
        [string]$WorkNotes,

        [parameter(Mandatory = $false)]
        [int]$State,
        
        [parameter(Mandatory = $false)]
        [bool]$Active,
        
        [parameter(Mandatory = $false)]
        [int]$Priority,

        [parameter(Mandatory = $false)]
        [string]$ShortDescription,

        [parameter(Mandatory = $false)]
        [string]$Description ,

        [parameter(Mandatory = $false)]
        [string]$BusinessService ,

        [parameter(Mandatory = $false)]
        [string]$CmdbCi,

        [parameter(Mandatory = $false)]
        [int]$Impact,

        [parameter(Mandatory = $false)]
        [int]$Urgency,

        [parameter(Mandatory = $false)]
        [string]$Location,

        [parameter(Mandatory = $false)]
        [string]$ContactType,

        [parameter(Mandatory = $false)]
        [string]$ClosedBy,

        [parameter(Mandatory = $false)]
        [string]$ServiceOffering,

        [parameter(Mandatory = $false)]
        [string]$Company

)
    
    $requestBuilder = $ServiceNowClient.CatalogTasks()
    $task = New-Object -TypeName ServiceNow.Graph.Models.CatalogTask
    $parameters = $MyInvocation.BoundParameters  

    $task.RequestItem = Get-ReferenceLink $RequestItem
    $task.Request = Get-ReferenceLink $Request
    if ($parameters.ContainsKey("ContactType")) {
        $task.ContactType = $ContactType
    } 

    if ($parameters.ContainsKey("CloseNotes")) {
        $task.CloseNotes = $CloseNotes
    } 

    if ($parameters.ContainsKey("AdditionalAssigneeList")) {
        $task.AdditionalAssigneeList = $AdditionalAssigneeList
    } 

    if ($parameters.ContainsKey("Priority")) {
        $task.Priority = $Priority
    } 

    if ($parameters.ContainsKey("Active")) {
        $task.Active = $Active
    } 

    if ($parameters.ContainsKey("Description")) {
        $task.Description = $Description
    } 

    if ($parameters.ContainsKey("CmdbCi")) {
        if (-not [string]::IsNullOrEmpty($CmdbCi)) {
            $task.CmdbCi = Get-ReferenceLink $CmdbCi
        }
        else {
            $task.CmdbCi = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    } 

    if ($parameters.ContainsKey("ServiceOffering")) {
        if (-not [string]::IsNullOrEmpty($ServiceOffering)) {
            $task.ServiceOffering = Get-ReferenceLink $ServiceOffering
        }
        else {
            $task.ServiceOffering = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    } 

    if ($parameters.ContainsKey("ClosedBy")) {
        if (-not [string]::IsNullOrEmpty($ClosedBy)) {
            $task.ClosedBy = Get-ReferenceLink $ClosedBy
        }
        else {
            $task.ClosedBy = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    } 
    
    if ($parameters.ContainsKey("Location")) {
        if (-not [string]::IsNullOrEmpty($Location)) {
            $task.Location = Get-ReferenceLink $Location
        }
        else {
            $task.Location = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    } 
    
    if ($parameters.ContainsKey("Company")) {
        if (-not [string]::IsNullOrEmpty($Company)) {
            $task.Company = Get-ReferenceLink $Company
        }
        else {
            $task.Company = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    } 

    if ($parameters.ContainsKey("BusinessService")) {
        if (-not [string]::IsNullOrEmpty($BusinessService)) {
            $task.BusinessService = Get-ReferenceLink $BusinessService
        }
        else {
            $task.BusinessService = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    } 
    if ($parameters.ContainsKey("AssignedTo")) {
        if (-not [string]::IsNullOrEmpty($AssignedTo)) {
            $task.AssignedTo = Get-ReferenceLink $AssignedTo
        }
        else {
            $task.AssignedTo = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }          
            
    if ($parameters.ContainsKey("AssignmentGroup")) {
        if (-not [string]::IsNullOrEmpty($AssignmentGroup)) {
            $task.AssignmentGroup = Get-ReferenceLink $AssignmentGroup
        }
        else {
            $task.AssignmentGroup = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }     
          
    if ($parameters.ContainsKey("Comments")) {
        $task.Comments = $Comments
    }

    if ($parameters.ContainsKey("WorkNotes")) {
        $task.WorkNotes = $WorkNotes
    }

    if ($parameters.ContainsKey("Urgency")) {
        $task.Urgency = $Urgency
    }   
 
    if ($parameters.ContainsKey("Impact")) {
        $task.Impact = $Impact
    }   
 
    if ($parameters.ContainsKey("State")) {
        $task.State = $State
    }   
     
    if ($parameters.ContainsKey("ShortDescription")) {
        $task.ShortDescription = $ShortDescription
    }
                
    $requestBuilder.Request().AddAsync($task).GetAwaiter().GetResult()
          ]]>
      </CustomCommand>

      <CustomCommand Name="Get-SnowRequestItem">
        <![CDATA[
    param (
        [parameter(Mandatory = $false)]
        [String]$Id,

        [parameter(Mandatory = $false)]
        [String]$Filter,

        [parameter(Mandatory = $false)]
        [String]$Select,

        [parameter(Mandatory = $false)]
        [String]$OrderBy
    )
        
        Get-Entity -CollectionBuilder $ServiceNowClient.RequestItems() -Id $Id -Filter $Filter -Select $Select -OrderBy $OrderBy    
          ]]>
      </CustomCommand>

      <CustomCommand Name="Set-SnowRequestItem">
        <![CDATA[
    param (
        [parameter(Mandatory = $true)]
        [string]$Id,

        [parameter(Mandatory = $false)]
        [string]$State,

        [parameter(Mandatory = $false)]
        [string]$CloseNotes,

        [parameter(Mandatory = $false)]
        [string]$Comments,

        [parameter(Mandatory = $false)]
        [string]$WorkNotes,

        [parameter(Mandatory = $false)]
        [string]$RequestedFor,

        [parameter(Mandatory = $false)]
        [string]$AssignmentGroup,

        [parameter(Mandatory = $false)]
        [string]$AssignedTo,

        [parameter(Mandatory = $false)]
        [string]$OrderGuide,

        [parameter(Mandatory = $false)]
        [bool]$Active,

        [parameter(Mandatory = $false)]
        [string]$Company,

        [parameter(Mandatory = $false)]
        [string]$Location,

        [parameter(Mandatory = $false)]
        [string]$ContactType,

        [parameter(Mandatory = $false)]
        [string]$ShortDescription,

        [parameter(Mandatory = $false)]
        [string]$Description,

        [parameter(Mandatory = $false)]
        [string]$Price,

        [parameter(Mandatory = $false)]
        [string]$Quantity,

        [parameter(Mandatory = $false)]
        [string]$ConfigurationItem,

        [parameter(Mandatory = $false)]
        [int]$Impact,

        [parameter(Mandatory = $false)]
        [int]$Priority,

        [parameter(Mandatory = $false)]
        [int]$Urgency,

        [parameter(Mandatory = $false)]
        [string]$CmdbCi

    )
    
    $requestItemsBuilder = $ServiceNowClient.RequestItems()[$Id] 
    $requestItem = New-Object -TypeName ServiceNow.Graph.Models.RequestItem
    $parameters = $MyInvocation.BoundParameters  
    $requestItem.Id = $Id


    if ($parameters.ContainsKey("State")) {
        $requestItem.State = $State
    }
    if ($parameters.ContainsKey("CloseNotes")) {
        $requestItem.CloseNotes = $CloseNotes
    } 

    if ($parameters.ContainsKey("Comments")) {
        $requestItem.Comments = $Comments
    } 

    if ($parameters.ContainsKey("Price")) {
        if(-not [string]::IsNullOrEmpty($Price)){
            $requestItem.Price =  $Price
        }
    } 

    if ($parameters.ContainsKey("Quantity")) {
        if(-not [string]::IsNullOrEmpty($Quantity)){
            $requestItem.Quantity =  $Quantity
        }
    } 

    if ($parameters.ContainsKey("Impact")) {
        $requestItem.Impact =  $Impact
    } 
    if ($parameters.ContainsKey("Description")) {
        $requestItem.Description =  $Description
    } 

    if ($parameters.ContainsKey("Urgency")) {
        $requestItem.Urgency =  $Urgency
    } 

    if ($parameters.ContainsKey("Priority")) {
        $requestItem.Priority =  $Priority
    } 

    if ($parameters.ContainsKey("ShortDescription")) {
        $requestItem.ShortDescription =  $ShortDescription
    } 

    if ($parameters.ContainsKey("CmdbCi")) {
        $requestItem.CmdbCi = Get-ReferenceLink $CmdbCi
    } 

    if ($parameters.ContainsKey("RequestedFor")) {
        $requestItem.RequestedFor = Get-ReferenceLink $RequestedFor
    } 

    if ($parameters.ContainsKey("ContactType")) {
        $requestItem.ContactType = $ContactType
    } 

    if ($parameters.ContainsKey("Company")) {
        $requestItem.Company = Get-ReferenceLink $Company
    } 

    if ($parameters.ContainsKey("ConfigurationItem")) {
        $requestItem.ConfigurationItem = Get-ReferenceLink $ConfigurationItem
    } 

    if ($parameters.ContainsKey("Location")) {
        $requestItem.Location = Get-ReferenceLink $Location
    } 

    if ($parameters.ContainsKey("AssignedTo")) {
        $requestItem.AssignedTo = Get-ReferenceLink $AssignedTo
    } 

    if ($parameters.ContainsKey("AssignmentGroup")) {
        $requestItem.AssignmentGroup = Get-ReferenceLink $AssignmentGroup
    } 

    if ($parameters.ContainsKey("OrderGuide")) {
        $requestItem.OrderGuide = Get-ReferenceLink $OrderGuide
    } 
    if ($parameters.ContainsKey("Comments")) {
        $requestItem.Comments = $Comments
    } 
    if ($parameters.ContainsKey("WorkNotes")) {
        $requestItem.WorkNotes = $WorkNotes
    }            
    if ($parameters.ContainsKey("Active")) {
        $requestItem.Active = $Active
    } 
        
    $requestItemsBuilder.Request().UpdateAsync($requestItem).GetAwaiter().GetResult()
          ]]>
      </CustomCommand>

      <CustomCommand Name="New-SnowRequestItem">
        <![CDATA[
    param (
        [parameter(Mandatory = $true)]
        [string]$CatalogItem,

        [parameter(Mandatory = $true)]
        [string]$Request,

        [parameter(Mandatory = $true)]
        [string]$RequestedFor,

        [parameter(Mandatory = $false)]
        [string]$AssignmentGroup,

        [parameter(Mandatory = $false)]
        [string]$AssignedTo,

        [parameter(Mandatory = $false)]
        [string]$OrderGuide,

        [parameter(Mandatory = $false)]
        [string]$Comments,

        [parameter(Mandatory = $false)]
        [string]$WorkNotes,

        [parameter(Mandatory = $false)]
        [bool]$Active,

        [parameter(Mandatory = $false)]
        [string]$Company,

        [parameter(Mandatory = $false)]
        [string]$Location,

        [parameter(Mandatory = $false)]
        [string]$ContactType,

        [parameter(Mandatory = $false)]
        [string]$ShortDescription,

        [parameter(Mandatory = $false)]
        [string]$Description,

        [parameter(Mandatory = $false)]
        [string]$Price,

        [parameter(Mandatory = $false)]
        [string]$Quantity,

        [parameter(Mandatory = $false)]
        [string]$ConfigurationItem,

        [parameter(Mandatory = $false)]
        [int]$Impact,

        [parameter(Mandatory = $false)]
        [int]$Priority,

        [parameter(Mandatory = $false)]
        [int]$Urgency,

        [parameter(Mandatory = $false)]
        [string]$CmdbCi
    )
    
    $requestItemsBuilder = $ServiceNowClient.RequestItems()
    $requestItem = New-Object -TypeName ServiceNow.Graph.Models.RequestItem
    $parameters = $MyInvocation.BoundParameters  


    $requestItem.RequestedFor = Get-ReferenceLink $RequestedFor
    $requestItem.CatalogItem = Get-ReferenceLink $CatalogItem
    $requestItem.Request = Get-ReferenceLink $Request

    if ($parameters.ContainsKey("Price")) {
        if(-not [string]::IsNullOrEmpty($Price)){
            $requestItem.Price =  $Price
        }
    } 
    if ($parameters.ContainsKey("WorkNotes")) {
        $requestItem.WorkNotes = $WorkNotes
    }        
    if ($parameters.ContainsKey("Quantity")) {
        if(-not [string]::IsNullOrEmpty($Quantity)){
            $requestItem.Quantity =  $Quantity
        }
    } 

    if ($parameters.ContainsKey("Impact")) {
        $requestItem.Impact =  $Impact
    } 
    if ($parameters.ContainsKey("Description")) {
        $requestItem.Description =  $Description
    } 

    if ($parameters.ContainsKey("Urgency")) {
        $requestItem.Urgency =  $Urgency
    } 

    if ($parameters.ContainsKey("Priority")) {
        $requestItem.Priority =  $Priority
    } 

    if ($parameters.ContainsKey("ShortDescription")) {
        $requestItem.ShortDescription =  $ShortDescription
    } 

    if ($parameters.ContainsKey("CmdbCi")) {
        $requestItem.CmdbCi = Get-ReferenceLink $CmdbCi
    } 

    if ($parameters.ContainsKey("ContactType")) {
        $requestItem.ContactType = $ContactType
    } 

    if ($parameters.ContainsKey("Company")) {
        $requestItem.Company = Get-ReferenceLink $Company
    } 

    if ($parameters.ContainsKey("ConfigurationItem")) {
        $requestItem.ConfigurationItem = Get-ReferenceLink $ConfigurationItem
    } 

    if ($parameters.ContainsKey("Location")) {
        $requestItem.Location = Get-ReferenceLink $Location
    } 

    if ($parameters.ContainsKey("AssignedTo")) {
        $requestItem.AssignedTo = Get-ReferenceLink $AssignedTo
    } 

    if ($parameters.ContainsKey("AssignmentGroup")) {
        $requestItem.AssignmentGroup = Get-ReferenceLink $AssignmentGroup
    } 

    if ($parameters.ContainsKey("OrderGuide")) {
        $requestItem.OrderGuide = Get-ReferenceLink $OrderGuide
    } 
    if ($parameters.ContainsKey("Comments")) {
        $requestItem.Comments = $Comments
    } 
    if ($parameters.ContainsKey("Active")) {
        $requestItem.Active = $Active
    } 

    $requestItemsBuilder.Request().AddAsync($requestItem).GetAwaiter().GetResult()
            ]]>
      </CustomCommand>

      <CustomCommand Name="Get-SnowCostCenter">
        <![CDATA[
    param (
        [parameter(Mandatory = $false)]
        [String]$Id,

        [parameter(Mandatory = $false)]
        [String]$Filter,

        [parameter(Mandatory = $false)]
        [String]$Select,

        [parameter(Mandatory = $false)]
        [String]$OrderBy
    )
        
        Get-Entity -CollectionBuilder $ServiceNowClient.CostCenters() -Id $Id -Filter $Filter -Select $Select -OrderBy $OrderBy              
        ]]>
      </CustomCommand>

      <CustomCommand Name="Get-SnowCompany">
        <![CDATA[
    param (
        [parameter(Mandatory = $false)]
        [String]$Id,

        [parameter(Mandatory = $false)]
        [String]$Filter,

        [parameter(Mandatory = $false)]
        [String]$Select,

        [parameter(Mandatory = $false)]
        [String]$OrderBy
    )
        
        Get-Entity -CollectionBuilder $ServiceNowClient.Companies() -Id $Id -Filter $Filter -Select $Select -OrderBy $OrderBy    
          ]]>
      </CustomCommand>

      <CustomCommand Name="Get-SnowDepartment">
        <![CDATA[
    param (
        [parameter(Mandatory = $false)]
        [String]$Id,

        [parameter(Mandatory = $false)]
        [String]$Filter,

        [parameter(Mandatory = $false)]
        [String]$Select,

        [parameter(Mandatory = $false)]
        [String]$OrderBy
    )
        
        Get-Entity -CollectionBuilder $ServiceNowClient.Departments() -Id $Id -Filter $Filter -Select $Select -OrderBy $OrderBy    
          ]]>
      </CustomCommand>

      <CustomCommand Name="Get-SnowOrderGuide">
        <![CDATA[
    param (
        [parameter(Mandatory = $false)]
        [String]$Id,

        [parameter(Mandatory = $false)]
        [String]$Filter,

        [parameter(Mandatory = $false)]
        [String]$Select,

        [parameter(Mandatory = $false)]
        [String]$OrderBy
    )
        
        Get-Entity -CollectionBuilder $ServiceNowClient.OrderGuides() -Id $Id -Filter $Filter -Select $Select -OrderBy $OrderBy    
          ]]>
      </CustomCommand>

      <CustomCommand Name="Get-SnowCatalogOption">
        <![CDATA[
        param (
          [parameter(Mandatory = $false)]
          [String]$Id,
  
          [parameter(Mandatory = $false)]
          [String]$Filter,
  
          [parameter(Mandatory = $false)]
          [String]$Select,
  
          [parameter(Mandatory = $false)]
          [String]$OrderBy
      )
      Get-Entity -CollectionBuilder $ServiceNowClient.CatalogOptions() -Id $Id -Filter $Filter -Select $Select -OrderBy $OrderBy    
          ]]>
      </CustomCommand>

      <CustomCommand Name="Get-SnowVariableOwnershipList">
        <![CDATA[
        if(-not $Global:VariableOwnershipList){
          $Global:VariableOwnershipList = Get-Entity -CollectionBuilder $ServiceNowClient.VariableOwnerships()
      }
      return $Global:VariableOwnershipList
        ]]>
      </CustomCommand>

      <CustomCommand Name="Get-SnowCatalogOptionList">
        <![CDATA[
        if(-not $Global:CatalogOptionList){
          $Global:CatalogOptionList =  Get-Entity -CollectionBuilder $ServiceNowClient.CatalogOptions()
      }
      return $Global:CatalogOptionList
        ]]>
      </CustomCommand>

      <CustomCommand Name="Get-SnowVariableOwnership">
        <![CDATA[
    param (
        [parameter(Mandatory = $false)]
        [String]$Id,

        [parameter(Mandatory = $false)]
        [String]$Filter,

        [parameter(Mandatory = $false)]
        [String]$Select,

        [parameter(Mandatory = $false)]
        [String]$OrderBy
    )
        
        Get-Entity -CollectionBuilder $ServiceNowClient.VariableOwnerships() -Id $Id -Filter $Filter -Select $Select -OrderBy $OrderBy    
          ]]>
      </CustomCommand>

      <CustomCommand Name="New-SnowVariableOwnership">
        <![CDATA[
    param (
        [parameter(Mandatory = $true)]
        [string]$CatalogItemOption,

        [parameter(Mandatory = $true)]
        [string]$CatalogRequestItem

    )
        
    $variableOwnershipBuilder = $ServiceNowClient.VariableOwnerships()
    $variableOwnership = New-Object -TypeName ServiceNow.Graph.Models.CatalogItemOptionMtom
            
    $variableOwnership.CatalogItemOption =  Get-ReferenceLink $CatalogItemOption
    $variableOwnership.CatalogRequestItem =  Get-ReferenceLink $CatalogRequestItem

    $variableOwnershipBuilder.Request().AddAsync($variableOwnership).GetAwaiter().GetResult()
        ]]>
      </CustomCommand>
      <CustomCommand Name="Set-SnowCatalogOption">
        <![CDATA[
    param (
        [parameter(Mandatory = $true)]
        [string]$Id,

        [parameter(Mandatory = $false)]
        [string]$Value,

        [parameter(Mandatory = $false)]
        [string]$ItemOption,

        [parameter(Mandatory = $false)]
        [string]$CartItem
    )
        
    $catalogOptionsRequestBuilder = $ServiceNowClient.CatalogOptions()[$Id] 
    $option = New-Object -TypeName ServiceNow.Graph.Models.CatalogOptions
    $parameters = $MyInvocation.BoundParameters  
    $option.Id = $Id
            
    if ($parameters.ContainsKey("Value")) {
        $option.Value = $Value
    } 
    
    if ($parameters.ContainsKey("ItemOption")) {
        if (-not [string]::IsNullOrEmpty($ItemOption)) {
            $option.ItemOption = Get-ReferenceLink $ItemOption
        }
        else {
            $option.ItemOption = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }     

    if ($parameters.ContainsKey("CartItem")) {
        if (-not [string]::IsNullOrEmpty($CartItem)) {
            $option.CartItem = Get-ReferenceLink $CartItem
        }
        else {
            $option.ItemOption = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }     

    $catalogOptionsRequestBuilder.Request().UpdateAsync($option).GetAwaiter().GetResult()
            ]]>
      </CustomCommand>

      <CustomCommand Name="New-SnowCatalogOption">
        <![CDATA[
    param (
        [parameter(Mandatory = $true)]
        [string]$Variable,

        [parameter(Mandatory = $false)]
        [string]$ItemOption,

        [parameter(Mandatory = $false)]
        [string]$CartItem,

        [parameter(Mandatory = $false)]
        [string]$Value
    )
        
    $catalogOptionsRequestBuilder = $ServiceNowClient.CatalogOptions()
    $option = New-Object -TypeName ServiceNow.Graph.Models.CatalogOptions
    $parameters = $MyInvocation.BoundParameters  
            
    $option.Variable =  Get-ReferenceLink $Variable

    if ($parameters.ContainsKey("ItemOption")) {
        if (-not [string]::IsNullOrEmpty($ItemOption)) {
            $option.ItemOption = Get-ReferenceLink $ItemOption
        }
        else {
            $option.ItemOption = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }     

    if ($parameters.ContainsKey("CartItem")) {
        if (-not [string]::IsNullOrEmpty($CartItem)) {
            $option.CartItem = Get-ReferenceLink $CartItem
        }
        else {
            $option.ItemOption = [ServiceNow.Graph.Models.ReferenceLink]$null
        }
    }     

    if ($parameters.ContainsKey("Value")) {
        $option.Value = $Value
    } 

    $catalogOptionsRequestBuilder.Request().AddAsync($option).GetAwaiter().GetResult()
            ]]>
      </CustomCommand>

      <CustomCommand Name="Set-SnowUserPassword">
        <![CDATA[
    param (
        [parameter(Mandatory = $true)]
        [String]$Id,

        [parameter(Mandatory = $true)]
        [securestring]$Password
    )
        $QueryParams = @{sysparm_input_display_value = 'true'}
        $params = New-Object -TypeName System.Collections.Generic.List[ServiceNow.Graph.Requests.Options.QueryOption]
        foreach ($queryParam in $QueryParams.GetEnumerator()) {
            $queryOption = New-Object -TypeName ServiceNow.Graph.Requests.Options.QueryOption -ArgumentList $queryParam.Key, $queryParam.Value
            $params.Add($queryOption) | Out-Null
        }
        $userRequestBuilder = $ServiceNowClient.Users()[$Id] 
        $userUpdate = New-Object -TypeName ServiceNow.Graph.Models.User
        $userUpdate.Id = $Id
        $plainPW = ""
        $ptr = [System.IntPtr]::Zero
        try {
            $ptr = [System.IntPtr]::Zero    
            $ptr = [System.Runtime.InteropServices.Marshal]::SecureStringToGlobalAllocUnicode($Password)
            $plainPW = [System.Runtime.InteropServices.Marshal]::PtrToStringUni($ptr)
        }
        finally {
            [System.Runtime.InteropServices.Marshal]::ZeroFreeGlobalAllocUnicode($ptr)
        }        
        $userUpdate.UserPassword = $plainPW
        
        $userRequestBuilder.Request($params).UpdateAsync($userUpdate).GetAwaiter().GetResult()
            ]]>
      </CustomCommand>

      <CustomCommand Name="Get-SnowBusinessUnit">
        <![CDATA[
      param (
            [parameter(Mandatory = $false)]
            [String]$Id,

            [parameter(Mandatory = $false)]
            [String]$Filter,

            [parameter(Mandatory = $false)]
            [String]$Select,

            [parameter(Mandatory = $false)]
            [String]$OrderBy
        )
            
            Get-Entity -CollectionBuilder $ServiceNowClient.BusinessUnits() -Id $Id -Filter $Filter -Select $Select -OrderBy $OrderBy                      
            ]]>
      </CustomCommand>

      <CustomCommand Name="Set-SnowBusinessUnit">
        <![CDATA[
    param (
        [parameter(Mandatory = $true)]
        [string]$Id,

        [parameter(Mandatory = $false)]
        [string]$Name,

        [parameter(Mandatory = $false)]
        [string]$BuHead,

        [parameter(Mandatory = $false)]
        [string]$Company,

        [parameter(Mandatory = $false)]
        [string]$Description,

        [parameter(Mandatory = $false)]
        [string]$Parent
    )
   
    $businessUnitBuilder = $ServiceNowClient.BusinessUnits()[$Id] 
    $parameters = $MyInvocation.BoundParameters  
    $bu = New-Object -TypeName ServiceNow.Graph.Models.BusinessUnit
    $bu.Id = $Id
    if ($parameters.ContainsKey("BuHead") -and $BuHead) {
        $bu.BuHead = Get-ReferenceLink $BuHead
    }  else {
        $bu.BuHead =  [ServiceNow.Graph.Models.ReferenceLink]$null
    }    

    if ($parameters.ContainsKey("Company") -and $Company) {
        $bu.Company = Get-ReferenceLink $Company
    }  else {
        $bu.Company =  [ServiceNow.Graph.Models.ReferenceLink]$null
    }    

    if ($parameters.ContainsKey("Parent") -and $Parent) {
        $bu.Parent = Get-ReferenceLink $Parent
    }  else {
        $bu.Parent =  [ServiceNow.Graph.Models.ReferenceLink]$null
    }    

    if ($parameters.ContainsKey("Description")) {
        $bu.Description = $Description
    }
    if ($parameters.ContainsKey("Name")) {
        $bu.Name = $Name
    }
    $businessUnitBuilder.Request().UpdateAsync($bu).GetAwaiter().GetResult()
            ]]>
      </CustomCommand>

      <CustomCommand Name="New-SnowBusinessUnit">
        <![CDATA[
    param (
        [parameter(Mandatory = $true)]
        [string]$Name,

        [parameter(Mandatory = $false)]
        [string]$BuHead,

        [parameter(Mandatory = $false)]
        [string]$Company,

        [parameter(Mandatory = $false)]
        [string]$Description,

        [parameter(Mandatory = $false)]
        [string]$Parent
    )
    $parameters = $MyInvocation.BoundParameters  
    $bu = New-Object -TypeName ServiceNow.Graph.Models.BusinessUnit
    $bu.Name = $Name
    if ($parameters.ContainsKey("BuHead") -and $BuHead) {
        $bu.BuHead = Get-ReferenceLink $BuHead
    }    
    if ($parameters.ContainsKey("Company") -and $Company) {
        $bu.Company = Get-ReferenceLink $Company
    }        
    if ($parameters.ContainsKey("Parent") -and $Parent) {
        $bu.Parent = Get-ReferenceLink $Parent
    }            
    if ($parameters.ContainsKey("Description")) {
        $bu.Description = $Description
    }
    $ServiceNowClient.BusinessUnits().Request().AddAsync($bu).GetAwaiter().GetResult()
            ]]>
      </CustomCommand>
    </CustomCommands>
    <PredefinedCommands></PredefinedCommands>
    <EnvironmentInitialization>

      <Connect>
        <CommandSequence>
          <Item Command="Get-ServiceNowClient" Order="1">
            <SetParameter Param="Domain" Source="ConnectionParameter" Value="Domain" />
            <SetParameter Param="ClientId" Source="ConnectionParameter" Value="ClientId" />
            <SetParameter Param="ClientSecret" Source="ConnectionParameter" Value="ClientSecret" ConversionMethod="ToSecureString"/>
            <SetParameter Param="UserName" Source="ConnectionParameter" Value="UserName" />
            <SetParameter Param="UserPassword" Source="ConnectionParameter" Value="UserPassword" ConversionMethod="ToSecureString"/>			
            <SetParameter Param="LibraryPath" Source="ConnectionParameter" Value="LibraryPath" />
            <SetParameter Param="PageSize" Source="ConnectionParameter" Value="PageSize" DataType="Int"/>
          </Item>
        </CommandSequence>
      </Connect>

      <Disconnect>
        <CommandSequence>
          <Item Command="Remove-ServiceNowClient" Order="1" />
        </CommandSequence>
      </Disconnect>

    </EnvironmentInitialization>
  </Initialization>
  <Schema>

    <Class Name="SysUser">
      <Properties>
        <Property Name="Id" DataType="String" IsUniqueKey="true" IsMandatory="false" AccessConstraint="ReadOnly" IsAutoFill="true" IsDisplay="false">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Id.ToString()" />
            <Bind CommandResultOf="Set-SnowUser" Path="Id.ToString()" />
            <Bind CommandResultOf="New-SnowUser" Path="Id.ToString()" />
          </ReturnBindings>
          <CommandMappings>
            <Map ToCommand="Get-SnowUser" Parameter="Id" />
            <Map ToCommand="Set-SnowUser" Parameter="Id" />
            <Map ToCommand="Remove-SnowUser" Parameter="Id" />
            <Map ToCommand="Set-SnowUserPassword" Parameter="Id" />
          </CommandMappings>
        </Property>

        <Property Name="WhenUpdated" DataType="DateTime" IsRevision="true" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="WhenUpdated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="WhenCreated" DataType="DateTime" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="WhenCreated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="DisplayName" DataType="String" IsDisplay="true" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Name" />
          </ReturnBindings>
        </Property>

        <Property Name="ObjectType" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="ObjectType" />
          </ReturnBindings>
        </Property>


        <Property Name="PasswordNeedsReset" DataType="Bool" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="PasswordNeedsReset" />
          </ReturnBindings>
        </Property>

        <Property Name="CreatedBy" DataType="String" AccessConstraint="ReadAndInsertOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="CreatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="HomePhone" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="HomePhone" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="HomePhone" />
            <Map ToCommand="New-SnowUser" Parameter="HomePhone" />
          </CommandMappings>
        </Property>
		<!-- 
        <Property Name="Division" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Division" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="Division" />
            <Map ToCommand="New-SnowUser" Parameter="Division" />
          </CommandMappings>
        </Property>
		 -->
        <Property Name="UpdatedBy" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="UpdatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="SysModCount" DataType="Int" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="SysModCount" />
          </ReturnBindings>
        </Property>

        <Property Name="LastLogin" DataType="DateTime" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="LastLogin.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="CalendarIntegration" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="CalendarIntegration" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="CalendarIntegration" />
            <Map ToCommand="New-SnowUser" Parameter="CalendarIntegration" />
          </CommandMappings>
        </Property>

        <Property Name="Country" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Country" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="Country" />
            <Map ToCommand="New-SnowUser" Parameter="Country" />
          </CommandMappings>
        </Property>

        <Property Name="UserPassword" DataType="String" AccessConstraint="WriteOnly">
          <ModifiedBy>
            <ModBy Command="Set-SnowUserPassword" Method="Update" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUserPassword" Parameter="Password" Converter="ToSecureString"/>
          </CommandMappings>
        </Property>

        <Property Name="LastLoginTime" DataType="DateTime" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="LastLoginTime.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="Source" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Source" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="Set-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="Source" />
            <Map ToCommand="New-SnowUser" Parameter="Source" />
          </CommandMappings>
        </Property>

        <Property Name="Building" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Building.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="State" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="State" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="State" />
            <Map ToCommand="New-SnowUser" Parameter="State" />
          </CommandMappings>
        </Property>

        <Property Name="FirstName" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="FirstName" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="FirstName" />
            <Map ToCommand="New-SnowUser" Parameter="FirstName" />
          </CommandMappings>
        </Property>

        <Property Name="MiddleName" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="MiddleName" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="MiddleName" />
            <Map ToCommand="New-SnowUser" Parameter="MiddleName" />
          </CommandMappings>
        </Property>

        <Property Name="LastName" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="LastName" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="LastName" />
            <Map ToCommand="New-SnowUser" Parameter="LastName" />
          </CommandMappings>
        </Property>

        <Property Name="EmployeeNumber" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="EmployeeNumber" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="EmployeeNumber" />
            <Map ToCommand="New-SnowUser" Parameter="EmployeeNumber" />
          </CommandMappings>
        </Property>

        <Property Name="Gender" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Gender" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser"  Method="Update"/>
            <ModBy Command="New-SnowUser"  Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="Gender" />
            <Map ToCommand="New-SnowUser" Parameter="Gender" />
          </CommandMappings>
        </Property>

        <Property Name="UserName" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="UserName" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="UserName" />
            <Map ToCommand="New-SnowUser" Parameter="UserName" />
          </CommandMappings>
        </Property>


        <Property Name="DateFormat" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="DateFormat" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser"  Method="Update"/>
            <ModBy Command="New-SnowUser"  Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="DateFormat" />
            <Map ToCommand="New-SnowUser" Parameter="DateFormat" />
          </CommandMappings>
        </Property>

        <Property Name="TimeZone" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="TimeZone" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser"  Method="Update"/>
            <ModBy Command="New-SnowUser"  Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="TimeZone" />
            <Map ToCommand="New-SnowUser" Parameter="TimeZone" />
          </CommandMappings>
        </Property>

        <Property Name="City" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="City" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser"  Method="Update"/>
            <ModBy Command="New-SnowUser"  Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="City" />
            <Map ToCommand="New-SnowUser" Parameter="City" />
          </CommandMappings>
        </Property>

        <Property Name="Title" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Title" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="Title" />
            <Map ToCommand="New-SnowUser" Parameter="Title" />
          </CommandMappings>
        </Property>

        <Property Name="InternalIntegrationUser" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="InternalIntegrationUser" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="InternalIntegrationUser" />
            <Map ToCommand="New-SnowUser" Parameter="InternalIntegrationUser" />
          </CommandMappings>
        </Property>

        <Property Name="Street" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Street" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="Street" />
            <Map ToCommand="New-SnowUser" Parameter="Street" />
          </CommandMappings>
        </Property>

        <Property Name="Email" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Email" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="Email" />
            <Map ToCommand="New-SnowUser" Parameter="Email" />
          </CommandMappings>
        </Property>

        <Property Name="Introduction" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Introduction" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="Introduction" />
            <Map ToCommand="New-SnowUser" Parameter="Introduction" />
          </CommandMappings>
        </Property>

        <Property Name="PreferredLanguage" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="PreferredLanguage" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser"  Method="Update"/>
            <ModBy Command="New-SnowUser"  Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="PreferredLanguage" />
            <Map ToCommand="New-SnowUser" Parameter="PreferredLanguage" />
          </CommandMappings>
        </Property>

        <Property Name="LockedOut" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="LockedOut" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser"  Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="LockedOut" />
          </CommandMappings>
        </Property>

        <Property Name="Phone" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Phone" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="Phone" />
            <Map ToCommand="New-SnowUser" Parameter="Phone" />
          </CommandMappings>
        </Property>

        <Property Name="MobilePhone" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="MobilePhone" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="MobilePhone" />
            <Map ToCommand="New-SnowUser" Parameter="MobilePhone" />
          </CommandMappings>
        </Property>

        <Property Name="Avatar" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Avatar" />
          </ReturnBindings>
        </Property>

        <Property Name="CostCenter" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="CostCenter.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="CostCenter" />
            <Map ToCommand="New-SnowUser" Parameter="CostCenter" />
          </CommandMappings>
        </Property>

        <Property Name="Manager" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Manager.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="Manager" />
            <Map ToCommand="New-SnowUser" Parameter="Manager" />
          </CommandMappings>
        </Property>

        <Property Name="Active" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Active" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser"  Method="Update"/>
            <ModBy Command="New-SnowUser"  Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="Active" />
            <Map ToCommand="New-SnowUser" Parameter="Active" />
          </CommandMappings>
        </Property>

        <Property Name="Notification" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Notification" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="Notification" />
            <Map ToCommand="New-SnowUser" Parameter="Notification" />
          </CommandMappings>
        </Property>

        <Property Name="FailedAttempts" DataType="Int" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="FailedAttempts" />
          </ReturnBindings>
        </Property>

        <Property Name="Roles" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Roles" />
          </ReturnBindings>
        </Property>

        <Property Name="LdapServer" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="LdapServer.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Company" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Company.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="Company" />
            <Map ToCommand="New-SnowUser" Parameter="Company" />
          </CommandMappings>
        </Property>

        <Property Name="Department" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Department.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser"  Method="Update"/>
            <ModBy Command="New-SnowUser"  Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="Department" />
            <Map ToCommand="New-SnowUser" Parameter="Department" />
          </CommandMappings>
        </Property>

        <Property Name="Photo" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Photo" />
          </ReturnBindings>
        </Property>

        <Property Name="Schedule" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Schedule.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Location" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Location.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser"  Method="Update"/>
            <ModBy Command="New-SnowUser"  Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="Location" />
            <Map ToCommand="New-SnowUser" Parameter="Location" />
          </CommandMappings>
        </Property>

        <Property Name="DefaultPerspective" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="DefaultPerspective.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="TimeFormat" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="TimeFormat" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="TimeFormat" />
            <Map ToCommand="New-SnowUser" Parameter="TimeFormat" />
          </CommandMappings>
        </Property>

        <Property Name="SsoSource" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="SsoSource" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="SsoSource" />
            <Map ToCommand="New-SnowUser" Parameter="SsoSource" />
          </CommandMappings>
        </Property>

        <Property Name="Zip" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Zip" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="Zip" />
            <Map ToCommand="New-SnowUser" Parameter="Zip" />
          </CommandMappings>
        </Property>

        <Property Name="Vip" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="Vip" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser" Method="Update" />
            <ModBy Command="New-SnowUser" Method="Insert" />
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="Vip" />
            <Map ToCommand="New-SnowUser" Parameter="Vip" />
          </CommandMappings>
        </Property>

        <Property Name="EnableMultifactorAuthentication" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="EnableMultifactorAuthentication" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowUser"  Method="Update"/>
            <ModBy Command="New-SnowUser"  Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowUser" Parameter="EnableMultifactorAuthentication" />
            <Map ToCommand="New-SnowUser" Parameter="EnableMultifactorAuthentication" />
          </CommandMappings>
        </Property>
		<!--
        <Property Name="LdapUpdated" DataType="DateTime" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="LdapUpdated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="LdapId" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowUser" Path="LdapId" />
          </ReturnBindings>
        </Property>
-->
      </Properties>

      <!-- Configuration items for readable types -->
      <ReadConfiguration>
        <ListingCommand Command="Get-SnowUser">
          <SetParameter Param="Select" Source="FixedValue" DataType="String" Value="sys_id,sys_updated_on,name,sys_class_name,location,manager,department,cost_center,company"/>
          <SetParameter Param="Filter" Source="ConnectionParameter" DataType="String" Value="Sys_User_Filter"/>
        </ListingCommand>
        <CommandSequence>
          <Item Command="Get-SnowUser" Order="1"/>
        </CommandSequence>
      </ReadConfiguration>

      <!-- Methods supported by this class -->
      <MethodConfiguration>
        <Method Name="Update">
          <CommandSequence>
            <Item Command="Set-SnowUser" Order="1" Condition="ModificationExists"/>
            <Item Command="Set-SnowUserPassword" Order="2" Condition="ModificationExists"/>
          </CommandSequence>
        </Method>
        <Method Name="Insert">
          <CommandSequence>
            <Item Command="New-SnowUser" Order="1"/>
            <Item Command="Set-SnowUserPassword" Order="2" Condition="ModificationExists"/>
          </CommandSequence>
        </Method>
        <Method Name="Delete">
          <CommandSequence>
            <Item Command="Remove-SnowUser" Order="1" />
          </CommandSequence>
        </Method>
      </MethodConfiguration>
    </Class>

    <Class Name="SysUserGroup">
      <Properties>
        <Property Name="Id" DataType="String" AccessConstraint="ReadOnly" IsUniqueKey="true" IsAutoFill="true" IsDisplay="false">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="Id.ToString()" />
            <Bind CommandResultOf="Set-SnowGroup" Path="Id.ToString()" />
            <Bind CommandResultOf="New-SnowGroup" Path="Id.ToString()" />
          </ReturnBindings>
          <CommandMappings>
            <Map ToCommand="Get-SnowGroup" Parameter="Id" />
            <Map ToCommand="Set-SnowGroup" Parameter="Id" />
            <Map ToCommand="Remove-SnowGroup" Parameter="Id" />
          </CommandMappings>
        </Property>

        <Property Name="WhenUpdated" DataType="DateTime" IsRevision="true" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="WhenUpdated.DateTime"/>
            <Bind CommandResultOf="Set-SnowGroup" Path="WhenUpdated.DateTime"/>
            <Bind CommandResultOf="New-SnowGroup" Path="WhenUpdated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="WhenCreated" DataType="DateTime" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="WhenCreated.DateTime"/>
            <Bind CommandResultOf="Set-SnowGroup" Path="WhenCreated.DateTime"/>
            <Bind CommandResultOf="New-SnowGroup" Path="WhenCreated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="Name" DataType="String" IsDisplay="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="Name" />
            <Bind CommandResultOf="Set-SnowGroup" Path="Name" />
            <Bind CommandResultOf="New-SnowGroup" Path="Name" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowGroup" Method="Insert"/>
            <ModBy Command="Set-SnowGroup" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowGroup" Parameter="Name"/>
            <Map ToCommand="New-SnowGroup" Parameter="Name"/>
          </CommandMappings>
        </Property>


        <Property Name="ObjectType" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="ObjectType" />
            <Bind CommandResultOf="Set-SnowGroup" Path="ObjectType" />
            <Bind CommandResultOf="New-SnowGroup" Path="ObjectType" />
          </ReturnBindings>
        </Property>

        <Property Name="CreatedBy" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="CreatedBy" />
            <Bind CommandResultOf="Set-SnowGroup" Path="CreatedBy" />
            <Bind CommandResultOf="New-SnowGroup" Path="CreatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="UpdatedBy" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="UpdatedBy" />
            <Bind CommandResultOf="Set-SnowGroup" Path="UpdatedBy" />
            <Bind CommandResultOf="New-SnowGroup" Path="UpdatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="SysModCount" DataType="Int" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="SysModCount" />
            <Bind CommandResultOf="Set-SnowGroup" Path="SysModCount" />
            <Bind CommandResultOf="New-SnowGroup" Path="SysModCount" />
          </ReturnBindings>
        </Property>

        <Property Name="SysTags" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="SysTags" />
            <Bind CommandResultOf="Set-SnowGroup" Path="SysTags" />
            <Bind CommandResultOf="New-SnowGroup" Path="SysTags" />
          </ReturnBindings>
        </Property>

        <Property Name="Description" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="Description" />
            <Bind CommandResultOf="Set-SnowGroup" Path="Description" />
            <Bind CommandResultOf="New-SnowGroup" Path="Description" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowGroup" Method="Insert"/>
            <ModBy Command="Set-SnowGroup" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowGroup" Parameter="Description"/>
            <Map ToCommand="New-SnowGroup" Parameter="Description"/>
          </CommandMappings>
        </Property>

        <Property Name="Type" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="Type" />
            <Bind CommandResultOf="Set-SnowGroup" Path="Type" />
            <Bind CommandResultOf="New-SnowGroup" Path="Type" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowGroup" Method="Insert"/>
            <ModBy Command="Set-SnowGroup" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowGroup" Parameter="Type"/>
            <Map ToCommand="New-SnowGroup" Parameter="Type"/>
         </CommandMappings>
        </Property>

        <Property Name="HourlyRate" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="HourlyRate" />
            <Bind CommandResultOf="Set-SnowGroup" Path="HourlyRate" />
            <Bind CommandResultOf="New-SnowGroup" Path="HourlyRate" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowGroup" Method="Insert"/>
            <ModBy Command="Set-SnowGroup" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowGroup" Parameter="HourlyRate"/>
            <Map ToCommand="New-SnowGroup" Parameter="HourlyRate"/>
          </CommandMappings>
        </Property>

        <Property Name="Active" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="Active" />
            <Bind CommandResultOf="Set-SnowGroup" Path="Active" />
            <Bind CommandResultOf="New-SnowGroup" Path="Active" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowGroup" Method="Insert"/>
            <ModBy Command="Set-SnowGroup" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowGroup" Parameter="Active"/>
            <Map ToCommand="New-SnowGroup" Parameter="Active"/>
          </CommandMappings>
        </Property>

        <Property Name="ExcludeManager" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="ExcludeManager" />
            <Bind CommandResultOf="Set-SnowGroup" Path="ExcludeManager" />
            <Bind CommandResultOf="New-SnowGroup" Path="ExcludeManager" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowGroup" Method="Insert"/>
            <ModBy Command="Set-SnowGroup" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowGroup" Parameter="ExcludeManager"/>
            <Map ToCommand="New-SnowGroup" Parameter="ExcludeManager"/>
          </CommandMappings>
        </Property>

        <Property Name="DefaultAssignee" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="DefaultAssignee.ToString()" />
            <Bind CommandResultOf="Set-SnowGroup" Path="DefaultAssignee.ToString()" />
            <Bind CommandResultOf="New-SnowGroup" Path="DefaultAssignee.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowGroup" Method="Insert"/>
            <ModBy Command="Set-SnowGroup" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowGroup" Parameter="DefaultAssignee"/>
            <Map ToCommand="New-SnowGroup" Parameter="DefaultAssignee"/>
          </CommandMappings>
        </Property>

        <Property Name="CostCenter" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="CostCenter.ToString()" />
            <Bind CommandResultOf="Set-SnowGroup" Path="CostCenter.ToString()" />
            <Bind CommandResultOf="New-SnowGroup" Path="CostCenter.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowGroup" Method="Insert"/>
            <ModBy Command="Set-SnowGroup" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowGroup" Parameter="CostCenter"/>
            <Map ToCommand="New-SnowGroup" Parameter="CostCenter"/>
          </CommandMappings>
        </Property>

        <Property Name="Source" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="Source" />
            <Bind CommandResultOf="Set-SnowGroup" Path="Source" />
            <Bind CommandResultOf="New-SnowGroup" Path="Source" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowGroup" Method="Insert"/>
            <ModBy Command="Set-SnowGroup" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowGroup" Parameter="Source"/>
            <Map ToCommand="New-SnowGroup" Parameter="Source"/>
          </CommandMappings>
        </Property>

        <Property Name="Roles" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="Roles" />
            <Bind CommandResultOf="Set-SnowGroup" Path="Roles" />
            <Bind CommandResultOf="New-SnowGroup" Path="Roles" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowGroup" Method="Insert"/>
            <ModBy Command="Set-SnowGroup" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowGroup" Parameter="Roles"/>
            <Map ToCommand="New-SnowGroup" Parameter="Roles"/>
          </CommandMappings>
        </Property>

        <Property Name="Manager" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="Manager.ToString()" />
            <Bind CommandResultOf="Set-SnowGroup" Path="Manager.ToString()" />
            <Bind CommandResultOf="New-SnowGroup" Path="Manager.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowGroup" Method="Insert"/>
            <ModBy Command="Set-SnowGroup" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowGroup" Parameter="Manager"/>
            <Map ToCommand="New-SnowGroup" Parameter="Manager"/>
          </CommandMappings>
        </Property>

        <Property Name="ParentGroup" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="Parent.ToString()" />
            <Bind CommandResultOf="Set-SnowGroup" Path="Parent.ToString()" />
            <Bind CommandResultOf="New-SnowGroup" Path="Parent.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowGroup" Method="Insert"/>
            <ModBy Command="Set-SnowGroup" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowGroup" Parameter="Parent"/>
            <Map ToCommand="New-SnowGroup" Parameter="Parent"/>
          </CommandMappings>
        </Property>

        <Property Name="IncludeMembers" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="IncludeMembers" />
            <Bind CommandResultOf="Set-SnowGroup" Path="IncludeMembers" />
            <Bind CommandResultOf="New-SnowGroup" Path="IncludeMembers" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowGroup" Method="Insert"/>
            <ModBy Command="Set-SnowGroup" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowGroup" Parameter="IncludeMembers"/>
            <Map ToCommand="New-SnowGroup" Parameter="IncludeMembers"/>
          </CommandMappings>
        </Property>

        <Property Name="Email" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroup" Path="Email" />
            <Bind CommandResultOf="Set-SnowGroup" Path="Email" />
            <Bind CommandResultOf="New-SnowGroup" Path="Email" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowGroup" Method="Insert"/>
            <ModBy Command="Set-SnowGroup" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowGroup" Parameter="Email"/>
            <Map ToCommand="New-SnowGroup" Parameter="Email"/>
          </CommandMappings>
        </Property>

      </Properties>

      <!-- Configuration items for readable types -->
      <ReadConfiguration>
        <ListingCommand Command="Get-SnowGroup">
          <SetParameter Param="Select" Source="FixedValue" DataType="String" Value="sys_id,sys_updated_on,name,sys_class_name,parent,manager,default_assignee,cost_center"/>
          <SetParameter Param="Filter" Source="ConnectionParameter" DataType="String" Value="Sys_User_Group_Filter"/>
        </ListingCommand>
        <CommandSequence>
          <Item Command="Get-SnowGroup" Order="1"/>
        </CommandSequence>
      </ReadConfiguration>

      <!-- Methods supported by this class -->
      <MethodConfiguration>
        <Method Name="Update">
          <CommandSequence>
            <Item Command="Set-SnowGroup" Order="1" Condition="ModificationExists"/>
          </CommandSequence>
        </Method>
        <Method Name="Insert">
          <CommandSequence>
            <Item Command="New-SnowGroup" Order="1"/>
          </CommandSequence>
        </Method>
        <Method Name="Delete">
          <CommandSequence>
            <Item Command="Remove-SnowGroup" Order="1" />
          </CommandSequence>
        </Method>
      </MethodConfiguration>
    </Class>
    <Class Name="ServiceCatalog">
      <Properties>
        <Property Name="Id" DataType="String" AccessConstraint="ReadOnly" IsMandatory="true" IsUniqueKey="true" IsAutoFill="true" IsDisplay="false">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="Id.ToString()" />
          </ReturnBindings>
          <CommandMappings>
            <Map ToCommand="Get-SnowServiceCatalog" Parameter="Id" />
          </CommandMappings>
        </Property>

        <Property Name="WhenUpdated" DataType="DateTime" IsRevision="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="WhenUpdated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="WhenCreated" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="WhenCreated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="ObjectType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="ObjectType" />
          </ReturnBindings>
        </Property>

        <Property Name="CreatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="CreatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="UpdatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="UpdatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="SysModCount" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="SysModCount" />
          </ReturnBindings>
        </Property>

        <Property Name="SysTags" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="SysTags" />
          </ReturnBindings>
        </Property>

        <Property Name="Description" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="Description" />
          </ReturnBindings>
        </Property>

        <Property Name="EnableWishList" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="EnableWishList" />
          </ReturnBindings>
        </Property>

        <Property Name="Title" DataType="String" IsDisplay="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="Title" />
          </ReturnBindings>
        </Property>

        <Property Name="DesktopImage" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="DesktopImage" />
          </ReturnBindings>
        </Property>

        <Property Name="DesktopHomePage" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="DesktopHomePage" />
          </ReturnBindings>
        </Property>

        <Property Name="Editors" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="Editors" />
          </ReturnBindings>
        </Property>

        <Property Name="Active" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="Active" />
          </ReturnBindings>
        </Property>

        <Property Name="DesktopContinueShopping" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="DesktopContinueShopping" />
          </ReturnBindings>
        </Property>

        <Property Name="BackgroundColor" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="BackgroundColor" />
          </ReturnBindings>
        </Property>

        <Property Name="Manager" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="Manager.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="SysReplaceOnUpgrade" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="SysReplaceOnUpgrade" />
          </ReturnBindings>
        </Property>

        <Property Name="SysPackage" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="SysPackage.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="SysUpdateName" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="SysUpdateName" />
          </ReturnBindings>
        </Property>

        <Property Name="SysName" DataType="String" IsDisplay="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="SysName" />
          </ReturnBindings>
        </Property>

        <Property Name="SysScope" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="SysScope.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="SysCustomerUpdate" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="SysCustomerUpdate" />
          </ReturnBindings>
        </Property>

        <Property Name="SysPolicy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowServiceCatalog" Path="SysPolicy" />
          </ReturnBindings>
        </Property>

      </Properties>
      <!-- Configuration items for readable types -->
      <ReadConfiguration>
        <ListingCommand Command="Get-SnowServiceCatalog">
          <SetParameter Param="Select" Source="FixedValue" DataType="String" Value="sys_id,sys_updated_on,manager,title"/>
          <SetParameter Param="Filter" Source="ConnectionParameter" DataType="String" Value="Sc_Catalog_Filter"/>
        </ListingCommand>
        <CommandSequence>
          <Item Command="Get-SnowServiceCatalog" Order="1"/>
        </CommandSequence>
      </ReadConfiguration>

      <!-- Methods supported by this class -->
      <MethodConfiguration/>
    </Class>

    <Class Name="SysUserGroupMember">
      <Properties>
        <Property Name="Id" DataType="String" AccessConstraint="ReadOnly" IsAutoFill="true" IsUniqueKey="true" IsDisplay="false">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroupMembership" Path="Id.ToString()" />
            <Bind CommandResultOf="New-SnowGroupMembership" Path="Id.ToString()" />
          </ReturnBindings>
          <CommandMappings>
            <Map ToCommand="Get-SnowGroupMembership" Parameter="Id" />
            <Map ToCommand="Remove-SnowGroupMembership" Parameter="Id" />
          </CommandMappings>
        </Property>

        <Property Name="WhenUpdated" DataType="DateTime" IsRevision="true" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroupMembership" Path="WhenUpdated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="WhenCreated" DataType="DateTime" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroupMembership" Path="WhenCreated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="User" DataType="String" IsDisplay="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroupMembership" Path="User.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowGroupMembership" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowGroupMembership" Parameter="User" />
          </CommandMappings>
        </Property>

        <Property Name="ObjectType" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroupMembership" Path="ObjectType" />
          </ReturnBindings>
        </Property>

        <Property Name="CreatedBy" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroupMembership" Path="CreatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="UpdatedBy" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroupMembership" Path="UpdatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="SysModCount" DataType="Int" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroupMembership" Path="SysModCount" />
          </ReturnBindings>
        </Property>

        <Property Name="SysTags" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroupMembership" Path="SysTags" />
          </ReturnBindings>
        </Property>

        <Property Name="Group" DataType="String" IsDisplay="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowGroupMembership" Path="Group.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowGroupMembership" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowGroupMembership" Parameter="Group" />
          </CommandMappings>
        </Property>

      </Properties>

      <!-- Configuration items for readable types -->
      <ReadConfiguration>
        <ListingCommand Command="Get-SnowGroupMembership">
          <SetParameter Param="Filter" Source="ConnectionParameter" DataType="String" Value="Sys_User_GRMember_Filter"/>
        </ListingCommand>
        <CommandSequence>
          <Item Command="Get-SnowGroupMembership" Order="1"/>
        </CommandSequence>
      </ReadConfiguration>

      <!-- Methods supported by this class -->
      <MethodConfiguration>
        <Method Name="Insert">
          <CommandSequence>
            <Item Command="New-SnowGroupMembership" Order="1"/>
          </CommandSequence>
        </Method>
        <Method Name="Delete">
          <CommandSequence>
            <Item Command="Remove-SnowGroupMembership" Order="1" />
          </CommandSequence>
        </Method>
      </MethodConfiguration>

    </Class>

    <Class Name="Task">
      <Properties>
        <Property Name="Id" DataType="String" AccessConstraint="ReadOnly" IsMandatory="true" IsUniqueKey="true" IsAutoFill="true" IsDisplay="false">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="Id.ToString()" />
          </ReturnBindings>
          <CommandMappings>
            <Map ToCommand="Get-SnowTask" Parameter="Id" />
          </CommandMappings>
        </Property>

        <Property Name="WhenUpdated" DataType="DateTime" IsRevision="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="WhenUpdated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="WhenCreated" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="WhenCreated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="Number" DataType="String" IsDisplay="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="Number" />
          </ReturnBindings>
        </Property>

        <Property Name="ObjectType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="ObjectType" />
          </ReturnBindings>
        </Property>


        <Property Name="MadeSla" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="MadeSla" />
          </ReturnBindings>
        </Property>

        <Property Name="CreatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="CreatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="WatchList" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="WatchList" />
          </ReturnBindings>
        </Property>

        <Property Name="UpdatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="UpdatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="SysModCount" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="SysModCount" />
          </ReturnBindings>
        </Property>

        <Property Name="SysTags" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="SysTags" />
          </ReturnBindings>
        </Property>

        <Property Name="UponReject" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="UponReject" />
          </ReturnBindings>
        </Property>

        <Property Name="ApprovalHistory" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="ApprovalHistory"/>
          </ReturnBindings>
        </Property>

        <Property Name="OpenedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="OpenedBy.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Parent" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="Parent.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="UserInput" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="UserInput" />
          </ReturnBindings>
        </Property>

        <Property Name="SysDomain" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="SysDomain.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="State" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="State" />
          </ReturnBindings>
        </Property>

        <Property Name="Knowledge" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="Knowledge" />
          </ReturnBindings>
        </Property>

        <Property Name="Order" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="Order" />
          </ReturnBindings>
        </Property>

        <Property Name="ClosedAt" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="ClosedAt.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="CmdbCi" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="CmdbCi.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="DeliveryPlan" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="DeliveryPlan.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Impact" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="Impact" />
          </ReturnBindings>
        </Property>

        <Property Name="Active" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="Active" />
          </ReturnBindings>
        </Property>

        <Property Name="WorkNotesList" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="WorkNotesList" />
          </ReturnBindings>
        </Property>

        <Property Name="BusinessService" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="BusinessService.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Priority" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="Priority" />
          </ReturnBindings>
        </Property>


        <Property Name="SysDomainPath" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="SysDomainPath" />
          </ReturnBindings>
        </Property>

        <Property Name="TimeWorked" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="TimeWorked" />
          </ReturnBindings>
        </Property>

        <Property Name="ExpectedStart" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="ExpectedStart.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="OpenedAt" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="OpenedAt.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="BusinessDuration" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="BusinessDuration.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="GroupList" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="GroupList" />
          </ReturnBindings>
        </Property>

        <Property Name="WorkEnd" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="WorkEnd.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="ApprovalSet" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="ApprovalSet.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="WorkNotes" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="WorkNotes" />
          </ReturnBindings>
        </Property>

        <Property Name="ShortDescription" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="ShortDescription" />
          </ReturnBindings>
        </Property>

        <Property Name="CorrelationDisplay" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="CorrelationDisplay" />
          </ReturnBindings>
        </Property>

        <Property Name="DeliveryTask" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="DeliveryTask.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="WorkStart" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="WorkStart.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="AssignmentGroup" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="AssignmentGroup.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="AdditionalAssigneeList" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="AdditionalAssigneeList" />
          </ReturnBindings>
        </Property>

        <Property Name="Description" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="Description" />
          </ReturnBindings>
        </Property>

        <Property Name="CalendarDuration" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="CalendarDuration.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="CloseNotes" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="CloseNotes" />
          </ReturnBindings>
        </Property>

        <Property Name="ServiceOffering" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="ServiceOffering.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="ClosedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="ClosedBy.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="FollowUp" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="FollowUp.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="ContactType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="ContactType" />
          </ReturnBindings>
        </Property>

        <Property Name="Urgency" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="Urgency" />
          </ReturnBindings>
        </Property>

        <Property Name="Company" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="Company.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="ReassignmentCount" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="ReassignmentCount" />
          </ReturnBindings>
        </Property>

        <Property Name="ActivityDue" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="ActivityDue.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="AssignedTo" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="AssignedTo.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Comments" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="Comments" />
          </ReturnBindings>
        </Property>

        <Property Name="Approval" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="Approval" />
          </ReturnBindings>
        </Property>

        <Property Name="SlaDue" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="SlaDue.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="CommentsAndWorkNotes" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="CommentsAndWorkNotes" />
          </ReturnBindings>
        </Property>

        <Property Name="DueDate" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="DueDate.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="Escalation" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="Escalation" />
          </ReturnBindings>
        </Property>

        <Property Name="UponApproval" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="UponApproval" />
          </ReturnBindings>
        </Property>

        <Property Name="CorrelationId" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="CorrelationId" />
          </ReturnBindings>
        </Property>

        <Property Name="Location" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowTask" Path="Location.ToString()" />
          </ReturnBindings>
        </Property>

      </Properties>

      <!-- Configuration items for readable types -->
      <ReadConfiguration>
        <ListingCommand Command="Get-SnowTask">
          <SetParameter Param="Select" Source="FixedValue" DataType="String" Value="sys_id,sys_updated_on,number,sys_class_name"/>
          <SetParameter Param="Filter" Source="ConnectionParameter" DataType="String" Value="Task_Filter"/>
        </ListingCommand>
        <CommandSequence>
          <Item Command="Get-SnowTask" Order="1"/>
        </CommandSequence>
      </ReadConfiguration>

      <!-- Methods supported by this class -->

      <MethodConfiguration>

      </MethodConfiguration>

    </Class>

    <Class Name="CatalogRequest">
      <Properties>
        <Property Name="Id" DataType="String" AccessConstraint="ReadOnly" IsUniqueKey="true" IsAutoFill="true" IsMandatory="false"  IsDisplay="false">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="Id.ToString()" />
            <Bind CommandResultOf="Set-SnowCatalogRequest" Path="Id.ToString()" />
            <Bind CommandResultOf="New-SnowCatalogRequest" Path="Id.ToString()" />
          </ReturnBindings>
          <CommandMappings>
            <Map ToCommand="Get-SnowCatalogRequest" Parameter="Id" />
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="Id" />
            <Map ToCommand="Get-SnowJournalFields" Parameter="Id" />
          </CommandMappings>
        </Property>

        <Property Name="WhenUpdated" DataType="DateTime" IsRevision="true" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="WhenUpdated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="WhenCreated" DataType="DateTime" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="WhenCreated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="Number" DataType="String" IsDisplay="true" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="Number" />
          </ReturnBindings>
        </Property>

        <Property Name="ObjectType" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="ObjectType" />
          </ReturnBindings>
        </Property>

        <Property Name="MadeSla" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="MadeSla" />
          </ReturnBindings>
        </Property>

        <Property Name="CreatedBy" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="CreatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="WatchList" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="WatchList" />
          </ReturnBindings>
        </Property>

        <Property Name="UpdatedBy" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="UpdatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="SysModCount" DataType="Int" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="SysModCount" />
          </ReturnBindings>
        </Property>

        <Property Name="SysTags" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="SysTags" />
          </ReturnBindings>
        </Property>

        <Property Name="UponReject" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="UponReject" />
         </ReturnBindings>
        </Property>

        <Property Name="ApprovalHistory" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="ApprovalHistory"/>
          </ReturnBindings>
        </Property>

        <Property Name="OpenedBy" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="OpenedBy.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Parent" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="Parent.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="UserInput" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="UserInput" />
          </ReturnBindings>
        </Property>

        <Property Name="SysDomain" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="SysDomain.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="State" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="State" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="State"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="State"/>
          </CommandMappings>
        </Property>

        <Property Name="Knowledge" DataType="Bool" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="Knowledge" />
          </ReturnBindings>
        </Property>

        <Property Name="Order" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="Order" />
          </ReturnBindings>
        </Property>

        <Property Name="ClosedAt" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="ClosedAt.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="CmdbCi" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="CmdbCi.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="CmdbCi"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="CmdbCi"/>
          </CommandMappings>
        </Property>

        <Property Name="DeliveryPlan" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="DeliveryPlan.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="UniversalRequest" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="UniversalRequest.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="RejectionGoto" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="RejectionGoto.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Impact" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="Impact" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="Impact"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="Impact"/>
          </CommandMappings>
        </Property>

        <Property Name="Active" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="Active" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="Active"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="Active"/>
          </CommandMappings>
        </Property>

        <Property Name="WorkNotesList" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="WorkNotesList" />
          </ReturnBindings>
        </Property>

        <Property Name="BusinessService" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="BusinessService.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="BusinessService"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="BusinessService"/>
          </CommandMappings>
        </Property>

        <Property Name="Priority" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="Priority" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="Priority"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="Priority"/>
          </CommandMappings>
        </Property>


        <Property Name="SysDomainPath" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="SysDomainPath" />
          </ReturnBindings>
        </Property>

        <Property Name="TimeWorked" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="TimeWorked" />
          </ReturnBindings>
        </Property>

        <Property Name="ExpectedStart" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="ExpectedStart.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="OpenedAt" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="OpenedAt.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="BusinessDuration" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="BusinessDuration.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="GroupList" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="GroupList" />
          </ReturnBindings>
        </Property>

        <Property Name="WorkEnd" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="WorkEnd.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="ApprovalSet" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="ApprovalSet.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="WorkNotes" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="WorkNotes" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="WorkNotes"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="WorkNotes"/>
          </CommandMappings>
        </Property>

        <Property Name="ShortDescription" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="ShortDescription" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="ShortDescription"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="ShortDescription"/>
          </CommandMappings>
        </Property>

        <Property Name="CorrelationDisplay" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="CorrelationDisplay" />
          </ReturnBindings>
        </Property>

        <Property Name="DeliveryTask" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="DeliveryTask.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="WorkStart" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="WorkStart.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="AssignmentGroup" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="AssignmentGroup.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="AssignmentGroup"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="AssignmentGroup"/>
          </CommandMappings>
        </Property>

        <Property Name="AdditionalAssigneeList" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="AdditionalAssigneeList" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="AdditionalAssigneeList"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="AdditionalAssigneeList"/>
          </CommandMappings>
        </Property>

        <Property Name="Description" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="Description" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="Description"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="Description"/>
          </CommandMappings>
        </Property>

        <Property Name="CalendarDuration" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="CalendarDuration.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="CloseNotes" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="CloseNotes" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="CloseNotes"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="CloseNotes"/>
          </CommandMappings>
        </Property>

        <Property Name="ServiceOffering" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="ServiceOffering.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="ServiceOffering"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="ServiceOffering"/>
          </CommandMappings>
        </Property>

        <Property Name="ClosedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="ClosedBy.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="ClosedBy"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="ClosedBy"/>
          </CommandMappings>
        </Property>

        <Property Name="FollowUp" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="FollowUp.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="ContactType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="ContactType" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="ContactType"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="ContactType"/>
          </CommandMappings>
        </Property>

        <Property Name="Urgency" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="Urgency" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="Urgency"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="Urgency"/>
          </CommandMappings>
        </Property>

        <Property Name="Company" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="Company.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="Company"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="Company"/>
          </CommandMappings>
        </Property>

        <Property Name="ReassignmentCount" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="ReassignmentCount" />
          </ReturnBindings>
        </Property>

        <Property Name="ActivityDue" DataType="DateTime" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="ActivityDue.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="AssignedTo" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="AssignedTo.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="AssignedTo"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="AssignedTo"/>
          </CommandMappings>
        </Property>

        <Property Name="Comments" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="Comments" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="Comments"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="Comments"/>
          </CommandMappings>
        </Property>

        <Property Name="Approval" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="Approval" />
          </ReturnBindings>
        </Property>

        <Property Name="SlaDue" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="SlaDue.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="CommentsAndWorkNotes" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowJournalFields" Path="CommentsAndWorkNotes" />
          </ReturnBindings>
        </Property>

        <Property Name="DueDate" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="DueDate.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="Escalation" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="Escalation" />
          </ReturnBindings>
        </Property>

        <Property Name="UponApproval" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="UponApproval" />
          </ReturnBindings>
        </Property>

        <Property Name="CorrelationId" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="CorrelationId" />
          </ReturnBindings>
        </Property>

        <Property Name="Location" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="Location.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="Location"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="Location"/>
          </CommandMappings>
        </Property>

        <Property Name="CalendarStc" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="CalendarStc" />
          </ReturnBindings>
        </Property>

        <Property Name="Price" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="Price" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="Price"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="Price"/>
          </CommandMappings>
        </Property>

        <Property Name="DeliveryAddress" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="DeliveryAddress" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="DeliveryAddress"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="DeliveryAddress"/>
          </CommandMappings>
        </Property>

        <Property Name="ParentInteraction" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="ParentInteraction.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="RequestedForDate" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="RequestedForDate.DateTime" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="RequestedForDate"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="RequestedForDate"/>
          </CommandMappings>
        </Property>

        <Property Name="RequestedFor" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="RequestedFor.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="RequestedFor"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="RequestedFor"/>
          </CommandMappings>
        </Property>

        <Property Name="SpecialInstructions" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="SpecialInstructions" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogRequest" Method="Update"/>
            <ModBy Command="New-SnowCatalogRequest" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogRequest" Parameter="SpecialInstructions"/>
            <Map ToCommand="New-SnowCatalogRequest" Parameter="SpecialInstructions"/>
          </CommandMappings>
        </Property>

        <Property Name="RequestState" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="RequestState" />
          </ReturnBindings>
        </Property>

        <Property Name="RouteReason" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="RouteReason" />
          </ReturnBindings>
        </Property>

        <Property Name="TaskEffectiveNumber" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="TaskEffectiveNumber" />
          </ReturnBindings>
        </Property>

        <Property Name="Variables" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="Variables" />
          </ReturnBindings>
        </Property>

        <Property Name="WorkflowActivity" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="WorkflowActivity.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Stage" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogRequest" Path="Stage" />
          </ReturnBindings>
        </Property>
      </Properties>

      <!-- Configuration items for readable types -->
      <ReadConfiguration>
        <ListingCommand Command="Get-SnowCatalogRequest">
          <SetParameter Param="Select" Source="FixedValue" DataType="String" Value="sys_id,sys_updated_on,number,sys_class_name,assigned_to,assignment_group,closed_by,opened_by,parent,requested_for,location"/>
          <SetParameter Param="Filter" Source="ConnectionParameter" DataType="String" Value="SC_Request_Filter"/>
        </ListingCommand>
        <CommandSequence>
          <Item Command="Get-SnowCatalogRequest" Order="1"/>
          <Item Command="Get-SnowJournalFields" Order="2">
            <SetParameter Param="Select" Source="FixedValue" DataType="String" Value="comments_and_work_notes"/>
            <SetParameter Param="Table" Source="FixedValue" DataType="String" Value="sc_request"/>
          </Item>
        </CommandSequence>
      </ReadConfiguration>

      <!-- Methods supported by this class -->
      <MethodConfiguration>
        <Method Name="Update">
          <CommandSequence>
            <Item Command="Set-SnowCatalogRequest" Order="1" Condition="ModificationExists"/>
          </CommandSequence>
        </Method>
        <Method Name="Insert">
          <CommandSequence>
            <Item Command="New-SnowCatalogRequest" Order="1"/>
          </CommandSequence>
        </Method>
      </MethodConfiguration>


    </Class>

    <Class Name="Location">
      <Properties>
        <Property Name="Id" DataType="String" AccessConstraint="ReadOnly" IsMandatory="true" IsUniqueKey="true" IsAutoFill="true" IsDisplay="false">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="Id.ToString()" />
          </ReturnBindings>
          <CommandMappings>
            <Map ToCommand="Get-SnowLocation" Parameter="Id" />
          </CommandMappings>
        </Property>

        <Property Name="WhenUpdated" DataType="DateTime" IsRevision="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="WhenUpdated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="WhenCreated" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="WhenCreated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="CreatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="CreatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="ObjectType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="ObjectType" />
          </ReturnBindings>
        </Property>

        <Property Name="UpdatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="UpdatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="SysModCount" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="SysModCount" />
          </ReturnBindings>
        </Property>

        <Property Name="Name" DataType="String" IsDisplay="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="Name" />
          </ReturnBindings>
        </Property>

        <Property Name="Country" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="Country"/>
          </ReturnBindings>
        </Property>

        <Property Name="Parent" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="Parent.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="City" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="City" />
          </ReturnBindings>
        </Property>

        <Property Name="Latitude" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="Latitude" />
          </ReturnBindings>
        </Property>

        <Property Name="LatitudeOld" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="LatitudeOld" />
          </ReturnBindings>
        </Property>

        <Property Name="StockRoom" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="StockRoom" />
          </ReturnBindings>
        </Property>

        <Property Name="Street" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="Street" />
          </ReturnBindings>
        </Property>

        <Property Name="Contact" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="Contact.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="PrimaryLocation" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="PrimaryLocation.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="PhoneTerritory" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="PhoneTerritory.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="LifeCycleStage" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="LifeCycleStage.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="LifeCycleStageStatus" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="LifeCycleStageStatus.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Company" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="Company.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="ManagedByGroup" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="ManagedByGroup.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="LatLongError" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="LatLongError" />
          </ReturnBindings>
        </Property>

        <Property Name="State" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="State" />
          </ReturnBindings>
        </Property>

        <Property Name="Longitude" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="Longitude" />
          </ReturnBindings>
        </Property>

        <Property Name="LongitudeOld" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="LongitudeOld" />
          </ReturnBindings>
        </Property>

        <Property Name="Zip" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="Zip" />
          </ReturnBindings>
        </Property>

        <Property Name="TimeZone" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="TimeZone" />
          </ReturnBindings>
        </Property>

        <Property Name="FullName" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="FullName" />
          </ReturnBindings>
        </Property>


        <Property Name="FaxPhone" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="FaxPhone" />
          </ReturnBindings>
        </Property>

        <Property Name="Phone" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="Phone" />
          </ReturnBindings>
        </Property>        
        
        <Property Name="Duplicate" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="Duplicate" />
          </ReturnBindings>
        </Property>

        <Property Name="CoordinatesRetrievedOn" DataType="DateTime" IsRevision="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="CoordinatesRetrievedOn.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="CmnLocationType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="CmnLocationType" />
          </ReturnBindings>
        </Property>

        <Property Name="CmnLocationSource" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowLocation" Path="CmnLocationSource" />
          </ReturnBindings>
        </Property>


      </Properties>

      <!-- Configuration items for readable types -->
      <ReadConfiguration>
        <ListingCommand Command="Get-SnowLocation">
          <SetParameter Param="Select" Source="FixedValue" DataType="String" Value="sys_id,sys_updated_on,name,contact,parent"/>
          <SetParameter Param="Filter" Source="ConnectionParameter" DataType="String" Value="CMN_Location_Filter"/>
        </ListingCommand>
        <CommandSequence>
          <Item Command="Get-SnowLocation" Order="1"/>
        </CommandSequence>
      </ReadConfiguration>

      <!-- Methods supported by this class -->
      <MethodConfiguration>

      </MethodConfiguration>

    </Class>

    <Class Name="Variable">
      <Properties>
        <Property Name="Id" DataType="String" AccessConstraint="ReadOnly" IsMandatory="true" IsUniqueKey="true" IsAutoFill="true" IsDisplay="false">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Id.ToString()" />
          </ReturnBindings>
          <CommandMappings>
            <Map ToCommand="Get-SnowVariable" Parameter="Id" />
          </CommandMappings>
        </Property>

        <Property Name="WhenUpdated" DataType="DateTime" IsRevision="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="WhenUpdated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="WhenCreated" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="WhenCreated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="ObjectType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="ObjectType" />
          </ReturnBindings>
        </Property>

        <Property Name="CreatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="CreatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="UpdatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="UpdatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="SysModCount" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="SysModCount" />
          </ReturnBindings>
        </Property>

        <Property Name="SysTags" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="SysTags" />
          </ReturnBindings>
        </Property>

        <Property Name="Category" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Category.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="CatalogItem" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="CatalogItem.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="DeliveryPlan" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="DeliveryPlan.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Description" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Description" />
          </ReturnBindings>
        </Property>

        <Property Name="Global" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Global" />
          </ReturnBindings>
        </Property>

        <Property Name="Instructions" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Instructions" />
          </ReturnBindings>
        </Property>

        <Property Name="Widget" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Widget.ToString()" />
          </ReturnBindings>
        </Property>


        <Property Name="ValidateRegex" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="ValidateRegex.ToString()" />
          </ReturnBindings>
        </Property>


        <Property Name="VariableSet" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="VariableSet.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="VariableWidth" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="VariableWidth" />
          </ReturnBindings>
        </Property>

        <Property Name="Visibility" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Visibility" />
          </ReturnBindings>
        </Property>

        <Property Name="VisibleBundle" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="VisibleBundle" />
          </ReturnBindings>
        </Property>

        <Property Name="VisibleGuide" DataType="Bool">
         <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="VisibleGuide" />
          </ReturnBindings>
        </Property>

        <Property Name="VisibleSummary" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="VisibleSummary" />
          </ReturnBindings>
        </Property>

        <Property Name="VisibleStandalone" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="VisibleStandalone" />
          </ReturnBindings>
        </Property>

        <Property Name="LookupLabel" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="LookupLabel" />
          </ReturnBindings>
        </Property>

        <Property Name="DynamicRefQual" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="DynamicRefQual.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="RecLookupPrice" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="RecLookupPrice" />
          </ReturnBindings>
        </Property>

        <Property Name="RecPriceIfChecked" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="RecPriceIfChecked" />
          </ReturnBindings>
        </Property>

        <Property Name="ChoiceField" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="ChoiceField" />
          </ReturnBindings>
        </Property>

        <Property Name="DisplayTitle" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="DisplayTitle" />
          </ReturnBindings>
        </Property>

        <Property Name="Tooltip" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Tooltip" />
          </ReturnBindings>
        </Property>

        <Property Name="ShowHelpOnLoad" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="ShowHelpOnLoad" />
          </ReturnBindings>
        </Property>

        <Property Name="Type" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Type" />
          </ReturnBindings>
        </Property>

        <Property Name="UiPage" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="UiPage.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="LookupTable" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="LookupTable" />
          </ReturnBindings>
        </Property>

        <Property Name="Reference" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="VariableWidth" />
          </ReturnBindings>
        </Property>

        <Property Name="LookupValue" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="LookupValue" />
          </ReturnBindings>
        </Property>

        <Property Name="Record" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Record" />
          </ReturnBindings>
        </Property>

        <Property Name="MaskUseConfirmation" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="MaskUseConfirmation" />
          </ReturnBindings>
        </Property>

        <Property Name="ReferenceQualCondition" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="ReferenceQualCondition.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Order" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Order" />
          </ReturnBindings>
        </Property>

        <Property Name="MapToField" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="MapToField" />
          </ReturnBindings>
        </Property>

        <Property Name="ChoiceDirection" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="ChoiceDirection" />
          </ReturnBindings>
        </Property>

        <Property Name="DeleteRoles" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="DeleteRoles" />
          </ReturnBindings>
        </Property>

        <Property Name="Active" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Active" />
          </ReturnBindings>
        </Property>

        <Property Name="ChoiceTable" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="ChoiceTable" />
          </ReturnBindings>
        </Property>

        <Property Name="Field" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Field" />
          </ReturnBindings>
        </Property>

        <Property Name="Name" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Name" />
          </ReturnBindings>
        </Property>

        <Property Name="HelpText" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="HelpText" />
          </ReturnBindings>
        </Property>

        <Property Name="UseDynamicDefault" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="UseDynamicDefault" />
          </ReturnBindings>
        </Property>

        <Property Name="ScaleMin" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="ScaleMin" />
          </ReturnBindings>
        </Property>

        <Property Name="ShowHelp" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="ShowHelp" />
          </ReturnBindings>
        </Property>

        <Property Name="Mandatory" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Mandatory" />
          </ReturnBindings>
        </Property>

        <Property Name="DoNotSelectFirst" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="DoNotSelectFirst" />
          </ReturnBindings>
        </Property>

        <Property Name="DynamicDefaultValue" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="DynamicDefaultValue.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="ExampleText" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="ExampleText" />
          </ReturnBindings>
        </Property>

        <Property Name="WriteRoles" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="WriteRoles" />
          </ReturnBindings>
        </Property>

        <Property Name="PricingImplications" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="PricingImplications" />
          </ReturnBindings>
        </Property>

        <Property Name="ReadRoles" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="ReadRoles" />
          </ReturnBindings>
        </Property>

        <Property Name="VariableName" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="VariableName" />
          </ReturnBindings>
        </Property>

        <Property Name="CreateRoles" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="CreateRoles" />
          </ReturnBindings>
        </Property>

        <Property Name="ListTable" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="ListTable" />
          </ReturnBindings>
        </Property>

        <Property Name="Table" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Table" />
          </ReturnBindings>
        </Property>

        <Property Name="Macro" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Macro.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="UseReferenceQualifier" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="UseReferenceQualifier" />
          </ReturnBindings>
        </Property>

        <Property Name="MaskUseEncryption" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="MaskUseEncryption" />
          </ReturnBindings>
        </Property>

        <Property Name="IncludeNone" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="IncludeNone" />
          </ReturnBindings>
        </Property>

        <Property Name="LookupPrice" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="LookupPrice" />
          </ReturnBindings>
        </Property>

        <Property Name="DefaultValue" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="DefaultValue" />
          </ReturnBindings>
        </Property>

        <Property Name="PriceIfChecked" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="PriceIfChecked" />
          </ReturnBindings>
        </Property>

        <Property Name="HelpTag" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="HelpTag" />
          </ReturnBindings>
        </Property>

        <Property Name="Layout" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Layout" />
          </ReturnBindings>
        </Property>

        <Property Name="QuestionText" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="QuestionText" />
          </ReturnBindings>
        </Property>

        <Property Name="SummaryMacro" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="SummaryMacro.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="RecordProducerTable" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="RecordProducerTable" />
          </ReturnBindings>
        </Property>

        <Property Name="ScaleMax" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="ScaleMax" />
          </ReturnBindings>
        </Property>

        <Property Name="Attributes" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Attributes" />
          </ReturnBindings>
        </Property>

        <Property Name="LookupUnique" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="LookupUnique" />
          </ReturnBindings>
        </Property>

        <Property Name="ReferenceQual" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="ReferenceQual" />
          </ReturnBindings>
        </Property>

        <Property Name="DefaultHtmlValue" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="DefaultHtmlValue" />
          </ReturnBindings>
        </Property>

        <Property Name="SysReplaceOnUpgrade" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="SysReplaceOnUpgrade" />
          </ReturnBindings>
        </Property>

        <Property Name="SysPackage" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="SysPackage.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="SysUpdateName" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="SysUpdateName" />
          </ReturnBindings>
        </Property>

        <Property Name="SysName" DataType="String" IsDisplay="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="SysName" />
          </ReturnBindings>
        </Property>

        <Property Name="SysScope" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="SysScope.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="SysCustomerUpdate" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="SysCustomerUpdate" />
          </ReturnBindings>
        </Property>

        <Property Name="SysPolicy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="SysPolicy" />
          </ReturnBindings>
        </Property>

        <Property Name="EnableAlsoRequestFor" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="EnableAlsoRequestFor" />
          </ReturnBindings>
        </Property>

        <Property Name="Unique" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Unique" />
          </ReturnBindings>
        </Property>

        <Property Name="Hidden" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Hidden" />
          </ReturnBindings>
        </Property>

        <Property Name="RolesToUseAlsoRequestFor" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="RolesToUseAlsoRequestFor" />
          </ReturnBindings>
        </Property>

        <Property Name="Macroponent" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="Macroponent.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="PublishedOption" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="PublishedOption.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="RichText" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="RichText" />
          </ReturnBindings>
        </Property>

        <Property Name="SaveScript" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariable" Path="SaveScript" />
          </ReturnBindings>
        </Property>

      </Properties>

      <!-- Configuration items for readable types -->
      <ReadConfiguration>
        <ListingCommand Command="Get-SnowVariable">
          <SetParameter Param="Select" Source="FixedValue" DataType="String" Value="sys_id,sys_updated_on,sys_name"/>
          <SetParameter Param="Filter" Source="ConnectionParameter" DataType="String" Value="Item_Option_New_Filter"/>
        </ListingCommand>
        <CommandSequence>
          <Item Command="Get-SnowVariable" Order="1"/>
        </CommandSequence>
      </ReadConfiguration>

      <!-- Methods supported by this class -->
      <MethodConfiguration/>
    </Class>

    <Class Name="CatalogItem">
      <Properties>
        <Property Name="Id" DataType="String" AccessConstraint="ReadOnly" IsMandatory="true" IsUniqueKey="true" IsAutoFill="true" IsDisplay="false">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Id.ToString()" />
          </ReturnBindings>
          <CommandMappings>
            <Map ToCommand="Get-SnowCatalogItem" Parameter="Id" />
          </CommandMappings>
        </Property>

        <Property Name="WhenUpdated" DataType="DateTime" IsRevision="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="WhenUpdated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="WhenCreated" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="WhenCreated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="ObjectType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="ObjectType" />
          </ReturnBindings>
        </Property>

        <Property Name="CreatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="CreatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="UpdatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="UpdatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="SysModCount" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="SysModCount" />
          </ReturnBindings>
        </Property>

        <Property Name="EntitlementScript" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="EntitlementScript" />
          </ReturnBindings>
        </Property>

        <Property Name="UseScLayout" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="UseScLayout" />
          </ReturnBindings>
        </Property>

        <Property Name="ShowVariableHelpOnLoad" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="ShowVariableHelpOnLoad" />
          </ReturnBindings>
        </Property>

        <Property Name="NoOrderNow" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="NoOrderNow" />
          </ReturnBindings>
        </Property>

        <Property Name="DeliveryTime" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="DeliveryTime.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Type" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Type" />
          </ReturnBindings>
        </Property>

        <Property Name="NoSearch" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="NoSearch" />
          </ReturnBindings>
        </Property>

        <Property Name="Price" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Price" />
          </ReturnBindings>
        </Property>

        <Property Name="RecurringFrequency" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="RecurringFrequency" />
          </ReturnBindings>
        </Property>

        <Property Name="Model" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Model.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="NoCart" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="NoCart" />
          </ReturnBindings>
        </Property>

        <Property Name="Group" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Group.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="HideSp" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="HideSp" />
          </ReturnBindings>
        </Property>

        <Property Name="Order" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Order" />
          </ReturnBindings>
        </Property>

        <Property Name="StartClosed" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="StartClosed" />
          </ReturnBindings>
        </Property>

        <Property Name="Image" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Image" />
          </ReturnBindings>
        </Property>

        <Property Name="NoQuantity" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="NoQuantity" />
          </ReturnBindings>
        </Property>

        <Property Name="Workflow" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Workflow.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="DeliveryPlan" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="DeliveryPlan.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Active" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Active" />
          </ReturnBindings>
        </Property>

        <Property Name="CustomCart" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="CustomCart.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="NoCartV2" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="NoCartV2" />
          </ReturnBindings>
        </Property>

        <Property Name="NoProceedCheckout" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="NoProceedCheckout" />
          </ReturnBindings>
        </Property>

        <Property Name="IgnorePrice" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="IgnorePrice" />
          </ReturnBindings>
        </Property>

        <Property Name="Meta" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Meta" />
          </ReturnBindings>
        </Property>

        <Property Name="OmitPrice" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="OmitPrice" />
          </ReturnBindings>
        </Property>

        <Property Name="Name" DataType="String" IsDisplay="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Name" />
          </ReturnBindings>
        </Property>

        <Property Name="FlowDesignerFlow" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="FlowDesignerFlow.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="MobileHidePrice" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="MobileHidePrice" />
          </ReturnBindings>
        </Property>

        <Property Name="NoWishlistV2" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="NoWishlistV2" />
          </ReturnBindings>
        </Property>

        <Property Name="Preview" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Preview" />
          </ReturnBindings>
        </Property>

        <Property Name="Template" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Template.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="ShortDescription" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="ShortDescription" />
          </ReturnBindings>
        </Property>

        <Property Name="Roles" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Roles" />
          </ReturnBindings>
        </Property>

        <Property Name="Icon" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Icon" />
          </ReturnBindings>
        </Property>

        <Property Name="Description" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Description" />
          </ReturnBindings>
        </Property>

        <Property Name="MobilePicture" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="MobilePicture" />
          </ReturnBindings>
        </Property>

        <Property Name="Availability" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Availability" />
          </ReturnBindings>
        </Property>

        <Property Name="MandatoryAttachment" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="MandatoryAttachment" />
          </ReturnBindings>
        </Property>

        <Property Name="RequestMethod" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="RequestMethod" />
          </ReturnBindings>
        </Property>

        <Property Name="VisibleGuide" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="VisibleGuide" />
          </ReturnBindings>
        </Property>

        <Property Name="VisibleStandalone" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="VisibleStandalone" />
          </ReturnBindings>
        </Property>

        <Property Name="NoOrder" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="NoOrder" />
          </ReturnBindings>
        </Property>

        <Property Name="Vendor" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Vendor.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="NoAttachmentV2" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="NoAttachmentV2" />
          </ReturnBindings>
        </Property>

        <Property Name="MobilePictureType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="MobilePictureType" />
          </ReturnBindings>
        </Property>

        <Property Name="VisibleBundle" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="VisibleBundle" />
          </ReturnBindings>
        </Property>

        <Property Name="ScCatalogs" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="ScCatalogs" />
          </ReturnBindings>
        </Property>

        <Property Name="OrderedItemLink" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="OrderedItemLink.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="NoDeliveryTimeV2" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="NoDeliveryTimeV2" />
          </ReturnBindings>
        </Property>

        <Property Name="Cost" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Cost" />
          </ReturnBindings>
        </Property>

        <Property Name="NoQuantityV2" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="NoQuantityV2" />
          </ReturnBindings>
        </Property>

        <Property Name="RecurringPrice" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="RecurringPrice" />
          </ReturnBindings>
        </Property>

        <Property Name="ListPrice" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="ListPrice" />
          </ReturnBindings>
        </Property>

        <Property Name="ScIcItemStaging" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="ScIcItemStaging.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Billable" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Billable" />
          </ReturnBindings>
        </Property>

        <Property Name="Picture" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Picture" />
          </ReturnBindings>
        </Property>

        <Property Name="DisplayPriceProperty" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="DisplayPriceProperty" />
          </ReturnBindings>
        </Property>

        <Property Name="DeliveryPlanScript" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="DeliveryPlanScript" />
          </ReturnBindings>
        </Property>

        <Property Name="Location" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Location.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Category" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Category.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="SysReplaceOnUpgrade" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="SysReplaceOnUpgrade" />
          </ReturnBindings>
        </Property>

        <Property Name="SysPackage" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="SysPackage.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="SysUpdateName" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="SysUpdateName" />
          </ReturnBindings>
        </Property>

        <Property Name="SysName" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="SysName" />
          </ReturnBindings>
        </Property>

        <Property Name="SysScope" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="SysScope.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="SysCustomerUpdate" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="SysCustomerUpdate" />
          </ReturnBindings>
        </Property>

        <Property Name="SysPolicy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="SysPolicy" />
          </ReturnBindings>
        </Property>

        <Property Name="AccessType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="AccessType" />
          </ReturnBindings>
        </Property>

        <Property Name="CheckedOut" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="CheckedOut" />
          </ReturnBindings>
        </Property>

        <Property Name="FulfillmentAutomationLevel" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="FulfillmentAutomationLevel" />
          </ReturnBindings>
        </Property>

        <Property Name="ScIcVersion" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="ScIcVersion" />
          </ReturnBindings>
        </Property>

        <Property Name="State" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="State" />
          </ReturnBindings>
        </Property>

        <Property Name="TemplateManagerRoles" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="TemplateManagerRoles" />
          </ReturnBindings>
        </Property>

        <Property Name="AssociatedTemplate" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="AssociatedTemplate.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="TaxonomyTopic" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="TaxonomyTopic.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Owner" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Owner.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="PublishedItem" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="PublishedItem.ToString()" />
          </ReturnBindings>
        </Property>

      </Properties>

      <!-- Configuration items for readable types -->
      <ReadConfiguration>
        <ListingCommand Command="Get-SnowCatalogItem">
          <SetParameter Param="Select" Source="FixedValue" DataType="String" Value="sys_id,sys_updated_on,name,group,location"/>
          <SetParameter Param="Filter" Source="ConnectionParameter" DataType="String" Value="SC_Cat_Item_Filter"/>
        </ListingCommand>
        <CommandSequence>
          <Item Command="Get-SnowCatalogItem" Order="1"/>
        </CommandSequence>
      </ReadConfiguration>

      <!-- Methods supported by this class -->
      <MethodConfiguration/>
    </Class>
    <Class Name="CatalogTask">
      <Properties>
        <Property Name="Id" DataType="String" AccessConstraint="ReadOnly" IsMandatory="true" IsUniqueKey="true" IsAutoFill="true" IsDisplay="false">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="Id.ToString()" />
            <Bind CommandResultOf="Set-SnowCatalogTask" Path="Id.ToString()" />
            <Bind CommandResultOf="New-SnowCatalogTask" Path="Id.ToString()" />
          </ReturnBindings>
          <CommandMappings>
            <Map ToCommand="Get-SnowCatalogTask" Parameter="Id" />
            <Map ToCommand="Set-SnowCatalogTask" Parameter="Id" />
            <Map ToCommand="Get-SnowJournalFields" Parameter="Id" />
          </CommandMappings>
        </Property>

        <Property Name="WhenUpdated" DataType="DateTime" IsRevision="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="WhenUpdated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="WhenCreated" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="WhenCreated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="Number" DataType="String" IsDisplay="true" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="Number" />
          </ReturnBindings>
        </Property>

        <Property Name="ObjectType" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="ObjectType" />
          </ReturnBindings>
        </Property>


        <Property Name="MadeSla" DataType="Bool" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="MadeSla" />
          </ReturnBindings>
        </Property>

        <Property Name="CreatedBy" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="CreatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="WatchList" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="WatchList" />
          </ReturnBindings>
        </Property>

        <Property Name="UpdatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="UpdatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="SysModCount" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="SysModCount" />
          </ReturnBindings>
        </Property>

        <Property Name="SysTags" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="SysTags" />
          </ReturnBindings>
        </Property>

        <Property Name="UponReject" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="UponReject" />
          </ReturnBindings>
        </Property>

        <Property Name="ApprovalHistory" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="ApprovalHistory"/>
          </ReturnBindings>
        </Property>

        <Property Name="OpenedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="OpenedBy.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Parent" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="Parent.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="UserInput" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="UserInput" />
          </ReturnBindings>
        </Property>

        <Property Name="SysDomain" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="SysDomain.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="State" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="State" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogTask" Method="Update"/>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogTask" Parameter="State"/>
            <Map ToCommand="New-SnowCatalogTask" Parameter="State"/>
          </CommandMappings>
        </Property>

        <Property Name="Knowledge" DataType="Bool" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="Knowledge" />
          </ReturnBindings>
        </Property>

        <Property Name="Order" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="Order" />
          </ReturnBindings>
        </Property>

        <Property Name="ClosedAt" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="ClosedAt.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="CmdbCi" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="CmdbCi.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogTask" Method="Update"/>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogTask" Parameter="CmdbCi"/>
            <Map ToCommand="New-SnowCatalogTask" Parameter="CmdbCi"/>
          </CommandMappings>
        </Property>

        <Property Name="DeliveryPlan" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="DeliveryPlan.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Impact" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="Impact" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogTask" Method="Update"/>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogTask" Parameter="Impact"/>
            <Map ToCommand="New-SnowCatalogTask" Parameter="Impact"/>
          </CommandMappings>
        </Property>

        <Property Name="Active" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="Active" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogTask" Method="Update"/>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogTask" Parameter="Active"/>
            <Map ToCommand="New-SnowCatalogTask" Parameter="Active"/>
          </CommandMappings>
        </Property>

        <Property Name="WorkNotesList" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="WorkNotesList" />
          </ReturnBindings>
        </Property>

        <Property Name="BusinessService" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="BusinessService.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogTask" Method="Update"/>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogTask" Parameter="BusinessService"/>
            <Map ToCommand="New-SnowCatalogTask" Parameter="BusinessService"/>
          </CommandMappings>
        </Property>

        <Property Name="Priority" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="Priority" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogTask" Method="Update"/>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogTask" Parameter="Priority"/>
            <Map ToCommand="New-SnowCatalogTask" Parameter="Priority"/>
          </CommandMappings>
        </Property>


        <Property Name="SysDomainPath" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="SysDomainPath" />
          </ReturnBindings>
        </Property>

        <Property Name="TimeWorked" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="TimeWorked" />
          </ReturnBindings>
        </Property>

        <Property Name="ExpectedStart" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="ExpectedStart.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="OpenedAt" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="OpenedAt.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="BusinessDuration" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="BusinessDuration.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="GroupList" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="GroupList" />
          </ReturnBindings>
        </Property>

        <Property Name="WorkEnd" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="WorkEnd.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="ApprovalSet" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="ApprovalSet.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="WorkNotes" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="WorkNotes" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogTask" Method="Update"/>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogTask" Parameter="WorkNotes"/>
            <Map ToCommand="New-SnowCatalogTask" Parameter="WorkNotes"/>
          </CommandMappings>
        </Property>


        <Property Name="ShortDescription" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="ShortDescription" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogTask" Method="Update"/>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogTask" Parameter="ShortDescription"/>
            <Map ToCommand="New-SnowCatalogTask" Parameter="ShortDescription"/>
          </CommandMappings>
        </Property>


        <Property Name="CorrelationDisplay" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="CorrelationDisplay" />
          </ReturnBindings>
        </Property>

        <Property Name="DeliveryTask" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="DeliveryTask.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="WorkStart" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="WorkStart.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="AssignmentGroup" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="AssignmentGroup.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogTask" Method="Update"/>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogTask" Parameter="AssignmentGroup"/>
            <Map ToCommand="New-SnowCatalogTask" Parameter="AssignmentGroup"/>
          </CommandMappings>
        </Property>


        <Property Name="AdditionalAssigneeList" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="AdditionalAssigneeList" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogTask" Method="Update"/>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogTask" Parameter="AdditionalAssigneeList"/>
            <Map ToCommand="New-SnowCatalogTask" Parameter="AdditionalAssigneeList"/>
          </CommandMappings>
        </Property>

        <Property Name="Description" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="Description" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogTask" Method="Update"/>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogTask" Parameter="Description"/>
            <Map ToCommand="New-SnowCatalogTask" Parameter="Description"/>
          </CommandMappings>
        </Property>


        <Property Name="CalendarDuration" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="CalendarDuration.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="CloseNotes" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="CloseNotes" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogTask" Method="Update"/>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogTask" Parameter="CloseNotes"/>
            <Map ToCommand="New-SnowCatalogTask" Parameter="CloseNotes"/>
          </CommandMappings>
        </Property>

        <Property Name="ServiceOffering" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="ServiceOffering.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogTask" Method="Update"/>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogTask" Parameter="ServiceOffering"/>
            <Map ToCommand="New-SnowCatalogTask" Parameter="ServiceOffering"/>
          </CommandMappings>
        </Property>

        <Property Name="ClosedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="ClosedBy.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogTask" Method="Update"/>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogTask" Parameter="ClosedBy"/>
            <Map ToCommand="New-SnowCatalogTask" Parameter="ClosedBy"/>
          </CommandMappings>
        </Property>

        <Property Name="FollowUp" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="FollowUp.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="ContactType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="ContactType" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogTask" Method="Update"/>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogTask" Parameter="ContactType"/>
            <Map ToCommand="New-SnowCatalogTask" Parameter="ContactType"/>
          </CommandMappings>
        </Property>

        <Property Name="Urgency" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="Urgency" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogTask" Method="Update"/>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogTask" Parameter="Urgency"/>
            <Map ToCommand="New-SnowCatalogTask" Parameter="Urgency"/>
          </CommandMappings>
        </Property>


        <Property Name="Company" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="Company.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogTask" Method="Update"/>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogTask" Parameter="Company"/>
            <Map ToCommand="New-SnowCatalogTask" Parameter="Company"/>
          </CommandMappings>
        </Property>

        <Property Name="ReassignmentCount" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="ReassignmentCount" />
          </ReturnBindings>
        </Property>

        <Property Name="ActivityDue" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="ActivityDue.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="AssignedTo" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="AssignedTo.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogTask" Method="Update"/>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogTask" Parameter="AssignedTo"/>
            <Map ToCommand="New-SnowCatalogTask" Parameter="AssignedTo"/>
          </CommandMappings>
        </Property>

        <Property Name="Comments" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="Comments" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogTask" Method="Update"/>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogTask" Parameter="Comments"/>
            <Map ToCommand="New-SnowCatalogTask" Parameter="Comments"/>
          </CommandMappings>
        </Property>

        <Property Name="Approval" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="Approval" />
          </ReturnBindings>
        </Property>

        <Property Name="SlaDue" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="SlaDue.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="CommentsAndWorkNotes" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowJournalFields" Path="CommentsAndWorkNotes" />
          </ReturnBindings>
        </Property>

        <Property Name="DueDate" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="DueDate.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="Escalation" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="Escalation" />
          </ReturnBindings>
        </Property>

        <Property Name="UponApproval" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="UponApproval" />
          </ReturnBindings>
        </Property>

        <Property Name="CorrelationId" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="CorrelationId" />
          </ReturnBindings>
        </Property>

        <Property Name="Location" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="Location.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogTask" Method="Update"/>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogTask" Parameter="Location"/>
            <Map ToCommand="New-SnowCatalogTask" Parameter="Location"/>
          </CommandMappings>
        </Property>

        <Property Name="CalendarStc" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="CalendarStc" />
          </ReturnBindings>
        </Property>

        <Property Name="ScCatalog" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="ScCatalog" />
          </ReturnBindings>
        </Property>

        <Property Name="Request" DataType="String" AccessConstraint="ReadAndInsertOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="Request.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowCatalogTask" Parameter="Request"/>
          </CommandMappings>
        </Property>

        <Property Name="RequestItem" DataType="String" AccessConstraint="ReadAndInsertOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="RequestItem.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowCatalogTask" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowCatalogTask" Parameter="RequestItem"/>
          </CommandMappings>
        </Property>

        <Property Name="RouteReason" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="RouteReason" />
          </ReturnBindings>
        </Property>

        <Property Name="TaskEffectiveNumber" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="TaskEffectiveNumber" />
          </ReturnBindings>
        </Property>

        <Property Name="UniversalRequest" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="UniversalRequest.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="RejectionGoto" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="RejectionGoto.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="WorkflowActivity" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="WorkflowActivity.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Variables" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogTask" Path="Variables" />
          </ReturnBindings>
        </Property>

      </Properties>

      <!-- Configuration items for readable types -->
      <ReadConfiguration>
        <ListingCommand Command="Get-SnowCatalogTask">
          <SetParameter Param="Select" Source="FixedValue" DataType="String" Value="sys_id,sys_updated_on,number,sys_class_name,assigned_to,assignment_group,closed_by,location,opened_by,parent,request,request_item"/>
          <SetParameter Param="Filter" Source="ConnectionParameter" DataType="String" Value="SC_Task_Filter"/>
        </ListingCommand>
        <CommandSequence>
          <Item Command="Get-SnowCatalogTask" Order="1"/>
          <Item Command="Get-SnowJournalFields" Order="2">
            <SetParameter Param="Select" Source="FixedValue" DataType="String" Value="comments_and_work_notes"/>
            <SetParameter Param="Table" Source="FixedValue" DataType="String" Value="sc_task"/>
          </Item>
        </CommandSequence>
      </ReadConfiguration>

      <!-- Methods supported by this class -->
      <MethodConfiguration>
        <Method Name="Update">
          <CommandSequence>
            <Item Command="Set-SnowCatalogTask" Order="1" Condition="ModificationExists"/>
          </CommandSequence>
        </Method>        
        <Method Name="Insert">
          <CommandSequence>
            <Item Command="New-SnowCatalogTask" Order="1"/>
          </CommandSequence>
        </Method>
      </MethodConfiguration>

    </Class>

    <Class Name="RequestItem">
      <Properties>
        <Property Name="Id" DataType="String" AccessConstraint="ReadOnly" IsAutoFill="true" IsUniqueKey="true" IsDisplay="false">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Id.ToString()" />
            <Bind CommandResultOf="Set-SnowRequestItem" Path="Id.ToString()" />
            <Bind CommandResultOf="New-SnowRequestItem" Path="Id.ToString()" />
          </ReturnBindings>
          <CommandMappings>
            <Map ToCommand="Get-SnowRequestItem" Parameter="Id" />
            <Map ToCommand="Set-SnowRequestItem" Parameter="Id" />
            <Map ToCommand="Get-SnowJournalFields" Parameter="Id" />
          </CommandMappings>
        </Property>

        <Property Name="WhenUpdated" DataType="DateTime" IsRevision="true" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="WhenUpdated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="WhenCreated" DataType="DateTime" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="WhenCreated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="Number" DataType="String" IsDisplay="true" IsAutoFill="true" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Number" />
          </ReturnBindings>
        </Property>

        <Property Name="ObjectType" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="ObjectType" />
          </ReturnBindings>
        </Property>


        <Property Name="MadeSla" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="MadeSla" />
          </ReturnBindings>
        </Property>

        <Property Name="CreatedBy" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="CreatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="WatchList" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="WatchList" />
          </ReturnBindings>
        </Property>

        <Property Name="UpdatedBy" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="UpdatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="SysModCount" DataType="Int" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="SysModCount" />
          </ReturnBindings>
        </Property>

        <Property Name="SysTags" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="SysTags" />
          </ReturnBindings>
        </Property>

        <Property Name="UponReject" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="UponReject" />
          </ReturnBindings>
        </Property>

        <Property Name="ApprovalHistory" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="ApprovalHistory"/>
          </ReturnBindings>
        </Property>

        <Property Name="OpenedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="OpenedBy.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Parent" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Parent.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="UserInput" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="UserInput" />
          </ReturnBindings>
        </Property>

        <Property Name="SysDomain" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="SysDomain.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="State" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="State" />
            <Bind CommandResultOf="Set-SnowRequestItem" Path="State" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowRequestItem" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowRequestItem" Parameter="State"/>
          </CommandMappings>
        </Property>

        <Property Name="Knowledge" DataType="Bool" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Knowledge" />
          </ReturnBindings>
        </Property>

        <Property Name="Order" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Order" />
          </ReturnBindings>
        </Property>

        <Property Name="ClosedAt" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="ClosedAt.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="CmdbCi" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="CmdbCi.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
            <ModBy Command="Set-SnowRequestItem" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowRequestItem" Parameter="CmdbCi"/>
            <Map ToCommand="Set-SnowRequestItem" Parameter="CmdbCi"/>
          </CommandMappings>
        </Property>

        <Property Name="DeliveryPlan" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="DeliveryPlan.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Impact" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Impact" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
            <ModBy Command="Set-SnowRequestItem" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowRequestItem" Parameter="Impact"/>
            <Map ToCommand="Set-SnowRequestItem" Parameter="Impact"/>
          </CommandMappings>
        </Property>

        <Property Name="Active" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Active" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
            <ModBy Command="Set-SnowRequestItem" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowRequestItem" Parameter="Active"/>
            <Map ToCommand="Set-SnowRequestItem" Parameter="Active"/>
          </CommandMappings>
        </Property>

        <Property Name="WorkNotesList" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="WorkNotesList" />
          </ReturnBindings>
        </Property>

        <Property Name="BusinessService" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="BusinessService.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Priority" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Priority" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
            <ModBy Command="Set-SnowRequestItem" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowRequestItem" Parameter="Priority"/>
            <Map ToCommand="Set-SnowRequestItem" Parameter="Priority"/>
          </CommandMappings>
        </Property>


        <Property Name="SysDomainPath" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="SysDomainPath" />
          </ReturnBindings>
        </Property>

        <Property Name="TimeWorked" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="TimeWorked" />
          </ReturnBindings>
        </Property>

        <Property Name="ExpectedStart" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="ExpectedStart.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="OpenedAt" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="OpenedAt.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="BusinessDuration" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="BusinessDuration.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="GroupList" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="GroupList" />
          </ReturnBindings>
        </Property>

        <Property Name="WorkEnd" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="WorkEnd.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="ApprovalSet" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="ApprovalSet.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="WorkNotes" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="WorkNotes" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
            <ModBy Command="Set-SnowRequestItem" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowRequestItem" Parameter="WorkNotes"/>
            <Map ToCommand="Set-SnowRequestItem" Parameter="WorkNotes"/>
          </CommandMappings>
        </Property>

        <Property Name="ShortDescription" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="ShortDescription" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
            <ModBy Command="Set-SnowRequestItem" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowRequestItem" Parameter="ShortDescription"/>
            <Map ToCommand="Set-SnowRequestItem" Parameter="ShortDescription"/>
          </CommandMappings>
        </Property>

        <Property Name="CorrelationDisplay" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="CorrelationDisplay" />
          </ReturnBindings>
        </Property>

        <Property Name="DeliveryTask" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="DeliveryTask.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="WorkStart" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="WorkStart.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="AssignmentGroup" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="AssignmentGroup.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
            <ModBy Command="Set-SnowRequestItem" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowRequestItem" Parameter="AssignmentGroup"/>
            <Map ToCommand="Set-SnowRequestItem" Parameter="AssignmentGroup"/>
          </CommandMappings>
        </Property>

        <Property Name="AdditionalAssigneeList" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="AdditionalAssigneeList" />
          </ReturnBindings>
        </Property>

        <Property Name="Description" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Description" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
            <ModBy Command="Set-SnowRequestItem" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowRequestItem" Parameter="Description"/>
            <Map ToCommand="Set-SnowRequestItem" Parameter="Description"/>
          </CommandMappings>
        </Property>

        <Property Name="CalendarDuration" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="CalendarDuration.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="CloseNotes" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="CloseNotes" />
            <Bind CommandResultOf="Set-SnowRequestItem" Path="CloseNotes" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowRequestItem" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowRequestItem" Parameter="CloseNotes"/>
          </CommandMappings>
        </Property>

        <Property Name="ServiceOffering" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="ServiceOffering.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="ClosedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="ClosedBy.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="FollowUp" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="FollowUp.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="ContactType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="ContactType" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
            <ModBy Command="Set-SnowRequestItem" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowRequestItem" Parameter="ContactType"/>
            <Map ToCommand="Set-SnowRequestItem" Parameter="ContactType"/>
          </CommandMappings>
        </Property>

        <Property Name="Urgency" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Urgency" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
            <ModBy Command="Set-SnowRequestItem" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowRequestItem" Parameter="Urgency"/>
            <Map ToCommand="Set-SnowRequestItem" Parameter="Urgency"/>
          </CommandMappings>
        </Property>

        <Property Name="Company" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Company.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
            <ModBy Command="Set-SnowRequestItem" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowRequestItem" Parameter="Company"/>
            <Map ToCommand="Set-SnowRequestItem" Parameter="Company"/>
          </CommandMappings>
        </Property>

        <Property Name="ReassignmentCount" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="ReassignmentCount" />
          </ReturnBindings>
        </Property>

        <Property Name="ActivityDue" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="ActivityDue.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="AssignedTo" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="AssignedTo.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
            <ModBy Command="Set-SnowRequestItem" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowRequestItem" Parameter="AssignedTo"/>
            <Map ToCommand="Set-SnowRequestItem" Parameter="AssignedTo"/>
          </CommandMappings>
        </Property>

        <Property Name="Comments" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Comments" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowRequestItem" Method="Update"/>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowRequestItem" Parameter="Comments"/>
            <Map ToCommand="New-SnowRequestItem" Parameter="Comments"/>
          </CommandMappings>
        </Property>

        <Property Name="Approval" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Approval" />
          </ReturnBindings>
        </Property>

        <Property Name="SlaDue" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="SlaDue.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="CommentsAndWorkNotes" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowJournalFields" Path="CommentsAndWorkNotes" />
          </ReturnBindings>
        </Property>

        <Property Name="DueDate" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="DueDate.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="Escalation" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Escalation" />
          </ReturnBindings>
        </Property>

        <Property Name="UponApproval" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="UponApproval" />
          </ReturnBindings>
        </Property>

        <Property Name="CorrelationId" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="CorrelationId" />
          </ReturnBindings>
        </Property>

        <Property Name="Location" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Location.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowRequestItem" Method="Update"/>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowRequestItem" Parameter="Location"/>
            <Map ToCommand="New-SnowRequestItem" Parameter="Location"/>
          </CommandMappings>
        </Property>

        <Property Name="Catalog" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Catalog.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Price" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Price" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowRequestItem" Method="Update"/>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowRequestItem" Parameter="Price"/>
            <Map ToCommand="New-SnowRequestItem" Parameter="Price"/>
          </CommandMappings>
        </Property>

        <Property Name="RecurringFrequency" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="RecurringFrequency" />
          </ReturnBindings>
        </Property>

        <Property Name="Context" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Context.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Backordered" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Backordered" />
          </ReturnBindings>
        </Property>


        <Property Name="FlowContext" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="FlowContext.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="ConfigurationItem" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="ConfigurationItem.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowRequestItem" Method="Update"/>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowRequestItem" Parameter="ConfigurationItem"/>
            <Map ToCommand="New-SnowRequestItem" Parameter="ConfigurationItem"/>
          </CommandMappings>
        </Property>

        <Property Name="OrderGuide" DataType="String" AccessConstraint="ReadAndInsertOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="OrderGuide.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowRequestItem" Parameter="OrderGuide"/>
          </CommandMappings>
        </Property>

        <Property Name="Request" DataType="String" AccessConstraint="ReadAndInsertOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Request.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowRequestItem" Parameter="Request"/>
          </CommandMappings>
        </Property>

        <Property Name="RecurringPrice" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="RecurringPrice" />
          </ReturnBindings>
        </Property>

        <Property Name="Billable" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Billable" />
          </ReturnBindings>
        </Property>

        <Property Name="CatalogItem" DataType="String" AccessConstraint="ReadAndInsertOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="CatalogItem.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowRequestItem" Parameter="CatalogItem"/>
          </CommandMappings>
        </Property>

        <Property Name="Stage" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Stage" />
          </ReturnBindings>
        </Property>

        <Property Name="EstimatedDelivery" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="EstimatedDelivery.DateTime" />
          </ReturnBindings>
        </Property>

        <Property Name="TaskEffectiveNumber" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="TaskEffectiveNumber" />
          </ReturnBindings>
        </Property>

        <Property Name="Variables" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Variables" />
          </ReturnBindings>
        </Property>

        <Property Name="Quantity" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="Quantity" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowRequestItem" Method="Update"/>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowRequestItem" Parameter="Quantity"/>
            <Map ToCommand="New-SnowRequestItem" Parameter="Quantity"/>
          </CommandMappings>
        </Property>

        <Property Name="RouteReason" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="RouteReason" />
          </ReturnBindings>
        </Property>

        <Property Name="UniversalRequest" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="UniversalRequest.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="RejectionGoto" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="RejectionGoto.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="RequestedFor" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="RequestedFor.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowRequestItem" Method="Insert"/>
            <ModBy Command="New-SnowRequestItem" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowRequestItem" Parameter="RequestedFor"/>
            <Map ToCommand="Set-SnowRequestItem" Parameter="RequestedFor"/>
          </CommandMappings>
        </Property>

        <Property Name="WorkflowActivity" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowRequestItem" Path="WorkflowActivity.ToString()" />
          </ReturnBindings>
        </Property>

      </Properties>

      <!-- Configuration items for readable types -->
      <ReadConfiguration>
        <ListingCommand Command="Get-SnowRequestItem">
          <SetParameter Param="Select" Source="FixedValue" DataType="String" Value="sys_id,sys_updated_on,number,sys_class_name,opened_by,assignment_group,assigned_to,closed_by,location,opened_by,parent,order_guide,request,cat_item"/>
          <SetParameter Param="Filter" Source="ConnectionParameter" DataType="String" Value="SC_Req_Item_Filter"/>
        </ListingCommand>
        <CommandSequence>
          <Item Command="Get-SnowRequestItem" Order="1"/>
          <Item Command="Get-SnowJournalFields" Order="2">
            <SetParameter Param="Select" Source="FixedValue" DataType="String" Value="comments_and_work_notes"/>
            <SetParameter Param="Table" Source="FixedValue" DataType="String" Value="sc_req_item"/>
          </Item>
        </CommandSequence>

      </ReadConfiguration>

      <!-- Methods supported by this class -->
      <MethodConfiguration>
        <Method Name="Insert">
          <CommandSequence>
            <Item Command="New-SnowRequestItem" Order="1"/>
          </CommandSequence>
        </Method>
        <Method Name="Update">
          <CommandSequence>
            <Item Command="Set-SnowRequestItem" Order="1" Condition="ModificationExists"/>
          </CommandSequence>
        </Method>
      </MethodConfiguration>

    </Class>

    <Class Name="CostCenter">
      <Properties>
        <Property Name="Id" DataType="String" AccessConstraint="ReadOnly" IsMandatory="true" IsUniqueKey="true" IsAutoFill="true" IsDisplay="false">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCostCenter" Path="Id.ToString()" />
          </ReturnBindings>
          <CommandMappings>
            <Map ToCommand="Get-SnowCostCenter" Parameter="Id" />
          </CommandMappings>
        </Property>

        <Property Name="WhenUpdated" DataType="DateTime" IsRevision="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCostCenter" Path="WhenUpdated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="WhenCreated" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCostCenter" Path="WhenCreated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="CreatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCostCenter" Path="CreatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="ObjectType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCostCenter" Path="ObjectType" />
          </ReturnBindings>
        </Property>

        <Property Name="UpdatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCostCenter" Path="UpdatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="SysModCount" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCostCenter" Path="SysModCount" />
          </ReturnBindings>
        </Property>

        <Property Name="SysDomain" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCostCenter" Path="Domain.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="SysDomainPath" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCostCenter" Path="DomainPath" />
          </ReturnBindings>
        </Property>

        <Property Name="Name" DataType="String" IsDisplay="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCostCenter" Path="Name" />
          </ReturnBindings>
        </Property>

        <Property Name="AccountNumber" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCostCenter" Path="AccountNumber" />
          </ReturnBindings>
        </Property>

        <Property Name="Code" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCostCenter" Path="Code" />
          </ReturnBindings>
        </Property>

        <Property Name="Manager" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCostCenter" Path="Manager.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="ValidFrom" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCostCenter" Path="ValidFrom.Date"/>
          </ReturnBindings>
        </Property>

        <Property Name="Parent" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCostCenter" Path="Parent.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="ValidTo" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCostCenter" Path="ValidTo.Date" />
          </ReturnBindings>
        </Property>

        <Property Name="Location" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCostCenter" Path="Location.ToString()" />
          </ReturnBindings>
        </Property>

      </Properties>

      <!-- Configuration items for readable types -->
      <ReadConfiguration>
        <ListingCommand Command="Get-SnowCostCenter">
          <SetParameter Param="Select" Source="FixedValue" DataType="String" Value="sys_id,sys_updated_on,name,parent,location,manager"/>
          <SetParameter Param="Filter" Source="ConnectionParameter" DataType="String" Value="CMN_Cost_Center_Filter"/>
        </ListingCommand>
        <CommandSequence>
          <Item Command="Get-SnowCostCenter" Order="1"/>
        </CommandSequence>
      </ReadConfiguration>

      <!-- Methods supported by this class -->
      <MethodConfiguration>

      </MethodConfiguration>

    </Class>

    <Class Name="Company">
      <Properties>
        <Property Name="Id" DataType="String" AccessConstraint="ReadOnly" IsMandatory="true" IsUniqueKey="true" IsAutoFill="true" IsDisplay="false">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="Id.ToString()" />
          </ReturnBindings>
          <CommandMappings>
            <Map ToCommand="Get-SnowCompany" Parameter="Id" />
          </CommandMappings>
        </Property>

        <Property Name="WhenUpdated" DataType="DateTime" IsRevision="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="WhenUpdated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="WhenCreated" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="WhenCreated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="CreatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="CreatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="ObjectType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="ObjectType" />
          </ReturnBindings>
        </Property>

        <Property Name="UpdatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="UpdatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="SysModCount" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="SysModCount" />
          </ReturnBindings>
        </Property>

        <Property Name="SysTags" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="SysTags" />
          </ReturnBindings>
        </Property>

        <Property Name="Name" DataType="String" IsDisplay="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="Name" />
          </ReturnBindings>
        </Property>

        <Property Name="BannerImageLight" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="BannerImageLight" />
          </ReturnBindings>
        </Property>

        <Property Name="Country" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="Country" />
          </ReturnBindings>
        </Property>

        <Property Name="Notes" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="Notes" />
          </ReturnBindings>
        </Property>

        <Property Name="City" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="City"/>
          </ReturnBindings>
        </Property>

        <Property Name="Parent" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="Parent.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="StockSymbol" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="StockSymbol" />
          </ReturnBindings>
        </Property>

        <Property Name="Contact" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="Contact.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Latitude" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="Latitude" />
          </ReturnBindings>
        </Property>

        <Property Name="UAgreementNumber" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="UAgreementNumber" />
          </ReturnBindings>
        </Property>

        <Property Name="Discount" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="Discount" />
          </ReturnBindings>
        </Property>

        <Property Name="Manufacturer" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="Manufacturer" />
          </ReturnBindings>
        </Property>

        <Property Name="AppleIcon" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="AppleIcon" />
          </ReturnBindings>
        </Property>

        <Property Name="MarketCap" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="MarketCap" />
          </ReturnBindings>
        </Property>

        <Property Name="NumEmployees" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="NumEmployees" />
          </ReturnBindings>
        </Property>

        <Property Name="FiscalYear" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="FiscalYear" />
          </ReturnBindings>
        </Property>

        <Property Name="RankTier" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="RankTier" />
          </ReturnBindings>
        </Property>

        <Property Name="SsoSource" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="SsoSource" />
          </ReturnBindings>
        </Property>

        <Property Name="Street" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="Street" />
          </ReturnBindings>
        </Property>

        <Property Name="Vendor" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="Vendor" />
          </ReturnBindings>
        </Property>

        <Property Name="LatLongError" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="LatLongError" />
          </ReturnBindings>
        </Property>

        <Property Name="Theme" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="Theme.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="BannerImage" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="BannerImage" />
          </ReturnBindings>
        </Property>

        <Property Name="State" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="State" />
          </ReturnBindings>
        </Property>

        <Property Name="Longitude" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="Longitude" />
          </ReturnBindings>
        </Property>

        <Property Name="VendorType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="VendorType" />
          </ReturnBindings>
        </Property>

        <Property Name="Zip" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="Zip" />
          </ReturnBindings>
        </Property>

        <Property Name="RevenuePerYear" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="RevenuePerYear" />
          </ReturnBindings>
        </Property>

        <Property Name="Website" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="Website" />
          </ReturnBindings>
        </Property>

        <Property Name="PubliclyTraded" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="PubliclyTraded" />
          </ReturnBindings>
        </Property>

        <Property Name="FaxPhone" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="FaxPhone" />
          </ReturnBindings>
        </Property>

        <Property Name="Phone" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="Phone" />
          </ReturnBindings>
        </Property>

        <Property Name="VendorManager" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="VendorManager" />
          </ReturnBindings>
        </Property>

        <Property Name="BannerText" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="BannerText" />
          </ReturnBindings>
        </Property>

        <Property Name="Customer" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="Customer" />
          </ReturnBindings>
        </Property>

        <Property Name="Primary" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="Primary" />
          </ReturnBindings>
        </Property>

        <Property Name="Profits" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="Profits" />
          </ReturnBindings>
        </Property>

        <Property Name="StockPrice" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCompany" Path="StockPrice" />
          </ReturnBindings>
        </Property>

      </Properties>

      <!-- Configuration items for readable types -->
      <ReadConfiguration>
        <ListingCommand Command="Get-SnowCompany">
          <SetParameter Param="Select" Source="FixedValue" DataType="String" Value="sys_id,sys_updated_on,name,parent,contact"/>
          <SetParameter Param="Filter" Source="ConnectionParameter" DataType="String" Value="Core_Company_Filter"/>
        </ListingCommand>
        <CommandSequence>
          <Item Command="Get-SnowCompany" Order="1"/>
        </CommandSequence>
      </ReadConfiguration>

      <!-- Methods supported by this class -->
      <MethodConfiguration>

      </MethodConfiguration>

    </Class>

    <Class Name="Department">
      <Properties>
        <Property Name="Id" DataType="String" AccessConstraint="ReadOnly" IsMandatory="true" IsUniqueKey="true" IsAutoFill="true" IsDisplay="false">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowDepartment" Path="Id.ToString()" />
          </ReturnBindings>
          <CommandMappings>
            <Map ToCommand="Get-SnowDepartment" Parameter="Id" />
          </CommandMappings>
        </Property>

        <Property Name="WhenUpdated" DataType="DateTime" IsRevision="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowDepartment" Path="WhenUpdated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="WhenCreated" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowDepartment" Path="WhenCreated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="CreatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowDepartment" Path="CreatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="ObjectType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowDepartment" Path="ObjectType" />
          </ReturnBindings>
        </Property>

        <Property Name="UpdatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowDepartment" Path="UpdatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="SysModCount" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowDepartment" Path="SysModCount" />
          </ReturnBindings>
        </Property>

        <Property Name="SysTags" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowDepartment" Path="SysTags" />
          </ReturnBindings>
        </Property>

        <Property Name="Name" DataType="String" IsDisplay="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowDepartment" Path="Name" />
          </ReturnBindings>
        </Property>

        <Property Name="BusinessUnit" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowDepartment" Path="BusinessUnit.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="DepartmentHead" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowDepartment" Path="DepartmentHead.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="CostCenter" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowDepartment" Path="CostCenter.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Company" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowDepartment" Path="Company.ToString()"/>
          </ReturnBindings>
        </Property>

        <Property Name="Parent" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowDepartment" Path="Parent.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="PrimaryContact" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowDepartment" Path="PrimaryContact.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Description" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowDepartment" Path="Description" />
          </ReturnBindings>
        </Property>

        <Property Name="HeadCount" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowDepartment" Path="HeadCount" />
          </ReturnBindings>
        </Property>

        <Property Name="DepartmentId" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowDepartment" Path="DepartmentId" />
          </ReturnBindings>
        </Property>
      </Properties>

      <!-- Configuration items for readable types -->
      <ReadConfiguration>
        <ListingCommand Command="Get-SnowDepartment">
          <SetParameter Param="Select" Source="FixedValue" DataType="String" Value="sys_id,sys_updated_on,name,parent,cost_center,dept_head,primary_contact"/>
          <SetParameter Param="Filter" Source="ConnectionParameter" DataType="String" Value="CMN_Department_Filter"/>
        </ListingCommand>
        <CommandSequence>
          <Item Command="Get-SnowDepartment" Order="1"/>
        </CommandSequence>
      </ReadConfiguration>

      <!-- Methods supported by this class -->
      <MethodConfiguration>

      </MethodConfiguration>

    </Class>
    <Class Name="OrderGuide">
      <Properties>
        <Property Name="Id" DataType="String" AccessConstraint="ReadOnly" IsMandatory="true" IsUniqueKey="true" IsAutoFill="true" IsDisplay="false">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Id.ToString()" />
          </ReturnBindings>
          <CommandMappings>
            <Map ToCommand="Get-SnowOrderGuide" Parameter="Id" />
          </CommandMappings>
        </Property>

        <Property Name="WhenUpdated" DataType="DateTime" IsRevision="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="WhenUpdated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="WhenCreated" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="WhenCreated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="ObjectType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="ObjectType" />
          </ReturnBindings>
        </Property>

        <Property Name="CreatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="CreatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="UpdatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="UpdatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="SysModCount" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="SysModCount" />
          </ReturnBindings>
        </Property>

        <Property Name="EntitlementScript" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="EntitlementScript" />
          </ReturnBindings>
        </Property>

        <Property Name="UseScLayout" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="UseScLayout" />
          </ReturnBindings>
        </Property>

        <Property Name="ShowVariableHelpOnLoad" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="ShowVariableHelpOnLoad" />
          </ReturnBindings>
        </Property>

        <Property Name="NoOrderNow" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="NoOrderNow" />
          </ReturnBindings>
        </Property>

        <Property Name="ScIcVersion" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="ScIcVersion" />
          </ReturnBindings>
        </Property>

        <Property Name="DeliveryTime" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="DeliveryTime.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Type" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Type" />
          </ReturnBindings>
        </Property>


        <Property Name="NoSearch" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="NoSearch" />
          </ReturnBindings>
        </Property>


        <Property Name="Price" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Price" />
          </ReturnBindings>
        </Property>

        <Property Name="RecurringFrequency" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="RecurringFrequency" />
          </ReturnBindings>
        </Property>

        <Property Name="Model" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Model.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="NoCart" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="NoCart" />
          </ReturnBindings>
        </Property>

        <Property Name="Group" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Group.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="HideSp" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="HideSp" />
          </ReturnBindings>
        </Property>

        <Property Name="Order" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Order" />
          </ReturnBindings>
        </Property>

        <Property Name="StartClosed" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="StartClosed" />
          </ReturnBindings>
        </Property>

        <Property Name="Image" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Image" />
          </ReturnBindings>
        </Property>

        <Property Name="NoQuantity" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="NoQuantity" />
          </ReturnBindings>
        </Property>

        <Property Name="Workflow" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Workflow.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="DeliveryPlan" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="DeliveryPlan.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Active" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Active" />
          </ReturnBindings>
        </Property>

        <Property Name="CustomCart" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="CustomCart.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="NoCartV2" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="NoCartV2" />
          </ReturnBindings>
        </Property>

        <Property Name="NoProceedCheckout" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="NoProceedCheckout" />
          </ReturnBindings>
        </Property>

        <Property Name="IgnorePrice" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="IgnorePrice" />
          </ReturnBindings>
        </Property>

        <Property Name="Meta" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Meta" />
          </ReturnBindings>
        </Property>

        <Property Name="OmitPrice" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="OmitPrice" />
          </ReturnBindings>
        </Property>

        <Property Name="Name" DataType="String" IsDisplay="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Name" />
          </ReturnBindings>
        </Property>

        <Property Name="FlowDesignerFlow" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="FlowDesignerFlow.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="MobileHidePrice" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="MobileHidePrice" />
          </ReturnBindings>
        </Property>

        <Property Name="NoWishlistV2" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="NoWishlistV2" />
          </ReturnBindings>
        </Property>

        <Property Name="Preview" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Preview" />
          </ReturnBindings>
        </Property>

        <Property Name="Template" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Template.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="ShortDescription" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="ShortDescription" />
          </ReturnBindings>
        </Property>

        <Property Name="Roles" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Roles" />
          </ReturnBindings>
        </Property>

        <Property Name="Icon" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Icon" />
          </ReturnBindings>
        </Property>

        <Property Name="Description" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Description" />
          </ReturnBindings>
        </Property>

        <Property Name="MobilePicture" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="MobilePicture" />
          </ReturnBindings>
        </Property>

        <Property Name="Availability" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Availability" />
          </ReturnBindings>
        </Property>

        <Property Name="MandatoryAttachment" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="MandatoryAttachment" />
          </ReturnBindings>
        </Property>

        <Property Name="RequestMethod" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="RequestMethod" />
          </ReturnBindings>
        </Property>

        <Property Name="VisibleGuide" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="VisibleGuide" />
          </ReturnBindings>
        </Property>

        <Property Name="VisibleStandalone" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="VisibleStandalone" />
          </ReturnBindings>
        </Property>

        <Property Name="NoOrder" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="NoOrder" />
          </ReturnBindings>
        </Property>

        <Property Name="Vendor" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Vendor.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="NoAttachmentV2" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="NoAttachmentV2" />
          </ReturnBindings>
        </Property>

        <Property Name="MobilePictureType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="MobilePictureType" />
          </ReturnBindings>
        </Property>

        <Property Name="VisibleBundle" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="VisibleBundle" />
          </ReturnBindings>
        </Property>

        <Property Name="ScCatalogs" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="ScCatalogs" />
          </ReturnBindings>
        </Property>

        <Property Name="OrderedItemLink" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="OrderedItemLink.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="NoDeliveryTimeV2" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="NoDeliveryTimeV2" />
          </ReturnBindings>
        </Property>

        <Property Name="Cost" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Cost" />
          </ReturnBindings>
        </Property>

        <Property Name="NoQuantityV2" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="NoQuantityV2" />
          </ReturnBindings>
        </Property>

        <Property Name="RecurringPrice" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="RecurringPrice" />
          </ReturnBindings>
        </Property>

        <Property Name="ListPrice" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="ListPrice" />
          </ReturnBindings>
        </Property>

        <Property Name="ScIcItemStaging" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="ScIcItemStaging.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Billable" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Billable" />
          </ReturnBindings>
        </Property>

        <Property Name="Picture" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Picture" />
          </ReturnBindings>
        </Property>

        <Property Name="DisplayPriceProperty" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="DisplayPriceProperty" />
          </ReturnBindings>
        </Property>

        <Property Name="DeliveryPlanScript" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="DeliveryPlanScript" />
          </ReturnBindings>
        </Property>

        <Property Name="Location" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Location.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Category" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Category.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="SysReplaceOnUpgrade" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="SysReplaceOnUpgrade" />
          </ReturnBindings>
        </Property>

        <Property Name="SysPackage" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="SysPackage.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="SysUpdateName" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="SysUpdateName" />
          </ReturnBindings>
        </Property>

        <Property Name="SysName" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="SysName" />
          </ReturnBindings>
        </Property>

        <Property Name="SysScope" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="SysScope.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="SysCustomerUpdate" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="SysCustomerUpdate" />
          </ReturnBindings>
        </Property>

        <Property Name="SysPolicy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="SysPolicy" />
          </ReturnBindings>
        </Property>

        <Property Name="Cascade" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Cascade" />
          </ReturnBindings>
        </Property>

        <Property Name="IncludeToggles" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="IncludeToggles" />
          </ReturnBindings>
        </Property>

        <Property Name="OrderToCart" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="OrderToCart" />
          </ReturnBindings>
        </Property>

        <Property Name="Script" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Script" />
          </ReturnBindings>
        </Property>

        <Property Name="TwoStep" DataType="Bool">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="TwoStep" />
          </ReturnBindings>
        </Property>

        <Property Name="Validator" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowOrderGuide" Path="Validator" />
          </ReturnBindings>
        </Property>

        <Property Name="AccessType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="AccessType" />
          </ReturnBindings>
        </Property>

        <Property Name="CheckedOut" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="CheckedOut" />
          </ReturnBindings>
        </Property>

        <Property Name="FulfillmentAutomationLevel" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="FulfillmentAutomationLevel" />
          </ReturnBindings>
        </Property>
        <Property Name="State" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="State" />
          </ReturnBindings>
        </Property>

        <Property Name="TemplateManagerRoles" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="TemplateManagerRoles" />
          </ReturnBindings>
        </Property>

        <Property Name="AssociatedTemplate" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="AssociatedTemplate.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="TaxonomyTopic" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="TaxonomyTopic.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="Owner" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="Owner.ToString()" />
          </ReturnBindings>
        </Property>

        <Property Name="PublishedItem" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogItem" Path="PublishedItem.ToString()" />
          </ReturnBindings>
        </Property>

      </Properties>

      <!-- Configuration items for readable types -->
      <ReadConfiguration>
        <ListingCommand Command="Get-SnowOrderGuide">
          <SetParameter Param="Select" Source="FixedValue" DataType="String" Value="sys_id,sys_updated_on,name,group,location"/>
          <SetParameter Param="Filter" Source="ConnectionParameter" DataType="String" Value="SC_Cat_Item_Guide_Filter"/>
        </ListingCommand>
        <CommandSequence>
          <Item Command="Get-SnowOrderGuide" Order="1"/>
        </CommandSequence>
      </ReadConfiguration>

      <!-- Methods supported by this class -->
      <MethodConfiguration/>
    </Class>

    <Class Name="CatalogOptions">
      <Properties>
        <Property Name="Id" DataType="String" AccessConstraint="ReadOnly" IsUniqueKey="true" IsAutoFill="true" IsDisplay="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogOption" Path="Id" />
            <Bind CommandResultOf="Get-SnowCatalogOptionList" Path="Id" />
            <Bind CommandResultOf="Set-SnowCatalogOption" Path="Id" />
            <Bind CommandResultOf="New-SnowCatalogOption" Path="Id" />
          </ReturnBindings>
          <CommandMappings>
            <Map ToCommand="Get-SnowCatalogOption" Parameter="Id" />
            <Map ToCommand="Set-SnowCatalogOption" Parameter="Id" />
          </CommandMappings>
        </Property>

        <Property Name="WhenUpdated" DataType="DateTime" IsRevision="true" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogOption" Path="WhenUpdated.DateTime"/>
            <Bind CommandResultOf="Get-SnowCatalogOptionList" Path="WhenUpdated.DateTime"/>
            <Bind CommandResultOf="Set-SnowCatalogOption" Path="WhenUpdated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="WhenCreated" DataType="DateTime" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogOption" Path="WhenCreated.DateTime"/>
            <Bind CommandResultOf="Get-SnowCatalogOptionList" Path="WhenCreated.DateTime"/>
            <Bind CommandResultOf="Set-SnowCatalogOption" Path="WhenCreated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="ObjectType" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogOption" Path="ObjectType" />
            <Bind CommandResultOf="Get-SnowCatalogOptionList" Path="ObjectType" />
            <Bind CommandResultOf="Set-SnowCatalogOption" Path="ObjectType" />
          </ReturnBindings>
        </Property>

        <Property Name="CreatedBy" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogOption" Path="CreatedBy" />
            <Bind CommandResultOf="Get-SnowCatalogOptionList" Path="CreatedBy" />
            <Bind CommandResultOf="Set-SnowCatalogOption" Path="CreatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="UpdatedBy" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogOption" Path="UpdatedBy" />
            <Bind CommandResultOf="Get-SnowCatalogOptionList" Path="UpdatedBy" />
            <Bind CommandResultOf="Set-SnowCatalogOption" Path="UpdatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="SysModCount" DataType="Int" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogOption" Path="SysModCount" />
            <Bind CommandResultOf="Get-SnowCatalogOptionList" Path="SysModCount" />
            <Bind CommandResultOf="Set-SnowCatalogOption" Path="SysModCount" />
          </ReturnBindings>
        </Property>

        <Property Name="SysTags" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogOption" Path="SysTags" />
            <Bind CommandResultOf="Get-SnowCatalogOptionList" Path="SysTags" />
            <Bind CommandResultOf="Set-SnowCatalogOption" Path="SysTags" />
          </ReturnBindings>
        </Property>

        <Property Name="ItemOption" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogOption" Path="ItemOption.ToString()" />
            <Bind CommandResultOf="Get-SnowCatalogOptionList" Path="ItemOption.ToString()" />
            <Bind CommandResultOf="Set-SnowCatalogOption" Path="ItemOption.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogOption" Method="Update"/>
            <ModBy Command="New-SnowCatalogOption" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogOption" Parameter="ItemOption"/>
            <Map ToCommand="New-SnowCatalogOption" Parameter="ItemOption"/>
          </CommandMappings>
        </Property>

        <Property Name="Variable" DataType="String" AccessConstraint="ReadAndInsertOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogOption" Path="Variable.ToString()" />
            <Bind CommandResultOf="Get-SnowCatalogOptionList" Path="Variable.ToString()" />
            <Bind CommandResultOf="Set-SnowCatalogOption" Path="Variable.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowCatalogOption" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowCatalogOption" Parameter="Variable"/>
          </CommandMappings>
        </Property>

        <Property Name="CartItem" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogOption" Path="CartItem.ToString()" />
            <Bind CommandResultOf="Get-SnowCatalogOptionList" Path="CartItem.ToString()" />
            <Bind CommandResultOf="Set-SnowCatalogOption" Path="CartItem.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogOption" Method="Update"/>
            <ModBy Command="New-SnowCatalogOption" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogOption" Parameter="CartItem"/>
            <Map ToCommand="New-SnowCatalogOption" Parameter="CartItem"/>
          </CommandMappings>
        </Property>

        <Property Name="Order" DataType="String" AccessConstraint="ReadOnly">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogOption" Path="Order" />
            <Bind CommandResultOf="Get-SnowCatalogOptionList" Path="Order" />
            <Bind CommandResultOf="Set-SnowCatalogOption" Path="Order" />
          </ReturnBindings>
        </Property>

        <Property Name="Value" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowCatalogOption" Path="Value" />
            <Bind CommandResultOf="Get-SnowCatalogOptionList" Path="Value" />
            <Bind CommandResultOf="Set-SnowCatalogOption" Path="Value" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="Set-SnowCatalogOption" Method="Update"/>
            <ModBy Command="New-SnowCatalogOption" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="Set-SnowCatalogOption" Parameter="Value"/>
            <Map ToCommand="New-SnowCatalogOption" Parameter="Value"/>
          </CommandMappings>
        </Property>

      </Properties>

      <!-- Configuration items for readable types -->
      <ReadConfiguration>
        <ListingCommand Command="Get-SnowCatalogOptionList">
          <SetParameter Param="Filter" Source="ConnectionParameter" DataType="String" Value="SC_Item_Option_Filter"/>
        </ListingCommand>
        <CommandSequence>
          <Item Command="Get-SnowCatalogOption" Order="1"/>
        </CommandSequence>
      </ReadConfiguration>

      <!-- Methods supported by this class -->
      <MethodConfiguration>
        <Method Name="Update">
          <CommandSequence>
            <Item Command="Set-SnowCatalogOption" Order="1" Condition="ModificationExists"/>
          </CommandSequence>
        </Method>
        <Method Name="Insert">
          <CommandSequence>
            <Item Command="New-SnowCatalogOption" Order="1"/>
          </CommandSequence>
        </Method>

      </MethodConfiguration>
    </Class>

    <Class Name="VariableOwnership">
      <Properties>
        <Property Name="Id" DataType="String" AccessConstraint="ReadOnly" IsMandatory="true" IsUniqueKey="true" IsAutoFill="true" IsDisplay="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariableOwnership" Path="Id.ToString()" />
            <Bind CommandResultOf="New-SnowVariableOwnership" Path="Id" />
            <Bind CommandResultOf="Get-SnowVariableOwnershipList" Path="Id.ToString()" />
          </ReturnBindings>
          <CommandMappings>
            <Map ToCommand="Get-SnowVariableOwnership" Parameter="Id" />
          </CommandMappings>
        </Property>

        <Property Name="WhenUpdated" DataType="DateTime" IsRevision="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariableOwnership" Path="WhenUpdated.DateTime"/>
            <Bind CommandResultOf="Get-SnowVariableOwnershipList" Path="WhenUpdated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="WhenCreated" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariableOwnership" Path="WhenCreated.DateTime"/>
            <Bind CommandResultOf="Get-SnowVariableOwnershipList" Path="WhenCreated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="ObjectType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariableOwnership" Path="ObjectType" />
            <Bind CommandResultOf="Get-SnowVariableOwnershipList" Path="ObjectType" />
          </ReturnBindings>
        </Property>

        <Property Name="CreatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariableOwnership" Path="CreatedBy" />
            <Bind CommandResultOf="Get-SnowVariableOwnershipList" Path="CreatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="UpdatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariableOwnership" Path="UpdatedBy" />
            <Bind CommandResultOf="Get-SnowVariableOwnershipList" Path="UpdatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="SysModCount" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariableOwnership" Path="SysModCount" />
            <Bind CommandResultOf="Get-SnowVariableOwnershipList" Path="SysModCount" />
          </ReturnBindings>
        </Property>

        <Property Name="SysTags" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariableOwnership" Path="SysTags" />
            <Bind CommandResultOf="Get-SnowVariableOwnershipList" Path="SysTags" />
          </ReturnBindings>
        </Property>

        <Property Name="CatalogRequestItem" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariableOwnership" Path="CatalogRequestItem.ToString()" />
            <Bind CommandResultOf="Get-SnowVariableOwnershipList" Path="CatalogRequestItem.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowVariableOwnership" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowVariableOwnership" Parameter="CatalogRequestItem"/>
          </CommandMappings>
        </Property>

        <Property Name="CatalogItemOption" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowVariableOwnership" Path="CatalogItemOption.ToString()" />
            <Bind CommandResultOf="Get-SnowVariableOwnershipList" Path="CatalogItemOption.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowVariableOwnership" Method="Insert"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowVariableOwnership" Parameter="CatalogItemOption"/>
          </CommandMappings>
        </Property>
      </Properties>

      <!-- Configuration items for readable types -->
      <ReadConfiguration>
        <ListingCommand Command="Get-SnowVariableOwnershipList">
          <SetParameter Param="Filter" Source="ConnectionParameter" DataType="String" Value="SC_Item_Option_MTOM_Filter"/>
        </ListingCommand>
        <CommandSequence>
          <Item Command="Get-SnowVariableOwnership" Order="1"/>
        </CommandSequence>
      </ReadConfiguration>

      <!-- Methods supported by this class -->
      <MethodConfiguration>
        <Method Name="Insert">
          <CommandSequence>
            <Item Command="New-SnowVariableOwnership" Order="1"/>
          </CommandSequence> 
        </Method>
      </MethodConfiguration>
    </Class>

    <Class Name="BusinessUnit">
      <Properties>
        <Property Name="Id" DataType="String" AccessConstraint="ReadOnly" IsMandatory="true" IsUniqueKey="true" IsAutoFill="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowBusinessUnit" Path="Id.ToString()" />
            <Bind CommandResultOf="New-SnowBusinessUnit" Path="Id" />
            <Bind CommandResultOf="Set-SnowBusinessUnit" Path="Id.ToString()" />
          </ReturnBindings>
          <CommandMappings>
            <Map ToCommand="Get-SnowBusinessUnit" Parameter="Id" />
            <Map ToCommand="Set-SnowBusinessUnit" Parameter="Id" />
          </CommandMappings>
        </Property>

        <Property Name="WhenUpdated" DataType="DateTime" IsRevision="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowBusinessUnit" Path="WhenUpdated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="WhenCreated" DataType="DateTime">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowBusinessUnit" Path="WhenCreated.DateTime"/>
          </ReturnBindings>
        </Property>

        <Property Name="ObjectType" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowBusinessUnit" Path="ObjectType" />
          </ReturnBindings>
        </Property>

        <Property Name="CreatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowBusinessUnit" Path="CreatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="UpdatedBy" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowBusinessUnit" Path="UpdatedBy" />
          </ReturnBindings>
        </Property>

        <Property Name="SysModCount" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowBusinessUnit" Path="SysModCount" />
          </ReturnBindings>
        </Property>

        <Property Name="SysTags" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowBusinessUnit" Path="SysTags" />
          </ReturnBindings>
        </Property>

        <Property Name="Name" DataType="String" IsDisplay="true">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowBusinessUnit" Path="Name" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowBusinessUnit" Method="Insert"/>
            <ModBy Command="Set-SnowBusinessUnit" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowBusinessUnit" Parameter="Name"/>
            <Map ToCommand="Set-SnowBusinessUnit" Parameter="Name"/>
          </CommandMappings>
        </Property>

        <Property Name="BusinessUnitHead" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowBusinessUnit" Path="BuHead.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowBusinessUnit" Method="Insert"/>
            <ModBy Command="Set-SnowBusinessUnit" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowBusinessUnit" Parameter="BuHead"/>
            <Map ToCommand="Set-SnowBusinessUnit" Parameter="BuHead"/>
          </CommandMappings>
        </Property>

        <Property Name="Company" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowBusinessUnit" Path="Company.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowBusinessUnit" Method="Insert"/>
            <ModBy Command="Set-SnowBusinessUnit" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowBusinessUnit" Parameter="Company"/>
            <Map ToCommand="Set-SnowBusinessUnit" Parameter="Company"/>
          </CommandMappings>
        </Property>

        <Property Name="Parent" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowBusinessUnit" Path="Parent.ToString()" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowBusinessUnit" Method="Insert"/>
            <ModBy Command="Set-SnowBusinessUnit" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowBusinessUnit" Parameter="Parent"/>
            <Map ToCommand="Set-SnowBusinessUnit" Parameter="Parent"/>
          </CommandMappings>
        </Property>

        <Property Name="Description" DataType="String">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowBusinessUnit" Path="Description" />
          </ReturnBindings>
          <ModifiedBy>
            <ModBy Command="New-SnowBusinessUnit" Method="Insert"/>
            <ModBy Command="Set-SnowBusinessUnit" Method="Update"/>
          </ModifiedBy>
          <CommandMappings>
            <Map ToCommand="New-SnowBusinessUnit" Parameter="Description"/>
            <Map ToCommand="Set-SnowBusinessUnit" Parameter="Description"/>
          </CommandMappings>
        </Property>

        <Property Name="HierarchyLevel" DataType="Int">
          <ReturnBindings>
            <Bind CommandResultOf="Get-SnowBusinessUnit" Path="HierarchyLevel" />
          </ReturnBindings>
        </Property>

      </Properties>

      <!-- Configuration items for readable types -->
      <ReadConfiguration>
        <ListingCommand Command="Get-SnowBusinessUnit">
          <SetParameter Param="Filter" Source="ConnectionParameter" DataType="String" Value="Business_Unit_Filter"/>
          <SetParameter Param="Select" Source="FixedValue" DataType="String" Value="sys_id,sys_updated_on,name"/>
        </ListingCommand>
        <CommandSequence>
          <Item Command="Get-SnowBusinessUnit" Order="1"/>
        </CommandSequence>
      </ReadConfiguration>

      <!-- Methods supported by this class -->
      <MethodConfiguration>
        <Method Name="Update">
          <CommandSequence>
            <Item Command="Set-SnowBusinessUnit" Order="1" Condition="ModificationExists"/>
          </CommandSequence> 
        </Method>
        <Method Name="Insert">
          <CommandSequence>
            <Item Command="New-SnowBusinessUnit" Order="1"/>
          </CommandSequence> 
        </Method>
      </MethodConfiguration>
    </Class>
  </Schema>
</PowershellConnectorDefinition>